
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.MarcaScalarFieldEnum = {
  id_marca: 'id_marca',
  nombre_marca: 'nombre_marca',
  pais_origen: 'pais_origen'
};

exports.Prisma.Categoria_ProductoScalarFieldEnum = {
  id_categoria: 'id_categoria',
  nombre_categoria: 'nombre_categoria'
};

exports.Prisma.ProveedorScalarFieldEnum = {
  id_proveedor: 'id_proveedor',
  nombre: 'nombre',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id_producto: 'id_producto',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precio: 'precio',
  stock_disponible: 'stock_disponible',
  categoria_id: 'categoria_id',
  proveedor_id: 'proveedor_id',
  marca_id: 'marca_id'
};

exports.Prisma.ClienteScalarFieldEnum = {
  id_cliente: 'id_cliente',
  nombre: 'nombre',
  direccion: 'direccion',
  telefono: 'telefono',
  email: 'email',
  fecha_registro: 'fecha_registro'
};

exports.Prisma.VendedorScalarFieldEnum = {
  id_vendedor: 'id_vendedor',
  nombre: 'nombre',
  telefono: 'telefono',
  email: 'email'
};

exports.Prisma.Factura_MaestroScalarFieldEnum = {
  id_factura_maestro: 'id_factura_maestro',
  numero_factura: 'numero_factura',
  cliente_id: 'cliente_id',
  fecha_factura: 'fecha_factura',
  nit_cliente: 'nit_cliente',
  total: 'total',
  total_pagado: 'total_pagado',
  estado_factura: 'estado_factura',
  metodo_pago: 'metodo_pago'
};

exports.Prisma.Factura_DetalleScalarFieldEnum = {
  id_factura_detalle: 'id_factura_detalle',
  factura_maestro_id: 'factura_maestro_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  precio_unitario: 'precio_unitario',
  total_producto: 'total_producto'
};

exports.Prisma.InventarioScalarFieldEnum = {
  id_inventario: 'id_inventario',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  fecha_movimiento: 'fecha_movimiento',
  tipo_movimiento: 'tipo_movimiento'
};

exports.Prisma.SucursalScalarFieldEnum = {
  id_sucursal: 'id_sucursal',
  nombre_sucursal: 'nombre_sucursal',
  direccion: 'direccion',
  telefono: 'telefono'
};

exports.Prisma.VentaScalarFieldEnum = {
  id_venta: 'id_venta',
  sucursal_id: 'sucursal_id',
  total_venta: 'total_venta',
  fecha_venta: 'fecha_venta',
  numero_facturas: 'numero_facturas'
};

exports.Prisma.Venta_Factura_MaestroScalarFieldEnum = {
  id_venta_factura: 'id_venta_factura',
  venta_id: 'venta_id',
  factura_maestro_id: 'factura_maestro_id'
};

exports.Prisma.DescuentoScalarFieldEnum = {
  id_descuento: 'id_descuento',
  nombre_descuento: 'nombre_descuento',
  porcentaje: 'porcentaje',
  monto_fijo: 'monto_fijo',
  fecha_inicio: 'fecha_inicio',
  fecha_fin: 'fecha_fin'
};

exports.Prisma.Producto_DescuentoScalarFieldEnum = {
  id_producto_descuento: 'id_producto_descuento',
  producto_id: 'producto_id',
  descuento_id: 'descuento_id',
  cantidad_aplicada: 'cantidad_aplicada'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Marca: 'Marca',
  Categoria_Producto: 'Categoria_Producto',
  Proveedor: 'Proveedor',
  Producto: 'Producto',
  Cliente: 'Cliente',
  Vendedor: 'Vendedor',
  Factura_Maestro: 'Factura_Maestro',
  Factura_Detalle: 'Factura_Detalle',
  Inventario: 'Inventario',
  Sucursal: 'Sucursal',
  Venta: 'Venta',
  Venta_Factura_Maestro: 'Venta_Factura_Maestro',
  Descuento: 'Descuento',
  Producto_Descuento: 'Producto_Descuento'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
