
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Marca
 * 
 */
export type Marca = $Result.DefaultSelection<Prisma.$MarcaPayload>
/**
 * Model Categoria_Producto
 * 
 */
export type Categoria_Producto = $Result.DefaultSelection<Prisma.$Categoria_ProductoPayload>
/**
 * Model Proveedor
 * 
 */
export type Proveedor = $Result.DefaultSelection<Prisma.$ProveedorPayload>
/**
 * Model Producto
 * 
 */
export type Producto = $Result.DefaultSelection<Prisma.$ProductoPayload>
/**
 * Model Cliente
 * 
 */
export type Cliente = $Result.DefaultSelection<Prisma.$ClientePayload>
/**
 * Model Vendedor
 * 
 */
export type Vendedor = $Result.DefaultSelection<Prisma.$VendedorPayload>
/**
 * Model Factura_Maestro
 * 
 */
export type Factura_Maestro = $Result.DefaultSelection<Prisma.$Factura_MaestroPayload>
/**
 * Model Factura_Detalle
 * 
 */
export type Factura_Detalle = $Result.DefaultSelection<Prisma.$Factura_DetallePayload>
/**
 * Model Inventario
 * 
 */
export type Inventario = $Result.DefaultSelection<Prisma.$InventarioPayload>
/**
 * Model Sucursal
 * 
 */
export type Sucursal = $Result.DefaultSelection<Prisma.$SucursalPayload>
/**
 * Model Venta
 * 
 */
export type Venta = $Result.DefaultSelection<Prisma.$VentaPayload>
/**
 * Model Venta_Factura_Maestro
 * 
 */
export type Venta_Factura_Maestro = $Result.DefaultSelection<Prisma.$Venta_Factura_MaestroPayload>
/**
 * Model Descuento
 * 
 */
export type Descuento = $Result.DefaultSelection<Prisma.$DescuentoPayload>
/**
 * Model Producto_Descuento
 * 
 */
export type Producto_Descuento = $Result.DefaultSelection<Prisma.$Producto_DescuentoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Marcas
 * const marcas = await prisma.marca.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Marcas
   * const marcas = await prisma.marca.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.marca`: Exposes CRUD operations for the **Marca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Marcas
    * const marcas = await prisma.marca.findMany()
    * ```
    */
  get marca(): Prisma.MarcaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoria_Producto`: Exposes CRUD operations for the **Categoria_Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoria_Productos
    * const categoria_Productos = await prisma.categoria_Producto.findMany()
    * ```
    */
  get categoria_Producto(): Prisma.Categoria_ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proveedor`: Exposes CRUD operations for the **Proveedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedors
    * const proveedors = await prisma.proveedor.findMany()
    * ```
    */
  get proveedor(): Prisma.ProveedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto`: Exposes CRUD operations for the **Producto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.producto.findMany()
    * ```
    */
  get producto(): Prisma.ProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cliente`: Exposes CRUD operations for the **Cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.ClienteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vendedor`: Exposes CRUD operations for the **Vendedor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vendedors
    * const vendedors = await prisma.vendedor.findMany()
    * ```
    */
  get vendedor(): Prisma.VendedorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.factura_Maestro`: Exposes CRUD operations for the **Factura_Maestro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Factura_Maestros
    * const factura_Maestros = await prisma.factura_Maestro.findMany()
    * ```
    */
  get factura_Maestro(): Prisma.Factura_MaestroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.factura_Detalle`: Exposes CRUD operations for the **Factura_Detalle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Factura_Detalles
    * const factura_Detalles = await prisma.factura_Detalle.findMany()
    * ```
    */
  get factura_Detalle(): Prisma.Factura_DetalleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.inventario`: Exposes CRUD operations for the **Inventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inventarios
    * const inventarios = await prisma.inventario.findMany()
    * ```
    */
  get inventario(): Prisma.InventarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sucursal`: Exposes CRUD operations for the **Sucursal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sucursals
    * const sucursals = await prisma.sucursal.findMany()
    * ```
    */
  get sucursal(): Prisma.SucursalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta`: Exposes CRUD operations for the **Venta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.venta.findMany()
    * ```
    */
  get venta(): Prisma.VentaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.venta_Factura_Maestro`: Exposes CRUD operations for the **Venta_Factura_Maestro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Venta_Factura_Maestros
    * const venta_Factura_Maestros = await prisma.venta_Factura_Maestro.findMany()
    * ```
    */
  get venta_Factura_Maestro(): Prisma.Venta_Factura_MaestroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.descuento`: Exposes CRUD operations for the **Descuento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Descuentos
    * const descuentos = await prisma.descuento.findMany()
    * ```
    */
  get descuento(): Prisma.DescuentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.producto_Descuento`: Exposes CRUD operations for the **Producto_Descuento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Producto_Descuentos
    * const producto_Descuentos = await prisma.producto_Descuento.findMany()
    * ```
    */
  get producto_Descuento(): Prisma.Producto_DescuentoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Marca: 'Marca',
    Categoria_Producto: 'Categoria_Producto',
    Proveedor: 'Proveedor',
    Producto: 'Producto',
    Cliente: 'Cliente',
    Vendedor: 'Vendedor',
    Factura_Maestro: 'Factura_Maestro',
    Factura_Detalle: 'Factura_Detalle',
    Inventario: 'Inventario',
    Sucursal: 'Sucursal',
    Venta: 'Venta',
    Venta_Factura_Maestro: 'Venta_Factura_Maestro',
    Descuento: 'Descuento',
    Producto_Descuento: 'Producto_Descuento'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "marca" | "categoria_Producto" | "proveedor" | "producto" | "cliente" | "vendedor" | "factura_Maestro" | "factura_Detalle" | "inventario" | "sucursal" | "venta" | "venta_Factura_Maestro" | "descuento" | "producto_Descuento"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Marca: {
        payload: Prisma.$MarcaPayload<ExtArgs>
        fields: Prisma.MarcaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarcaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarcaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          findFirst: {
            args: Prisma.MarcaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarcaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          findMany: {
            args: Prisma.MarcaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>[]
          }
          create: {
            args: Prisma.MarcaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          createMany: {
            args: Prisma.MarcaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarcaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>[]
          }
          delete: {
            args: Prisma.MarcaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          update: {
            args: Prisma.MarcaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          deleteMany: {
            args: Prisma.MarcaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarcaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MarcaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>[]
          }
          upsert: {
            args: Prisma.MarcaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarcaPayload>
          }
          aggregate: {
            args: Prisma.MarcaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarca>
          }
          groupBy: {
            args: Prisma.MarcaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarcaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarcaCountArgs<ExtArgs>
            result: $Utils.Optional<MarcaCountAggregateOutputType> | number
          }
        }
      }
      Categoria_Producto: {
        payload: Prisma.$Categoria_ProductoPayload<ExtArgs>
        fields: Prisma.Categoria_ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Categoria_ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Categoria_ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          findFirst: {
            args: Prisma.Categoria_ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Categoria_ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          findMany: {
            args: Prisma.Categoria_ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>[]
          }
          create: {
            args: Prisma.Categoria_ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          createMany: {
            args: Prisma.Categoria_ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Categoria_ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>[]
          }
          delete: {
            args: Prisma.Categoria_ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          update: {
            args: Prisma.Categoria_ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          deleteMany: {
            args: Prisma.Categoria_ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Categoria_ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Categoria_ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>[]
          }
          upsert: {
            args: Prisma.Categoria_ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categoria_ProductoPayload>
          }
          aggregate: {
            args: Prisma.Categoria_ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoria_Producto>
          }
          groupBy: {
            args: Prisma.Categoria_ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Categoria_ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Categoria_ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<Categoria_ProductoCountAggregateOutputType> | number
          }
        }
      }
      Proveedor: {
        payload: Prisma.$ProveedorPayload<ExtArgs>
        fields: Prisma.ProveedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProveedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProveedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          findFirst: {
            args: Prisma.ProveedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProveedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          findMany: {
            args: Prisma.ProveedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>[]
          }
          create: {
            args: Prisma.ProveedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          createMany: {
            args: Prisma.ProveedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProveedorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>[]
          }
          delete: {
            args: Prisma.ProveedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          update: {
            args: Prisma.ProveedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          deleteMany: {
            args: Prisma.ProveedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProveedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProveedorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>[]
          }
          upsert: {
            args: Prisma.ProveedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProveedorPayload>
          }
          aggregate: {
            args: Prisma.ProveedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedor>
          }
          groupBy: {
            args: Prisma.ProveedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProveedorCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedorCountAggregateOutputType> | number
          }
        }
      }
      Producto: {
        payload: Prisma.$ProductoPayload<ExtArgs>
        fields: Prisma.ProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findFirst: {
            args: Prisma.ProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          findMany: {
            args: Prisma.ProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          create: {
            args: Prisma.ProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          createMany: {
            args: Prisma.ProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          delete: {
            args: Prisma.ProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          update: {
            args: Prisma.ProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          deleteMany: {
            args: Prisma.ProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>[]
          }
          upsert: {
            args: Prisma.ProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductoPayload>
          }
          aggregate: {
            args: Prisma.ProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto>
          }
          groupBy: {
            args: Prisma.ProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ProductoCountAggregateOutputType> | number
          }
        }
      }
      Cliente: {
        payload: Prisma.$ClientePayload<ExtArgs>
        fields: Prisma.ClienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findFirst: {
            args: Prisma.ClienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          findMany: {
            args: Prisma.ClienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          create: {
            args: Prisma.ClienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          createMany: {
            args: Prisma.ClienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClienteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          delete: {
            args: Prisma.ClienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          update: {
            args: Prisma.ClienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          deleteMany: {
            args: Prisma.ClienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClienteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>[]
          }
          upsert: {
            args: Prisma.ClienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.ClienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      Vendedor: {
        payload: Prisma.$VendedorPayload<ExtArgs>
        fields: Prisma.VendedorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VendedorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VendedorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          findFirst: {
            args: Prisma.VendedorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VendedorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          findMany: {
            args: Prisma.VendedorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>[]
          }
          create: {
            args: Prisma.VendedorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          createMany: {
            args: Prisma.VendedorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VendedorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>[]
          }
          delete: {
            args: Prisma.VendedorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          update: {
            args: Prisma.VendedorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          deleteMany: {
            args: Prisma.VendedorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VendedorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VendedorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>[]
          }
          upsert: {
            args: Prisma.VendedorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VendedorPayload>
          }
          aggregate: {
            args: Prisma.VendedorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVendedor>
          }
          groupBy: {
            args: Prisma.VendedorGroupByArgs<ExtArgs>
            result: $Utils.Optional<VendedorGroupByOutputType>[]
          }
          count: {
            args: Prisma.VendedorCountArgs<ExtArgs>
            result: $Utils.Optional<VendedorCountAggregateOutputType> | number
          }
        }
      }
      Factura_Maestro: {
        payload: Prisma.$Factura_MaestroPayload<ExtArgs>
        fields: Prisma.Factura_MaestroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Factura_MaestroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Factura_MaestroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          findFirst: {
            args: Prisma.Factura_MaestroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Factura_MaestroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          findMany: {
            args: Prisma.Factura_MaestroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>[]
          }
          create: {
            args: Prisma.Factura_MaestroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          createMany: {
            args: Prisma.Factura_MaestroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Factura_MaestroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>[]
          }
          delete: {
            args: Prisma.Factura_MaestroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          update: {
            args: Prisma.Factura_MaestroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          deleteMany: {
            args: Prisma.Factura_MaestroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Factura_MaestroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Factura_MaestroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>[]
          }
          upsert: {
            args: Prisma.Factura_MaestroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_MaestroPayload>
          }
          aggregate: {
            args: Prisma.Factura_MaestroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFactura_Maestro>
          }
          groupBy: {
            args: Prisma.Factura_MaestroGroupByArgs<ExtArgs>
            result: $Utils.Optional<Factura_MaestroGroupByOutputType>[]
          }
          count: {
            args: Prisma.Factura_MaestroCountArgs<ExtArgs>
            result: $Utils.Optional<Factura_MaestroCountAggregateOutputType> | number
          }
        }
      }
      Factura_Detalle: {
        payload: Prisma.$Factura_DetallePayload<ExtArgs>
        fields: Prisma.Factura_DetalleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Factura_DetalleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Factura_DetalleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          findFirst: {
            args: Prisma.Factura_DetalleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Factura_DetalleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          findMany: {
            args: Prisma.Factura_DetalleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>[]
          }
          create: {
            args: Prisma.Factura_DetalleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          createMany: {
            args: Prisma.Factura_DetalleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Factura_DetalleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>[]
          }
          delete: {
            args: Prisma.Factura_DetalleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          update: {
            args: Prisma.Factura_DetalleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          deleteMany: {
            args: Prisma.Factura_DetalleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Factura_DetalleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Factura_DetalleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>[]
          }
          upsert: {
            args: Prisma.Factura_DetalleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Factura_DetallePayload>
          }
          aggregate: {
            args: Prisma.Factura_DetalleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFactura_Detalle>
          }
          groupBy: {
            args: Prisma.Factura_DetalleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Factura_DetalleGroupByOutputType>[]
          }
          count: {
            args: Prisma.Factura_DetalleCountArgs<ExtArgs>
            result: $Utils.Optional<Factura_DetalleCountAggregateOutputType> | number
          }
        }
      }
      Inventario: {
        payload: Prisma.$InventarioPayload<ExtArgs>
        fields: Prisma.InventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findFirst: {
            args: Prisma.InventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          findMany: {
            args: Prisma.InventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          create: {
            args: Prisma.InventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          createMany: {
            args: Prisma.InventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          delete: {
            args: Prisma.InventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          update: {
            args: Prisma.InventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          deleteMany: {
            args: Prisma.InventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InventarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>[]
          }
          upsert: {
            args: Prisma.InventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InventarioPayload>
          }
          aggregate: {
            args: Prisma.InventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInventario>
          }
          groupBy: {
            args: Prisma.InventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<InventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.InventarioCountArgs<ExtArgs>
            result: $Utils.Optional<InventarioCountAggregateOutputType> | number
          }
        }
      }
      Sucursal: {
        payload: Prisma.$SucursalPayload<ExtArgs>
        fields: Prisma.SucursalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SucursalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SucursalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          findFirst: {
            args: Prisma.SucursalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SucursalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          findMany: {
            args: Prisma.SucursalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>[]
          }
          create: {
            args: Prisma.SucursalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          createMany: {
            args: Prisma.SucursalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SucursalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>[]
          }
          delete: {
            args: Prisma.SucursalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          update: {
            args: Prisma.SucursalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          deleteMany: {
            args: Prisma.SucursalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SucursalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SucursalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>[]
          }
          upsert: {
            args: Prisma.SucursalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SucursalPayload>
          }
          aggregate: {
            args: Prisma.SucursalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSucursal>
          }
          groupBy: {
            args: Prisma.SucursalGroupByArgs<ExtArgs>
            result: $Utils.Optional<SucursalGroupByOutputType>[]
          }
          count: {
            args: Prisma.SucursalCountArgs<ExtArgs>
            result: $Utils.Optional<SucursalCountAggregateOutputType> | number
          }
        }
      }
      Venta: {
        payload: Prisma.$VentaPayload<ExtArgs>
        fields: Prisma.VentaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VentaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VentaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findFirst: {
            args: Prisma.VentaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VentaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          findMany: {
            args: Prisma.VentaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          create: {
            args: Prisma.VentaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          createMany: {
            args: Prisma.VentaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VentaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          delete: {
            args: Prisma.VentaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          update: {
            args: Prisma.VentaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          deleteMany: {
            args: Prisma.VentaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VentaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VentaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>[]
          }
          upsert: {
            args: Prisma.VentaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VentaPayload>
          }
          aggregate: {
            args: Prisma.VentaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta>
          }
          groupBy: {
            args: Prisma.VentaGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentaGroupByOutputType>[]
          }
          count: {
            args: Prisma.VentaCountArgs<ExtArgs>
            result: $Utils.Optional<VentaCountAggregateOutputType> | number
          }
        }
      }
      Venta_Factura_Maestro: {
        payload: Prisma.$Venta_Factura_MaestroPayload<ExtArgs>
        fields: Prisma.Venta_Factura_MaestroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Venta_Factura_MaestroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Venta_Factura_MaestroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          findFirst: {
            args: Prisma.Venta_Factura_MaestroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Venta_Factura_MaestroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          findMany: {
            args: Prisma.Venta_Factura_MaestroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>[]
          }
          create: {
            args: Prisma.Venta_Factura_MaestroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          createMany: {
            args: Prisma.Venta_Factura_MaestroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Venta_Factura_MaestroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>[]
          }
          delete: {
            args: Prisma.Venta_Factura_MaestroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          update: {
            args: Prisma.Venta_Factura_MaestroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          deleteMany: {
            args: Prisma.Venta_Factura_MaestroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Venta_Factura_MaestroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Venta_Factura_MaestroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>[]
          }
          upsert: {
            args: Prisma.Venta_Factura_MaestroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Venta_Factura_MaestroPayload>
          }
          aggregate: {
            args: Prisma.Venta_Factura_MaestroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVenta_Factura_Maestro>
          }
          groupBy: {
            args: Prisma.Venta_Factura_MaestroGroupByArgs<ExtArgs>
            result: $Utils.Optional<Venta_Factura_MaestroGroupByOutputType>[]
          }
          count: {
            args: Prisma.Venta_Factura_MaestroCountArgs<ExtArgs>
            result: $Utils.Optional<Venta_Factura_MaestroCountAggregateOutputType> | number
          }
        }
      }
      Descuento: {
        payload: Prisma.$DescuentoPayload<ExtArgs>
        fields: Prisma.DescuentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DescuentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DescuentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          findFirst: {
            args: Prisma.DescuentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DescuentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          findMany: {
            args: Prisma.DescuentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          create: {
            args: Prisma.DescuentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          createMany: {
            args: Prisma.DescuentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DescuentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          delete: {
            args: Prisma.DescuentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          update: {
            args: Prisma.DescuentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          deleteMany: {
            args: Prisma.DescuentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DescuentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DescuentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>[]
          }
          upsert: {
            args: Prisma.DescuentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescuentoPayload>
          }
          aggregate: {
            args: Prisma.DescuentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescuento>
          }
          groupBy: {
            args: Prisma.DescuentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DescuentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DescuentoCountArgs<ExtArgs>
            result: $Utils.Optional<DescuentoCountAggregateOutputType> | number
          }
        }
      }
      Producto_Descuento: {
        payload: Prisma.$Producto_DescuentoPayload<ExtArgs>
        fields: Prisma.Producto_DescuentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Producto_DescuentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Producto_DescuentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          findFirst: {
            args: Prisma.Producto_DescuentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Producto_DescuentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          findMany: {
            args: Prisma.Producto_DescuentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>[]
          }
          create: {
            args: Prisma.Producto_DescuentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          createMany: {
            args: Prisma.Producto_DescuentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Producto_DescuentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>[]
          }
          delete: {
            args: Prisma.Producto_DescuentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          update: {
            args: Prisma.Producto_DescuentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          deleteMany: {
            args: Prisma.Producto_DescuentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Producto_DescuentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Producto_DescuentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>[]
          }
          upsert: {
            args: Prisma.Producto_DescuentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Producto_DescuentoPayload>
          }
          aggregate: {
            args: Prisma.Producto_DescuentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducto_Descuento>
          }
          groupBy: {
            args: Prisma.Producto_DescuentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Producto_DescuentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.Producto_DescuentoCountArgs<ExtArgs>
            result: $Utils.Optional<Producto_DescuentoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    marca?: MarcaOmit
    categoria_Producto?: Categoria_ProductoOmit
    proveedor?: ProveedorOmit
    producto?: ProductoOmit
    cliente?: ClienteOmit
    vendedor?: VendedorOmit
    factura_Maestro?: Factura_MaestroOmit
    factura_Detalle?: Factura_DetalleOmit
    inventario?: InventarioOmit
    sucursal?: SucursalOmit
    venta?: VentaOmit
    venta_Factura_Maestro?: Venta_Factura_MaestroOmit
    descuento?: DescuentoOmit
    producto_Descuento?: Producto_DescuentoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MarcaCountOutputType
   */

  export type MarcaCountOutputType = {
    productos: number
  }

  export type MarcaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | MarcaCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * MarcaCountOutputType without action
   */
  export type MarcaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarcaCountOutputType
     */
    select?: MarcaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarcaCountOutputType without action
   */
  export type MarcaCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type Categoria_ProductoCountOutputType
   */

  export type Categoria_ProductoCountOutputType = {
    productos: number
  }

  export type Categoria_ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Categoria_ProductoCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * Categoria_ProductoCountOutputType without action
   */
  export type Categoria_ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_ProductoCountOutputType
     */
    select?: Categoria_ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Categoria_ProductoCountOutputType without action
   */
  export type Categoria_ProductoCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type ProveedorCountOutputType
   */

  export type ProveedorCountOutputType = {
    productos: number
  }

  export type ProveedorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | ProveedorCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedorCountOutputType
     */
    select?: ProveedorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedorCountOutputType without action
   */
  export type ProveedorCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
  }


  /**
   * Count Type ProductoCountOutputType
   */

  export type ProductoCountOutputType = {
    detallesFactura: number
    inventarios: number
    descuentos: number
  }

  export type ProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detallesFactura?: boolean | ProductoCountOutputTypeCountDetallesFacturaArgs
    inventarios?: boolean | ProductoCountOutputTypeCountInventariosArgs
    descuentos?: boolean | ProductoCountOutputTypeCountDescuentosArgs
  }

  // Custom InputTypes
  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductoCountOutputType
     */
    select?: ProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDetallesFacturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Factura_DetalleWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountInventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
  }

  /**
   * ProductoCountOutputType without action
   */
  export type ProductoCountOutputTypeCountDescuentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Producto_DescuentoWhereInput
  }


  /**
   * Count Type ClienteCountOutputType
   */

  export type ClienteCountOutputType = {
    facturas: number
  }

  export type ClienteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | ClienteCountOutputTypeCountFacturasArgs
  }

  // Custom InputTypes
  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClienteCountOutputType
     */
    select?: ClienteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClienteCountOutputType without action
   */
  export type ClienteCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Factura_MaestroWhereInput
  }


  /**
   * Count Type Factura_MaestroCountOutputType
   */

  export type Factura_MaestroCountOutputType = {
    detalles: number
    ventas: number
  }

  export type Factura_MaestroCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalles?: boolean | Factura_MaestroCountOutputTypeCountDetallesArgs
    ventas?: boolean | Factura_MaestroCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * Factura_MaestroCountOutputType without action
   */
  export type Factura_MaestroCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_MaestroCountOutputType
     */
    select?: Factura_MaestroCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Factura_MaestroCountOutputType without action
   */
  export type Factura_MaestroCountOutputTypeCountDetallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Factura_DetalleWhereInput
  }

  /**
   * Factura_MaestroCountOutputType without action
   */
  export type Factura_MaestroCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Venta_Factura_MaestroWhereInput
  }


  /**
   * Count Type SucursalCountOutputType
   */

  export type SucursalCountOutputType = {
    ventas: number
  }

  export type SucursalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | SucursalCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SucursalCountOutputType
     */
    select?: SucursalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SucursalCountOutputType without action
   */
  export type SucursalCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
  }


  /**
   * Count Type VentaCountOutputType
   */

  export type VentaCountOutputType = {
    facturas: number
  }

  export type VentaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | VentaCountOutputTypeCountFacturasArgs
  }

  // Custom InputTypes
  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentaCountOutputType
     */
    select?: VentaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentaCountOutputType without action
   */
  export type VentaCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Venta_Factura_MaestroWhereInput
  }


  /**
   * Count Type DescuentoCountOutputType
   */

  export type DescuentoCountOutputType = {
    productos: number
  }

  export type DescuentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | DescuentoCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * DescuentoCountOutputType without action
   */
  export type DescuentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescuentoCountOutputType
     */
    select?: DescuentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DescuentoCountOutputType without action
   */
  export type DescuentoCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Producto_DescuentoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Marca
   */

  export type AggregateMarca = {
    _count: MarcaCountAggregateOutputType | null
    _avg: MarcaAvgAggregateOutputType | null
    _sum: MarcaSumAggregateOutputType | null
    _min: MarcaMinAggregateOutputType | null
    _max: MarcaMaxAggregateOutputType | null
  }

  export type MarcaAvgAggregateOutputType = {
    id_marca: number | null
  }

  export type MarcaSumAggregateOutputType = {
    id_marca: number | null
  }

  export type MarcaMinAggregateOutputType = {
    id_marca: number | null
    nombre_marca: string | null
    pais_origen: string | null
  }

  export type MarcaMaxAggregateOutputType = {
    id_marca: number | null
    nombre_marca: string | null
    pais_origen: string | null
  }

  export type MarcaCountAggregateOutputType = {
    id_marca: number
    nombre_marca: number
    pais_origen: number
    _all: number
  }


  export type MarcaAvgAggregateInputType = {
    id_marca?: true
  }

  export type MarcaSumAggregateInputType = {
    id_marca?: true
  }

  export type MarcaMinAggregateInputType = {
    id_marca?: true
    nombre_marca?: true
    pais_origen?: true
  }

  export type MarcaMaxAggregateInputType = {
    id_marca?: true
    nombre_marca?: true
    pais_origen?: true
  }

  export type MarcaCountAggregateInputType = {
    id_marca?: true
    nombre_marca?: true
    pais_origen?: true
    _all?: true
  }

  export type MarcaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marca to aggregate.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Marcas
    **/
    _count?: true | MarcaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarcaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarcaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarcaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarcaMaxAggregateInputType
  }

  export type GetMarcaAggregateType<T extends MarcaAggregateArgs> = {
        [P in keyof T & keyof AggregateMarca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarca[P]>
      : GetScalarType<T[P], AggregateMarca[P]>
  }




  export type MarcaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarcaWhereInput
    orderBy?: MarcaOrderByWithAggregationInput | MarcaOrderByWithAggregationInput[]
    by: MarcaScalarFieldEnum[] | MarcaScalarFieldEnum
    having?: MarcaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarcaCountAggregateInputType | true
    _avg?: MarcaAvgAggregateInputType
    _sum?: MarcaSumAggregateInputType
    _min?: MarcaMinAggregateInputType
    _max?: MarcaMaxAggregateInputType
  }

  export type MarcaGroupByOutputType = {
    id_marca: number
    nombre_marca: string
    pais_origen: string | null
    _count: MarcaCountAggregateOutputType | null
    _avg: MarcaAvgAggregateOutputType | null
    _sum: MarcaSumAggregateOutputType | null
    _min: MarcaMinAggregateOutputType | null
    _max: MarcaMaxAggregateOutputType | null
  }

  type GetMarcaGroupByPayload<T extends MarcaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarcaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarcaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarcaGroupByOutputType[P]>
            : GetScalarType<T[P], MarcaGroupByOutputType[P]>
        }
      >
    >


  export type MarcaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_marca?: boolean
    nombre_marca?: boolean
    pais_origen?: boolean
    productos?: boolean | Marca$productosArgs<ExtArgs>
    _count?: boolean | MarcaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marca"]>

  export type MarcaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_marca?: boolean
    nombre_marca?: boolean
    pais_origen?: boolean
  }, ExtArgs["result"]["marca"]>

  export type MarcaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_marca?: boolean
    nombre_marca?: boolean
    pais_origen?: boolean
  }, ExtArgs["result"]["marca"]>

  export type MarcaSelectScalar = {
    id_marca?: boolean
    nombre_marca?: boolean
    pais_origen?: boolean
  }

  export type MarcaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_marca" | "nombre_marca" | "pais_origen", ExtArgs["result"]["marca"]>
  export type MarcaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Marca$productosArgs<ExtArgs>
    _count?: boolean | MarcaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarcaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type MarcaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MarcaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Marca"
    objects: {
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_marca: number
      nombre_marca: string
      pais_origen: string | null
    }, ExtArgs["result"]["marca"]>
    composites: {}
  }

  type MarcaGetPayload<S extends boolean | null | undefined | MarcaDefaultArgs> = $Result.GetResult<Prisma.$MarcaPayload, S>

  type MarcaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MarcaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MarcaCountAggregateInputType | true
    }

  export interface MarcaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Marca'], meta: { name: 'Marca' } }
    /**
     * Find zero or one Marca that matches the filter.
     * @param {MarcaFindUniqueArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarcaFindUniqueArgs>(args: SelectSubset<T, MarcaFindUniqueArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Marca that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MarcaFindUniqueOrThrowArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarcaFindUniqueOrThrowArgs>(args: SelectSubset<T, MarcaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindFirstArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarcaFindFirstArgs>(args?: SelectSubset<T, MarcaFindFirstArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Marca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindFirstOrThrowArgs} args - Arguments to find a Marca
     * @example
     * // Get one Marca
     * const marca = await prisma.marca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarcaFindFirstOrThrowArgs>(args?: SelectSubset<T, MarcaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Marcas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Marcas
     * const marcas = await prisma.marca.findMany()
     * 
     * // Get first 10 Marcas
     * const marcas = await prisma.marca.findMany({ take: 10 })
     * 
     * // Only select the `id_marca`
     * const marcaWithId_marcaOnly = await prisma.marca.findMany({ select: { id_marca: true } })
     * 
     */
    findMany<T extends MarcaFindManyArgs>(args?: SelectSubset<T, MarcaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Marca.
     * @param {MarcaCreateArgs} args - Arguments to create a Marca.
     * @example
     * // Create one Marca
     * const Marca = await prisma.marca.create({
     *   data: {
     *     // ... data to create a Marca
     *   }
     * })
     * 
     */
    create<T extends MarcaCreateArgs>(args: SelectSubset<T, MarcaCreateArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Marcas.
     * @param {MarcaCreateManyArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marca = await prisma.marca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarcaCreateManyArgs>(args?: SelectSubset<T, MarcaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Marcas and returns the data saved in the database.
     * @param {MarcaCreateManyAndReturnArgs} args - Arguments to create many Marcas.
     * @example
     * // Create many Marcas
     * const marca = await prisma.marca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Marcas and only return the `id_marca`
     * const marcaWithId_marcaOnly = await prisma.marca.createManyAndReturn({
     *   select: { id_marca: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarcaCreateManyAndReturnArgs>(args?: SelectSubset<T, MarcaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Marca.
     * @param {MarcaDeleteArgs} args - Arguments to delete one Marca.
     * @example
     * // Delete one Marca
     * const Marca = await prisma.marca.delete({
     *   where: {
     *     // ... filter to delete one Marca
     *   }
     * })
     * 
     */
    delete<T extends MarcaDeleteArgs>(args: SelectSubset<T, MarcaDeleteArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Marca.
     * @param {MarcaUpdateArgs} args - Arguments to update one Marca.
     * @example
     * // Update one Marca
     * const marca = await prisma.marca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarcaUpdateArgs>(args: SelectSubset<T, MarcaUpdateArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Marcas.
     * @param {MarcaDeleteManyArgs} args - Arguments to filter Marcas to delete.
     * @example
     * // Delete a few Marcas
     * const { count } = await prisma.marca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarcaDeleteManyArgs>(args?: SelectSubset<T, MarcaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Marcas
     * const marca = await prisma.marca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarcaUpdateManyArgs>(args: SelectSubset<T, MarcaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Marcas and returns the data updated in the database.
     * @param {MarcaUpdateManyAndReturnArgs} args - Arguments to update many Marcas.
     * @example
     * // Update many Marcas
     * const marca = await prisma.marca.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Marcas and only return the `id_marca`
     * const marcaWithId_marcaOnly = await prisma.marca.updateManyAndReturn({
     *   select: { id_marca: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MarcaUpdateManyAndReturnArgs>(args: SelectSubset<T, MarcaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Marca.
     * @param {MarcaUpsertArgs} args - Arguments to update or create a Marca.
     * @example
     * // Update or create a Marca
     * const marca = await prisma.marca.upsert({
     *   create: {
     *     // ... data to create a Marca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Marca we want to update
     *   }
     * })
     */
    upsert<T extends MarcaUpsertArgs>(args: SelectSubset<T, MarcaUpsertArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Marcas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaCountArgs} args - Arguments to filter Marcas to count.
     * @example
     * // Count the number of Marcas
     * const count = await prisma.marca.count({
     *   where: {
     *     // ... the filter for the Marcas we want to count
     *   }
     * })
    **/
    count<T extends MarcaCountArgs>(
      args?: Subset<T, MarcaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarcaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarcaAggregateArgs>(args: Subset<T, MarcaAggregateArgs>): Prisma.PrismaPromise<GetMarcaAggregateType<T>>

    /**
     * Group by Marca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarcaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarcaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarcaGroupByArgs['orderBy'] }
        : { orderBy?: MarcaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarcaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarcaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Marca model
   */
  readonly fields: MarcaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Marca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarcaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Marca$productosArgs<ExtArgs> = {}>(args?: Subset<T, Marca$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Marca model
   */
  interface MarcaFieldRefs {
    readonly id_marca: FieldRef<"Marca", 'Int'>
    readonly nombre_marca: FieldRef<"Marca", 'String'>
    readonly pais_origen: FieldRef<"Marca", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Marca findUnique
   */
  export type MarcaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca findUniqueOrThrow
   */
  export type MarcaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca findFirst
   */
  export type MarcaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca findFirstOrThrow
   */
  export type MarcaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marca to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Marcas.
     */
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca findMany
   */
  export type MarcaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter, which Marcas to fetch.
     */
    where?: MarcaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Marcas to fetch.
     */
    orderBy?: MarcaOrderByWithRelationInput | MarcaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Marcas.
     */
    cursor?: MarcaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Marcas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Marcas.
     */
    skip?: number
    distinct?: MarcaScalarFieldEnum | MarcaScalarFieldEnum[]
  }

  /**
   * Marca create
   */
  export type MarcaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The data needed to create a Marca.
     */
    data: XOR<MarcaCreateInput, MarcaUncheckedCreateInput>
  }

  /**
   * Marca createMany
   */
  export type MarcaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Marcas.
     */
    data: MarcaCreateManyInput | MarcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marca createManyAndReturn
   */
  export type MarcaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * The data used to create many Marcas.
     */
    data: MarcaCreateManyInput | MarcaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Marca update
   */
  export type MarcaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The data needed to update a Marca.
     */
    data: XOR<MarcaUpdateInput, MarcaUncheckedUpdateInput>
    /**
     * Choose, which Marca to update.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca updateMany
   */
  export type MarcaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Marcas.
     */
    data: XOR<MarcaUpdateManyMutationInput, MarcaUncheckedUpdateManyInput>
    /**
     * Filter which Marcas to update
     */
    where?: MarcaWhereInput
    /**
     * Limit how many Marcas to update.
     */
    limit?: number
  }

  /**
   * Marca updateManyAndReturn
   */
  export type MarcaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * The data used to update Marcas.
     */
    data: XOR<MarcaUpdateManyMutationInput, MarcaUncheckedUpdateManyInput>
    /**
     * Filter which Marcas to update
     */
    where?: MarcaWhereInput
    /**
     * Limit how many Marcas to update.
     */
    limit?: number
  }

  /**
   * Marca upsert
   */
  export type MarcaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * The filter to search for the Marca to update in case it exists.
     */
    where: MarcaWhereUniqueInput
    /**
     * In case the Marca found by the `where` argument doesn't exist, create a new Marca with this data.
     */
    create: XOR<MarcaCreateInput, MarcaUncheckedCreateInput>
    /**
     * In case the Marca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarcaUpdateInput, MarcaUncheckedUpdateInput>
  }

  /**
   * Marca delete
   */
  export type MarcaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
    /**
     * Filter which Marca to delete.
     */
    where: MarcaWhereUniqueInput
  }

  /**
   * Marca deleteMany
   */
  export type MarcaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Marcas to delete
     */
    where?: MarcaWhereInput
    /**
     * Limit how many Marcas to delete.
     */
    limit?: number
  }

  /**
   * Marca.productos
   */
  export type Marca$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Marca without action
   */
  export type MarcaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Marca
     */
    select?: MarcaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Marca
     */
    omit?: MarcaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarcaInclude<ExtArgs> | null
  }


  /**
   * Model Categoria_Producto
   */

  export type AggregateCategoria_Producto = {
    _count: Categoria_ProductoCountAggregateOutputType | null
    _avg: Categoria_ProductoAvgAggregateOutputType | null
    _sum: Categoria_ProductoSumAggregateOutputType | null
    _min: Categoria_ProductoMinAggregateOutputType | null
    _max: Categoria_ProductoMaxAggregateOutputType | null
  }

  export type Categoria_ProductoAvgAggregateOutputType = {
    id_categoria: number | null
  }

  export type Categoria_ProductoSumAggregateOutputType = {
    id_categoria: number | null
  }

  export type Categoria_ProductoMinAggregateOutputType = {
    id_categoria: number | null
    nombre_categoria: string | null
  }

  export type Categoria_ProductoMaxAggregateOutputType = {
    id_categoria: number | null
    nombre_categoria: string | null
  }

  export type Categoria_ProductoCountAggregateOutputType = {
    id_categoria: number
    nombre_categoria: number
    _all: number
  }


  export type Categoria_ProductoAvgAggregateInputType = {
    id_categoria?: true
  }

  export type Categoria_ProductoSumAggregateInputType = {
    id_categoria?: true
  }

  export type Categoria_ProductoMinAggregateInputType = {
    id_categoria?: true
    nombre_categoria?: true
  }

  export type Categoria_ProductoMaxAggregateInputType = {
    id_categoria?: true
    nombre_categoria?: true
  }

  export type Categoria_ProductoCountAggregateInputType = {
    id_categoria?: true
    nombre_categoria?: true
    _all?: true
  }

  export type Categoria_ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria_Producto to aggregate.
     */
    where?: Categoria_ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categoria_Productos to fetch.
     */
    orderBy?: Categoria_ProductoOrderByWithRelationInput | Categoria_ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Categoria_ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categoria_Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categoria_Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categoria_Productos
    **/
    _count?: true | Categoria_ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoria_ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoria_ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoria_ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoria_ProductoMaxAggregateInputType
  }

  export type GetCategoria_ProductoAggregateType<T extends Categoria_ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria_Producto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria_Producto[P]>
      : GetScalarType<T[P], AggregateCategoria_Producto[P]>
  }




  export type Categoria_ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Categoria_ProductoWhereInput
    orderBy?: Categoria_ProductoOrderByWithAggregationInput | Categoria_ProductoOrderByWithAggregationInput[]
    by: Categoria_ProductoScalarFieldEnum[] | Categoria_ProductoScalarFieldEnum
    having?: Categoria_ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoria_ProductoCountAggregateInputType | true
    _avg?: Categoria_ProductoAvgAggregateInputType
    _sum?: Categoria_ProductoSumAggregateInputType
    _min?: Categoria_ProductoMinAggregateInputType
    _max?: Categoria_ProductoMaxAggregateInputType
  }

  export type Categoria_ProductoGroupByOutputType = {
    id_categoria: number
    nombre_categoria: string
    _count: Categoria_ProductoCountAggregateOutputType | null
    _avg: Categoria_ProductoAvgAggregateOutputType | null
    _sum: Categoria_ProductoSumAggregateOutputType | null
    _min: Categoria_ProductoMinAggregateOutputType | null
    _max: Categoria_ProductoMaxAggregateOutputType | null
  }

  type GetCategoria_ProductoGroupByPayload<T extends Categoria_ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Categoria_ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoria_ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoria_ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], Categoria_ProductoGroupByOutputType[P]>
        }
      >
    >


  export type Categoria_ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre_categoria?: boolean
    productos?: boolean | Categoria_Producto$productosArgs<ExtArgs>
    _count?: boolean | Categoria_ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoria_Producto"]>

  export type Categoria_ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre_categoria?: boolean
  }, ExtArgs["result"]["categoria_Producto"]>

  export type Categoria_ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_categoria?: boolean
    nombre_categoria?: boolean
  }, ExtArgs["result"]["categoria_Producto"]>

  export type Categoria_ProductoSelectScalar = {
    id_categoria?: boolean
    nombre_categoria?: boolean
  }

  export type Categoria_ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_categoria" | "nombre_categoria", ExtArgs["result"]["categoria_Producto"]>
  export type Categoria_ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Categoria_Producto$productosArgs<ExtArgs>
    _count?: boolean | Categoria_ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Categoria_ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Categoria_ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Categoria_ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categoria_Producto"
    objects: {
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_categoria: number
      nombre_categoria: string
    }, ExtArgs["result"]["categoria_Producto"]>
    composites: {}
  }

  type Categoria_ProductoGetPayload<S extends boolean | null | undefined | Categoria_ProductoDefaultArgs> = $Result.GetResult<Prisma.$Categoria_ProductoPayload, S>

  type Categoria_ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Categoria_ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Categoria_ProductoCountAggregateInputType | true
    }

  export interface Categoria_ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categoria_Producto'], meta: { name: 'Categoria_Producto' } }
    /**
     * Find zero or one Categoria_Producto that matches the filter.
     * @param {Categoria_ProductoFindUniqueArgs} args - Arguments to find a Categoria_Producto
     * @example
     * // Get one Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Categoria_ProductoFindUniqueArgs>(args: SelectSubset<T, Categoria_ProductoFindUniqueArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categoria_Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Categoria_ProductoFindUniqueOrThrowArgs} args - Arguments to find a Categoria_Producto
     * @example
     * // Get one Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Categoria_ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, Categoria_ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria_Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoFindFirstArgs} args - Arguments to find a Categoria_Producto
     * @example
     * // Get one Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Categoria_ProductoFindFirstArgs>(args?: SelectSubset<T, Categoria_ProductoFindFirstArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categoria_Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoFindFirstOrThrowArgs} args - Arguments to find a Categoria_Producto
     * @example
     * // Get one Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Categoria_ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, Categoria_ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categoria_Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoria_Productos
     * const categoria_Productos = await prisma.categoria_Producto.findMany()
     * 
     * // Get first 10 Categoria_Productos
     * const categoria_Productos = await prisma.categoria_Producto.findMany({ take: 10 })
     * 
     * // Only select the `id_categoria`
     * const categoria_ProductoWithId_categoriaOnly = await prisma.categoria_Producto.findMany({ select: { id_categoria: true } })
     * 
     */
    findMany<T extends Categoria_ProductoFindManyArgs>(args?: SelectSubset<T, Categoria_ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categoria_Producto.
     * @param {Categoria_ProductoCreateArgs} args - Arguments to create a Categoria_Producto.
     * @example
     * // Create one Categoria_Producto
     * const Categoria_Producto = await prisma.categoria_Producto.create({
     *   data: {
     *     // ... data to create a Categoria_Producto
     *   }
     * })
     * 
     */
    create<T extends Categoria_ProductoCreateArgs>(args: SelectSubset<T, Categoria_ProductoCreateArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categoria_Productos.
     * @param {Categoria_ProductoCreateManyArgs} args - Arguments to create many Categoria_Productos.
     * @example
     * // Create many Categoria_Productos
     * const categoria_Producto = await prisma.categoria_Producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Categoria_ProductoCreateManyArgs>(args?: SelectSubset<T, Categoria_ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categoria_Productos and returns the data saved in the database.
     * @param {Categoria_ProductoCreateManyAndReturnArgs} args - Arguments to create many Categoria_Productos.
     * @example
     * // Create many Categoria_Productos
     * const categoria_Producto = await prisma.categoria_Producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categoria_Productos and only return the `id_categoria`
     * const categoria_ProductoWithId_categoriaOnly = await prisma.categoria_Producto.createManyAndReturn({
     *   select: { id_categoria: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Categoria_ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, Categoria_ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categoria_Producto.
     * @param {Categoria_ProductoDeleteArgs} args - Arguments to delete one Categoria_Producto.
     * @example
     * // Delete one Categoria_Producto
     * const Categoria_Producto = await prisma.categoria_Producto.delete({
     *   where: {
     *     // ... filter to delete one Categoria_Producto
     *   }
     * })
     * 
     */
    delete<T extends Categoria_ProductoDeleteArgs>(args: SelectSubset<T, Categoria_ProductoDeleteArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categoria_Producto.
     * @param {Categoria_ProductoUpdateArgs} args - Arguments to update one Categoria_Producto.
     * @example
     * // Update one Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Categoria_ProductoUpdateArgs>(args: SelectSubset<T, Categoria_ProductoUpdateArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categoria_Productos.
     * @param {Categoria_ProductoDeleteManyArgs} args - Arguments to filter Categoria_Productos to delete.
     * @example
     * // Delete a few Categoria_Productos
     * const { count } = await prisma.categoria_Producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Categoria_ProductoDeleteManyArgs>(args?: SelectSubset<T, Categoria_ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoria_Productos
     * const categoria_Producto = await prisma.categoria_Producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Categoria_ProductoUpdateManyArgs>(args: SelectSubset<T, Categoria_ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_Productos and returns the data updated in the database.
     * @param {Categoria_ProductoUpdateManyAndReturnArgs} args - Arguments to update many Categoria_Productos.
     * @example
     * // Update many Categoria_Productos
     * const categoria_Producto = await prisma.categoria_Producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categoria_Productos and only return the `id_categoria`
     * const categoria_ProductoWithId_categoriaOnly = await prisma.categoria_Producto.updateManyAndReturn({
     *   select: { id_categoria: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Categoria_ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, Categoria_ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categoria_Producto.
     * @param {Categoria_ProductoUpsertArgs} args - Arguments to update or create a Categoria_Producto.
     * @example
     * // Update or create a Categoria_Producto
     * const categoria_Producto = await prisma.categoria_Producto.upsert({
     *   create: {
     *     // ... data to create a Categoria_Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria_Producto we want to update
     *   }
     * })
     */
    upsert<T extends Categoria_ProductoUpsertArgs>(args: SelectSubset<T, Categoria_ProductoUpsertArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categoria_Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoCountArgs} args - Arguments to filter Categoria_Productos to count.
     * @example
     * // Count the number of Categoria_Productos
     * const count = await prisma.categoria_Producto.count({
     *   where: {
     *     // ... the filter for the Categoria_Productos we want to count
     *   }
     * })
    **/
    count<T extends Categoria_ProductoCountArgs>(
      args?: Subset<T, Categoria_ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoria_ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria_Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoria_ProductoAggregateArgs>(args: Subset<T, Categoria_ProductoAggregateArgs>): Prisma.PrismaPromise<GetCategoria_ProductoAggregateType<T>>

    /**
     * Group by Categoria_Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Categoria_ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Categoria_ProductoGroupByArgs['orderBy'] }
        : { orderBy?: Categoria_ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Categoria_ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoria_ProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categoria_Producto model
   */
  readonly fields: Categoria_ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categoria_Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Categoria_ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Categoria_Producto$productosArgs<ExtArgs> = {}>(args?: Subset<T, Categoria_Producto$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categoria_Producto model
   */
  interface Categoria_ProductoFieldRefs {
    readonly id_categoria: FieldRef<"Categoria_Producto", 'Int'>
    readonly nombre_categoria: FieldRef<"Categoria_Producto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Categoria_Producto findUnique
   */
  export type Categoria_ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Categoria_Producto to fetch.
     */
    where: Categoria_ProductoWhereUniqueInput
  }

  /**
   * Categoria_Producto findUniqueOrThrow
   */
  export type Categoria_ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Categoria_Producto to fetch.
     */
    where: Categoria_ProductoWhereUniqueInput
  }

  /**
   * Categoria_Producto findFirst
   */
  export type Categoria_ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Categoria_Producto to fetch.
     */
    where?: Categoria_ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categoria_Productos to fetch.
     */
    orderBy?: Categoria_ProductoOrderByWithRelationInput | Categoria_ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categoria_Productos.
     */
    cursor?: Categoria_ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categoria_Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categoria_Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categoria_Productos.
     */
    distinct?: Categoria_ProductoScalarFieldEnum | Categoria_ProductoScalarFieldEnum[]
  }

  /**
   * Categoria_Producto findFirstOrThrow
   */
  export type Categoria_ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Categoria_Producto to fetch.
     */
    where?: Categoria_ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categoria_Productos to fetch.
     */
    orderBy?: Categoria_ProductoOrderByWithRelationInput | Categoria_ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categoria_Productos.
     */
    cursor?: Categoria_ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categoria_Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categoria_Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categoria_Productos.
     */
    distinct?: Categoria_ProductoScalarFieldEnum | Categoria_ProductoScalarFieldEnum[]
  }

  /**
   * Categoria_Producto findMany
   */
  export type Categoria_ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Categoria_Productos to fetch.
     */
    where?: Categoria_ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categoria_Productos to fetch.
     */
    orderBy?: Categoria_ProductoOrderByWithRelationInput | Categoria_ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categoria_Productos.
     */
    cursor?: Categoria_ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categoria_Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categoria_Productos.
     */
    skip?: number
    distinct?: Categoria_ProductoScalarFieldEnum | Categoria_ProductoScalarFieldEnum[]
  }

  /**
   * Categoria_Producto create
   */
  export type Categoria_ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Categoria_Producto.
     */
    data: XOR<Categoria_ProductoCreateInput, Categoria_ProductoUncheckedCreateInput>
  }

  /**
   * Categoria_Producto createMany
   */
  export type Categoria_ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categoria_Productos.
     */
    data: Categoria_ProductoCreateManyInput | Categoria_ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria_Producto createManyAndReturn
   */
  export type Categoria_ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Categoria_Productos.
     */
    data: Categoria_ProductoCreateManyInput | Categoria_ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categoria_Producto update
   */
  export type Categoria_ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Categoria_Producto.
     */
    data: XOR<Categoria_ProductoUpdateInput, Categoria_ProductoUncheckedUpdateInput>
    /**
     * Choose, which Categoria_Producto to update.
     */
    where: Categoria_ProductoWhereUniqueInput
  }

  /**
   * Categoria_Producto updateMany
   */
  export type Categoria_ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categoria_Productos.
     */
    data: XOR<Categoria_ProductoUpdateManyMutationInput, Categoria_ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Categoria_Productos to update
     */
    where?: Categoria_ProductoWhereInput
    /**
     * Limit how many Categoria_Productos to update.
     */
    limit?: number
  }

  /**
   * Categoria_Producto updateManyAndReturn
   */
  export type Categoria_ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Categoria_Productos.
     */
    data: XOR<Categoria_ProductoUpdateManyMutationInput, Categoria_ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Categoria_Productos to update
     */
    where?: Categoria_ProductoWhereInput
    /**
     * Limit how many Categoria_Productos to update.
     */
    limit?: number
  }

  /**
   * Categoria_Producto upsert
   */
  export type Categoria_ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Categoria_Producto to update in case it exists.
     */
    where: Categoria_ProductoWhereUniqueInput
    /**
     * In case the Categoria_Producto found by the `where` argument doesn't exist, create a new Categoria_Producto with this data.
     */
    create: XOR<Categoria_ProductoCreateInput, Categoria_ProductoUncheckedCreateInput>
    /**
     * In case the Categoria_Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Categoria_ProductoUpdateInput, Categoria_ProductoUncheckedUpdateInput>
  }

  /**
   * Categoria_Producto delete
   */
  export type Categoria_ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
    /**
     * Filter which Categoria_Producto to delete.
     */
    where: Categoria_ProductoWhereUniqueInput
  }

  /**
   * Categoria_Producto deleteMany
   */
  export type Categoria_ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categoria_Productos to delete
     */
    where?: Categoria_ProductoWhereInput
    /**
     * Limit how many Categoria_Productos to delete.
     */
    limit?: number
  }

  /**
   * Categoria_Producto.productos
   */
  export type Categoria_Producto$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Categoria_Producto without action
   */
  export type Categoria_ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categoria_Producto
     */
    select?: Categoria_ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categoria_Producto
     */
    omit?: Categoria_ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categoria_ProductoInclude<ExtArgs> | null
  }


  /**
   * Model Proveedor
   */

  export type AggregateProveedor = {
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  export type ProveedorAvgAggregateOutputType = {
    id_proveedor: number | null
  }

  export type ProveedorSumAggregateOutputType = {
    id_proveedor: number | null
  }

  export type ProveedorMinAggregateOutputType = {
    id_proveedor: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
  }

  export type ProveedorMaxAggregateOutputType = {
    id_proveedor: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
  }

  export type ProveedorCountAggregateOutputType = {
    id_proveedor: number
    nombre: number
    direccion: number
    telefono: number
    email: number
    _all: number
  }


  export type ProveedorAvgAggregateInputType = {
    id_proveedor?: true
  }

  export type ProveedorSumAggregateInputType = {
    id_proveedor?: true
  }

  export type ProveedorMinAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
  }

  export type ProveedorMaxAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
  }

  export type ProveedorCountAggregateInputType = {
    id_proveedor?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
    _all?: true
  }

  export type ProveedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proveedor to aggregate.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Proveedors
    **/
    _count?: true | ProveedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedorMaxAggregateInputType
  }

  export type GetProveedorAggregateType<T extends ProveedorAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedor[P]>
      : GetScalarType<T[P], AggregateProveedor[P]>
  }




  export type ProveedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProveedorWhereInput
    orderBy?: ProveedorOrderByWithAggregationInput | ProveedorOrderByWithAggregationInput[]
    by: ProveedorScalarFieldEnum[] | ProveedorScalarFieldEnum
    having?: ProveedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedorCountAggregateInputType | true
    _avg?: ProveedorAvgAggregateInputType
    _sum?: ProveedorSumAggregateInputType
    _min?: ProveedorMinAggregateInputType
    _max?: ProveedorMaxAggregateInputType
  }

  export type ProveedorGroupByOutputType = {
    id_proveedor: number
    nombre: string
    direccion: string | null
    telefono: string | null
    email: string
    _count: ProveedorCountAggregateOutputType | null
    _avg: ProveedorAvgAggregateOutputType | null
    _sum: ProveedorSumAggregateOutputType | null
    _min: ProveedorMinAggregateOutputType | null
    _max: ProveedorMaxAggregateOutputType | null
  }

  type GetProveedorGroupByPayload<T extends ProveedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedorGroupByOutputType[P]>
        }
      >
    >


  export type ProveedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    productos?: boolean | Proveedor$productosArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedor"]>

  export type ProveedorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
  }, ExtArgs["result"]["proveedor"]>

  export type ProveedorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_proveedor?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
  }, ExtArgs["result"]["proveedor"]>

  export type ProveedorSelectScalar = {
    id_proveedor?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
  }

  export type ProveedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_proveedor" | "nombre" | "direccion" | "telefono" | "email", ExtArgs["result"]["proveedor"]>
  export type ProveedorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Proveedor$productosArgs<ExtArgs>
    _count?: boolean | ProveedorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProveedorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProveedorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProveedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Proveedor"
    objects: {
      productos: Prisma.$ProductoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_proveedor: number
      nombre: string
      direccion: string | null
      telefono: string | null
      email: string
    }, ExtArgs["result"]["proveedor"]>
    composites: {}
  }

  type ProveedorGetPayload<S extends boolean | null | undefined | ProveedorDefaultArgs> = $Result.GetResult<Prisma.$ProveedorPayload, S>

  type ProveedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProveedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProveedorCountAggregateInputType | true
    }

  export interface ProveedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Proveedor'], meta: { name: 'Proveedor' } }
    /**
     * Find zero or one Proveedor that matches the filter.
     * @param {ProveedorFindUniqueArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProveedorFindUniqueArgs>(args: SelectSubset<T, ProveedorFindUniqueArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proveedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProveedorFindUniqueOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProveedorFindUniqueOrThrowArgs>(args: SelectSubset<T, ProveedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindFirstArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProveedorFindFirstArgs>(args?: SelectSubset<T, ProveedorFindFirstArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindFirstOrThrowArgs} args - Arguments to find a Proveedor
     * @example
     * // Get one Proveedor
     * const proveedor = await prisma.proveedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProveedorFindFirstOrThrowArgs>(args?: SelectSubset<T, ProveedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proveedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedors
     * const proveedors = await prisma.proveedor.findMany()
     * 
     * // Get first 10 Proveedors
     * const proveedors = await prisma.proveedor.findMany({ take: 10 })
     * 
     * // Only select the `id_proveedor`
     * const proveedorWithId_proveedorOnly = await prisma.proveedor.findMany({ select: { id_proveedor: true } })
     * 
     */
    findMany<T extends ProveedorFindManyArgs>(args?: SelectSubset<T, ProveedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proveedor.
     * @param {ProveedorCreateArgs} args - Arguments to create a Proveedor.
     * @example
     * // Create one Proveedor
     * const Proveedor = await prisma.proveedor.create({
     *   data: {
     *     // ... data to create a Proveedor
     *   }
     * })
     * 
     */
    create<T extends ProveedorCreateArgs>(args: SelectSubset<T, ProveedorCreateArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proveedors.
     * @param {ProveedorCreateManyArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProveedorCreateManyArgs>(args?: SelectSubset<T, ProveedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedors and returns the data saved in the database.
     * @param {ProveedorCreateManyAndReturnArgs} args - Arguments to create many Proveedors.
     * @example
     * // Create many Proveedors
     * const proveedor = await prisma.proveedor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedors and only return the `id_proveedor`
     * const proveedorWithId_proveedorOnly = await prisma.proveedor.createManyAndReturn({
     *   select: { id_proveedor: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProveedorCreateManyAndReturnArgs>(args?: SelectSubset<T, ProveedorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proveedor.
     * @param {ProveedorDeleteArgs} args - Arguments to delete one Proveedor.
     * @example
     * // Delete one Proveedor
     * const Proveedor = await prisma.proveedor.delete({
     *   where: {
     *     // ... filter to delete one Proveedor
     *   }
     * })
     * 
     */
    delete<T extends ProveedorDeleteArgs>(args: SelectSubset<T, ProveedorDeleteArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proveedor.
     * @param {ProveedorUpdateArgs} args - Arguments to update one Proveedor.
     * @example
     * // Update one Proveedor
     * const proveedor = await prisma.proveedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProveedorUpdateArgs>(args: SelectSubset<T, ProveedorUpdateArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proveedors.
     * @param {ProveedorDeleteManyArgs} args - Arguments to filter Proveedors to delete.
     * @example
     * // Delete a few Proveedors
     * const { count } = await prisma.proveedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProveedorDeleteManyArgs>(args?: SelectSubset<T, ProveedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedors
     * const proveedor = await prisma.proveedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProveedorUpdateManyArgs>(args: SelectSubset<T, ProveedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedors and returns the data updated in the database.
     * @param {ProveedorUpdateManyAndReturnArgs} args - Arguments to update many Proveedors.
     * @example
     * // Update many Proveedors
     * const proveedor = await prisma.proveedor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proveedors and only return the `id_proveedor`
     * const proveedorWithId_proveedorOnly = await prisma.proveedor.updateManyAndReturn({
     *   select: { id_proveedor: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProveedorUpdateManyAndReturnArgs>(args: SelectSubset<T, ProveedorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proveedor.
     * @param {ProveedorUpsertArgs} args - Arguments to update or create a Proveedor.
     * @example
     * // Update or create a Proveedor
     * const proveedor = await prisma.proveedor.upsert({
     *   create: {
     *     // ... data to create a Proveedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedor we want to update
     *   }
     * })
     */
    upsert<T extends ProveedorUpsertArgs>(args: SelectSubset<T, ProveedorUpsertArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proveedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorCountArgs} args - Arguments to filter Proveedors to count.
     * @example
     * // Count the number of Proveedors
     * const count = await prisma.proveedor.count({
     *   where: {
     *     // ... the filter for the Proveedors we want to count
     *   }
     * })
    **/
    count<T extends ProveedorCountArgs>(
      args?: Subset<T, ProveedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedorAggregateArgs>(args: Subset<T, ProveedorAggregateArgs>): Prisma.PrismaPromise<GetProveedorAggregateType<T>>

    /**
     * Group by Proveedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProveedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProveedorGroupByArgs['orderBy'] }
        : { orderBy?: ProveedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProveedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Proveedor model
   */
  readonly fields: ProveedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Proveedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProveedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Proveedor$productosArgs<ExtArgs> = {}>(args?: Subset<T, Proveedor$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Proveedor model
   */
  interface ProveedorFieldRefs {
    readonly id_proveedor: FieldRef<"Proveedor", 'Int'>
    readonly nombre: FieldRef<"Proveedor", 'String'>
    readonly direccion: FieldRef<"Proveedor", 'String'>
    readonly telefono: FieldRef<"Proveedor", 'String'>
    readonly email: FieldRef<"Proveedor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Proveedor findUnique
   */
  export type ProveedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor findUniqueOrThrow
   */
  export type ProveedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor findFirst
   */
  export type ProveedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor findFirstOrThrow
   */
  export type ProveedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedor to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Proveedors.
     */
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor findMany
   */
  export type ProveedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter, which Proveedors to fetch.
     */
    where?: ProveedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Proveedors to fetch.
     */
    orderBy?: ProveedorOrderByWithRelationInput | ProveedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Proveedors.
     */
    cursor?: ProveedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Proveedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Proveedors.
     */
    skip?: number
    distinct?: ProveedorScalarFieldEnum | ProveedorScalarFieldEnum[]
  }

  /**
   * Proveedor create
   */
  export type ProveedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The data needed to create a Proveedor.
     */
    data: XOR<ProveedorCreateInput, ProveedorUncheckedCreateInput>
  }

  /**
   * Proveedor createMany
   */
  export type ProveedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Proveedors.
     */
    data: ProveedorCreateManyInput | ProveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proveedor createManyAndReturn
   */
  export type ProveedorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * The data used to create many Proveedors.
     */
    data: ProveedorCreateManyInput | ProveedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Proveedor update
   */
  export type ProveedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The data needed to update a Proveedor.
     */
    data: XOR<ProveedorUpdateInput, ProveedorUncheckedUpdateInput>
    /**
     * Choose, which Proveedor to update.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor updateMany
   */
  export type ProveedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Proveedors.
     */
    data: XOR<ProveedorUpdateManyMutationInput, ProveedorUncheckedUpdateManyInput>
    /**
     * Filter which Proveedors to update
     */
    where?: ProveedorWhereInput
    /**
     * Limit how many Proveedors to update.
     */
    limit?: number
  }

  /**
   * Proveedor updateManyAndReturn
   */
  export type ProveedorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * The data used to update Proveedors.
     */
    data: XOR<ProveedorUpdateManyMutationInput, ProveedorUncheckedUpdateManyInput>
    /**
     * Filter which Proveedors to update
     */
    where?: ProveedorWhereInput
    /**
     * Limit how many Proveedors to update.
     */
    limit?: number
  }

  /**
   * Proveedor upsert
   */
  export type ProveedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * The filter to search for the Proveedor to update in case it exists.
     */
    where: ProveedorWhereUniqueInput
    /**
     * In case the Proveedor found by the `where` argument doesn't exist, create a new Proveedor with this data.
     */
    create: XOR<ProveedorCreateInput, ProveedorUncheckedCreateInput>
    /**
     * In case the Proveedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProveedorUpdateInput, ProveedorUncheckedUpdateInput>
  }

  /**
   * Proveedor delete
   */
  export type ProveedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
    /**
     * Filter which Proveedor to delete.
     */
    where: ProveedorWhereUniqueInput
  }

  /**
   * Proveedor deleteMany
   */
  export type ProveedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Proveedors to delete
     */
    where?: ProveedorWhereInput
    /**
     * Limit how many Proveedors to delete.
     */
    limit?: number
  }

  /**
   * Proveedor.productos
   */
  export type Proveedor$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    cursor?: ProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Proveedor without action
   */
  export type ProveedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Proveedor
     */
    select?: ProveedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Proveedor
     */
    omit?: ProveedorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProveedorInclude<ExtArgs> | null
  }


  /**
   * Model Producto
   */

  export type AggregateProducto = {
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  export type ProductoAvgAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    stock_disponible: number | null
    categoria_id: number | null
    proveedor_id: number | null
    marca_id: number | null
  }

  export type ProductoSumAggregateOutputType = {
    id_producto: number | null
    precio: Decimal | null
    stock_disponible: number | null
    categoria_id: number | null
    proveedor_id: number | null
    marca_id: number | null
  }

  export type ProductoMinAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    stock_disponible: number | null
    categoria_id: number | null
    proveedor_id: number | null
    marca_id: number | null
  }

  export type ProductoMaxAggregateOutputType = {
    id_producto: number | null
    nombre: string | null
    descripcion: string | null
    precio: Decimal | null
    stock_disponible: number | null
    categoria_id: number | null
    proveedor_id: number | null
    marca_id: number | null
  }

  export type ProductoCountAggregateOutputType = {
    id_producto: number
    nombre: number
    descripcion: number
    precio: number
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    _all: number
  }


  export type ProductoAvgAggregateInputType = {
    id_producto?: true
    precio?: true
    stock_disponible?: true
    categoria_id?: true
    proveedor_id?: true
    marca_id?: true
  }

  export type ProductoSumAggregateInputType = {
    id_producto?: true
    precio?: true
    stock_disponible?: true
    categoria_id?: true
    proveedor_id?: true
    marca_id?: true
  }

  export type ProductoMinAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock_disponible?: true
    categoria_id?: true
    proveedor_id?: true
    marca_id?: true
  }

  export type ProductoMaxAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock_disponible?: true
    categoria_id?: true
    proveedor_id?: true
    marca_id?: true
  }

  export type ProductoCountAggregateInputType = {
    id_producto?: true
    nombre?: true
    descripcion?: true
    precio?: true
    stock_disponible?: true
    categoria_id?: true
    proveedor_id?: true
    marca_id?: true
    _all?: true
  }

  export type ProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto to aggregate.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductoMaxAggregateInputType
  }

  export type GetProductoAggregateType<T extends ProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto[P]>
      : GetScalarType<T[P], AggregateProducto[P]>
  }




  export type ProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductoWhereInput
    orderBy?: ProductoOrderByWithAggregationInput | ProductoOrderByWithAggregationInput[]
    by: ProductoScalarFieldEnum[] | ProductoScalarFieldEnum
    having?: ProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductoCountAggregateInputType | true
    _avg?: ProductoAvgAggregateInputType
    _sum?: ProductoSumAggregateInputType
    _min?: ProductoMinAggregateInputType
    _max?: ProductoMaxAggregateInputType
  }

  export type ProductoGroupByOutputType = {
    id_producto: number
    nombre: string
    descripcion: string | null
    precio: Decimal
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    _count: ProductoCountAggregateOutputType | null
    _avg: ProductoAvgAggregateOutputType | null
    _sum: ProductoSumAggregateOutputType | null
    _min: ProductoMinAggregateOutputType | null
    _max: ProductoMaxAggregateOutputType | null
  }

  type GetProductoGroupByPayload<T extends ProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ProductoGroupByOutputType[P]>
        }
      >
    >


  export type ProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock_disponible?: boolean
    categoria_id?: boolean
    proveedor_id?: boolean
    marca_id?: boolean
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    detallesFactura?: boolean | Producto$detallesFacturaArgs<ExtArgs>
    inventarios?: boolean | Producto$inventariosArgs<ExtArgs>
    descuentos?: boolean | Producto$descuentosArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock_disponible?: boolean
    categoria_id?: boolean
    proveedor_id?: boolean
    marca_id?: boolean
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock_disponible?: boolean
    categoria_id?: boolean
    proveedor_id?: boolean
    marca_id?: boolean
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto"]>

  export type ProductoSelectScalar = {
    id_producto?: boolean
    nombre?: boolean
    descripcion?: boolean
    precio?: boolean
    stock_disponible?: boolean
    categoria_id?: boolean
    proveedor_id?: boolean
    marca_id?: boolean
  }

  export type ProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto" | "nombre" | "descripcion" | "precio" | "stock_disponible" | "categoria_id" | "proveedor_id" | "marca_id", ExtArgs["result"]["producto"]>
  export type ProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
    detallesFactura?: boolean | Producto$detallesFacturaArgs<ExtArgs>
    inventarios?: boolean | Producto$inventariosArgs<ExtArgs>
    descuentos?: boolean | Producto$descuentosArgs<ExtArgs>
    _count?: boolean | ProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
  }
  export type ProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Categoria_ProductoDefaultArgs<ExtArgs>
    proveedor?: boolean | ProveedorDefaultArgs<ExtArgs>
    marca?: boolean | MarcaDefaultArgs<ExtArgs>
  }

  export type $ProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto"
    objects: {
      categoria: Prisma.$Categoria_ProductoPayload<ExtArgs>
      proveedor: Prisma.$ProveedorPayload<ExtArgs>
      marca: Prisma.$MarcaPayload<ExtArgs>
      detallesFactura: Prisma.$Factura_DetallePayload<ExtArgs>[]
      inventarios: Prisma.$InventarioPayload<ExtArgs>[]
      descuentos: Prisma.$Producto_DescuentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_producto: number
      nombre: string
      descripcion: string | null
      precio: Prisma.Decimal
      stock_disponible: number
      categoria_id: number
      proveedor_id: number
      marca_id: number
    }, ExtArgs["result"]["producto"]>
    composites: {}
  }

  type ProductoGetPayload<S extends boolean | null | undefined | ProductoDefaultArgs> = $Result.GetResult<Prisma.$ProductoPayload, S>

  type ProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductoCountAggregateInputType | true
    }

  export interface ProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto'], meta: { name: 'Producto' } }
    /**
     * Find zero or one Producto that matches the filter.
     * @param {ProductoFindUniqueArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductoFindUniqueArgs>(args: SelectSubset<T, ProductoFindUniqueArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductoFindUniqueOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductoFindFirstArgs>(args?: SelectSubset<T, ProductoFindFirstArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindFirstOrThrowArgs} args - Arguments to find a Producto
     * @example
     * // Get one Producto
     * const producto = await prisma.producto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.producto.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.producto.findMany({ take: 10 })
     * 
     * // Only select the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.findMany({ select: { id_producto: true } })
     * 
     */
    findMany<T extends ProductoFindManyArgs>(args?: SelectSubset<T, ProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto.
     * @param {ProductoCreateArgs} args - Arguments to create a Producto.
     * @example
     * // Create one Producto
     * const Producto = await prisma.producto.create({
     *   data: {
     *     // ... data to create a Producto
     *   }
     * })
     * 
     */
    create<T extends ProductoCreateArgs>(args: SelectSubset<T, ProductoCreateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductoCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductoCreateManyArgs>(args?: SelectSubset<T, ProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductoCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const producto = await prisma.producto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.createManyAndReturn({
     *   select: { id_producto: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto.
     * @param {ProductoDeleteArgs} args - Arguments to delete one Producto.
     * @example
     * // Delete one Producto
     * const Producto = await prisma.producto.delete({
     *   where: {
     *     // ... filter to delete one Producto
     *   }
     * })
     * 
     */
    delete<T extends ProductoDeleteArgs>(args: SelectSubset<T, ProductoDeleteArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto.
     * @param {ProductoUpdateArgs} args - Arguments to update one Producto.
     * @example
     * // Update one Producto
     * const producto = await prisma.producto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductoUpdateArgs>(args: SelectSubset<T, ProductoUpdateArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductoDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.producto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductoDeleteManyArgs>(args?: SelectSubset<T, ProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductoUpdateManyArgs>(args: SelectSubset<T, ProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductoUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const producto = await prisma.producto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id_producto`
     * const productoWithId_productoOnly = await prisma.producto.updateManyAndReturn({
     *   select: { id_producto: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto.
     * @param {ProductoUpsertArgs} args - Arguments to update or create a Producto.
     * @example
     * // Update or create a Producto
     * const producto = await prisma.producto.upsert({
     *   create: {
     *     // ... data to create a Producto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto we want to update
     *   }
     * })
     */
    upsert<T extends ProductoUpsertArgs>(args: SelectSubset<T, ProductoUpsertArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.producto.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductoCountArgs>(
      args?: Subset<T, ProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductoAggregateArgs>(args: Subset<T, ProductoAggregateArgs>): Prisma.PrismaPromise<GetProductoAggregateType<T>>

    /**
     * Group by Producto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductoGroupByArgs['orderBy'] }
        : { orderBy?: ProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto model
   */
  readonly fields: ProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria<T extends Categoria_ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Categoria_ProductoDefaultArgs<ExtArgs>>): Prisma__Categoria_ProductoClient<$Result.GetResult<Prisma.$Categoria_ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends ProveedorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProveedorDefaultArgs<ExtArgs>>): Prisma__ProveedorClient<$Result.GetResult<Prisma.$ProveedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    marca<T extends MarcaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarcaDefaultArgs<ExtArgs>>): Prisma__MarcaClient<$Result.GetResult<Prisma.$MarcaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detallesFactura<T extends Producto$detallesFacturaArgs<ExtArgs> = {}>(args?: Subset<T, Producto$detallesFacturaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    inventarios<T extends Producto$inventariosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$inventariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    descuentos<T extends Producto$descuentosArgs<ExtArgs> = {}>(args?: Subset<T, Producto$descuentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto model
   */
  interface ProductoFieldRefs {
    readonly id_producto: FieldRef<"Producto", 'Int'>
    readonly nombre: FieldRef<"Producto", 'String'>
    readonly descripcion: FieldRef<"Producto", 'String'>
    readonly precio: FieldRef<"Producto", 'Decimal'>
    readonly stock_disponible: FieldRef<"Producto", 'Int'>
    readonly categoria_id: FieldRef<"Producto", 'Int'>
    readonly proveedor_id: FieldRef<"Producto", 'Int'>
    readonly marca_id: FieldRef<"Producto", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Producto findUnique
   */
  export type ProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findUniqueOrThrow
   */
  export type ProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto findFirst
   */
  export type ProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findFirstOrThrow
   */
  export type ProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Producto to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto findMany
   */
  export type ProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductoOrderByWithRelationInput | ProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductoScalarFieldEnum | ProductoScalarFieldEnum[]
  }

  /**
   * Producto create
   */
  export type ProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto.
     */
    data: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
  }

  /**
   * Producto createMany
   */
  export type ProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto createManyAndReturn
   */
  export type ProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductoCreateManyInput | ProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto update
   */
  export type ProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto.
     */
    data: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
    /**
     * Choose, which Producto to update.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto updateMany
   */
  export type ProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Producto updateManyAndReturn
   */
  export type ProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto upsert
   */
  export type ProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto to update in case it exists.
     */
    where: ProductoWhereUniqueInput
    /**
     * In case the Producto found by the `where` argument doesn't exist, create a new Producto with this data.
     */
    create: XOR<ProductoCreateInput, ProductoUncheckedCreateInput>
    /**
     * In case the Producto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductoUpdateInput, ProductoUncheckedUpdateInput>
  }

  /**
   * Producto delete
   */
  export type ProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
    /**
     * Filter which Producto to delete.
     */
    where: ProductoWhereUniqueInput
  }

  /**
   * Producto deleteMany
   */
  export type ProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductoWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Producto.detallesFactura
   */
  export type Producto$detallesFacturaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    where?: Factura_DetalleWhereInput
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    cursor?: Factura_DetalleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Factura_DetalleScalarFieldEnum | Factura_DetalleScalarFieldEnum[]
  }

  /**
   * Producto.inventarios
   */
  export type Producto$inventariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    cursor?: InventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Producto.descuentos
   */
  export type Producto$descuentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    where?: Producto_DescuentoWhereInput
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    cursor?: Producto_DescuentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Producto_DescuentoScalarFieldEnum | Producto_DescuentoScalarFieldEnum[]
  }

  /**
   * Producto without action
   */
  export type ProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto
     */
    select?: ProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto
     */
    omit?: ProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductoInclude<ExtArgs> | null
  }


  /**
   * Model Cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteSumAggregateOutputType = {
    id_cliente: number | null
  }

  export type ClienteMinAggregateOutputType = {
    id_cliente: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    fecha_registro: Date | null
  }

  export type ClienteMaxAggregateOutputType = {
    id_cliente: number | null
    nombre: string | null
    direccion: string | null
    telefono: string | null
    email: string | null
    fecha_registro: Date | null
  }

  export type ClienteCountAggregateOutputType = {
    id_cliente: number
    nombre: number
    direccion: number
    telefono: number
    email: number
    fecha_registro: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteSumAggregateInputType = {
    id_cliente?: true
  }

  export type ClienteMinAggregateInputType = {
    id_cliente?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
    fecha_registro?: true
  }

  export type ClienteMaxAggregateInputType = {
    id_cliente?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
    fecha_registro?: true
  }

  export type ClienteCountAggregateInputType = {
    id_cliente?: true
    nombre?: true
    direccion?: true
    telefono?: true
    email?: true
    fecha_registro?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cliente to aggregate.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type ClienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClienteWhereInput
    orderBy?: ClienteOrderByWithAggregationInput | ClienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: ClienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id_cliente: number
    nombre: string
    direccion: string | null
    telefono: string | null
    email: string
    fecha_registro: Date
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends ClienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type ClienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    fecha_registro?: boolean
    facturas?: boolean | Cliente$facturasArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    fecha_registro?: boolean
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    fecha_registro?: boolean
  }, ExtArgs["result"]["cliente"]>

  export type ClienteSelectScalar = {
    id_cliente?: boolean
    nombre?: boolean
    direccion?: boolean
    telefono?: boolean
    email?: boolean
    fecha_registro?: boolean
  }

  export type ClienteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_cliente" | "nombre" | "direccion" | "telefono" | "email" | "fecha_registro", ExtArgs["result"]["cliente"]>
  export type ClienteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    facturas?: boolean | Cliente$facturasArgs<ExtArgs>
    _count?: boolean | ClienteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClienteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ClienteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ClientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cliente"
    objects: {
      facturas: Prisma.$Factura_MaestroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_cliente: number
      nombre: string
      direccion: string | null
      telefono: string | null
      email: string
      fecha_registro: Date
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type ClienteGetPayload<S extends boolean | null | undefined | ClienteDefaultArgs> = $Result.GetResult<Prisma.$ClientePayload, S>

  type ClienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClienteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface ClienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cliente'], meta: { name: 'Cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {ClienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClienteFindUniqueArgs>(args: SelectSubset<T, ClienteFindUniqueArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClienteFindUniqueOrThrowArgs>(args: SelectSubset<T, ClienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClienteFindFirstArgs>(args?: SelectSubset<T, ClienteFindFirstArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClienteFindFirstOrThrowArgs>(args?: SelectSubset<T, ClienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.findMany({ select: { id_cliente: true } })
     * 
     */
    findMany<T extends ClienteFindManyArgs>(args?: SelectSubset<T, ClienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cliente.
     * @param {ClienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends ClienteCreateArgs>(args: SelectSubset<T, ClienteCreateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clientes.
     * @param {ClienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClienteCreateManyArgs>(args?: SelectSubset<T, ClienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clientes and returns the data saved in the database.
     * @param {ClienteCreateManyAndReturnArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clientes and only return the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.createManyAndReturn({
     *   select: { id_cliente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClienteCreateManyAndReturnArgs>(args?: SelectSubset<T, ClienteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cliente.
     * @param {ClienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends ClienteDeleteArgs>(args: SelectSubset<T, ClienteDeleteArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cliente.
     * @param {ClienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClienteUpdateArgs>(args: SelectSubset<T, ClienteUpdateArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clientes.
     * @param {ClienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClienteDeleteManyArgs>(args?: SelectSubset<T, ClienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClienteUpdateManyArgs>(args: SelectSubset<T, ClienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes and returns the data updated in the database.
     * @param {ClienteUpdateManyAndReturnArgs} args - Arguments to update many Clientes.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clientes and only return the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.updateManyAndReturn({
     *   select: { id_cliente: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClienteUpdateManyAndReturnArgs>(args: SelectSubset<T, ClienteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cliente.
     * @param {ClienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends ClienteUpsertArgs>(args: SelectSubset<T, ClienteUpsertArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends ClienteCountArgs>(
      args?: Subset<T, ClienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClienteGroupByArgs['orderBy'] }
        : { orderBy?: ClienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cliente model
   */
  readonly fields: ClienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    facturas<T extends Cliente$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Cliente$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cliente model
   */
  interface ClienteFieldRefs {
    readonly id_cliente: FieldRef<"Cliente", 'Int'>
    readonly nombre: FieldRef<"Cliente", 'String'>
    readonly direccion: FieldRef<"Cliente", 'String'>
    readonly telefono: FieldRef<"Cliente", 'String'>
    readonly email: FieldRef<"Cliente", 'String'>
    readonly fecha_registro: FieldRef<"Cliente", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Cliente findUnique
   */
  export type ClienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findUniqueOrThrow
   */
  export type ClienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente findFirst
   */
  export type ClienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findFirstOrThrow
   */
  export type ClienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Cliente to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente findMany
   */
  export type ClienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter, which Clientes to fetch.
     */
    where?: ClienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clientes to fetch.
     */
    orderBy?: ClienteOrderByWithRelationInput | ClienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clientes.
     */
    cursor?: ClienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * Cliente create
   */
  export type ClienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to create a Cliente.
     */
    data: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
  }

  /**
   * Cliente createMany
   */
  export type ClienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente createManyAndReturn
   */
  export type ClienteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to create many Clientes.
     */
    data: ClienteCreateManyInput | ClienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cliente update
   */
  export type ClienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The data needed to update a Cliente.
     */
    data: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
    /**
     * Choose, which Cliente to update.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente updateMany
   */
  export type ClienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente updateManyAndReturn
   */
  export type ClienteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * The data used to update Clientes.
     */
    data: XOR<ClienteUpdateManyMutationInput, ClienteUncheckedUpdateManyInput>
    /**
     * Filter which Clientes to update
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to update.
     */
    limit?: number
  }

  /**
   * Cliente upsert
   */
  export type ClienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * The filter to search for the Cliente to update in case it exists.
     */
    where: ClienteWhereUniqueInput
    /**
     * In case the Cliente found by the `where` argument doesn't exist, create a new Cliente with this data.
     */
    create: XOR<ClienteCreateInput, ClienteUncheckedCreateInput>
    /**
     * In case the Cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClienteUpdateInput, ClienteUncheckedUpdateInput>
  }

  /**
   * Cliente delete
   */
  export type ClienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
    /**
     * Filter which Cliente to delete.
     */
    where: ClienteWhereUniqueInput
  }

  /**
   * Cliente deleteMany
   */
  export type ClienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clientes to delete
     */
    where?: ClienteWhereInput
    /**
     * Limit how many Clientes to delete.
     */
    limit?: number
  }

  /**
   * Cliente.facturas
   */
  export type Cliente$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    where?: Factura_MaestroWhereInput
    orderBy?: Factura_MaestroOrderByWithRelationInput | Factura_MaestroOrderByWithRelationInput[]
    cursor?: Factura_MaestroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Factura_MaestroScalarFieldEnum | Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Cliente without action
   */
  export type ClienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cliente
     */
    select?: ClienteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cliente
     */
    omit?: ClienteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClienteInclude<ExtArgs> | null
  }


  /**
   * Model Vendedor
   */

  export type AggregateVendedor = {
    _count: VendedorCountAggregateOutputType | null
    _avg: VendedorAvgAggregateOutputType | null
    _sum: VendedorSumAggregateOutputType | null
    _min: VendedorMinAggregateOutputType | null
    _max: VendedorMaxAggregateOutputType | null
  }

  export type VendedorAvgAggregateOutputType = {
    id_vendedor: number | null
  }

  export type VendedorSumAggregateOutputType = {
    id_vendedor: number | null
  }

  export type VendedorMinAggregateOutputType = {
    id_vendedor: number | null
    nombre: string | null
    telefono: string | null
    email: string | null
  }

  export type VendedorMaxAggregateOutputType = {
    id_vendedor: number | null
    nombre: string | null
    telefono: string | null
    email: string | null
  }

  export type VendedorCountAggregateOutputType = {
    id_vendedor: number
    nombre: number
    telefono: number
    email: number
    _all: number
  }


  export type VendedorAvgAggregateInputType = {
    id_vendedor?: true
  }

  export type VendedorSumAggregateInputType = {
    id_vendedor?: true
  }

  export type VendedorMinAggregateInputType = {
    id_vendedor?: true
    nombre?: true
    telefono?: true
    email?: true
  }

  export type VendedorMaxAggregateInputType = {
    id_vendedor?: true
    nombre?: true
    telefono?: true
    email?: true
  }

  export type VendedorCountAggregateInputType = {
    id_vendedor?: true
    nombre?: true
    telefono?: true
    email?: true
    _all?: true
  }

  export type VendedorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendedor to aggregate.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Vendedors
    **/
    _count?: true | VendedorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VendedorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VendedorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VendedorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VendedorMaxAggregateInputType
  }

  export type GetVendedorAggregateType<T extends VendedorAggregateArgs> = {
        [P in keyof T & keyof AggregateVendedor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVendedor[P]>
      : GetScalarType<T[P], AggregateVendedor[P]>
  }




  export type VendedorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VendedorWhereInput
    orderBy?: VendedorOrderByWithAggregationInput | VendedorOrderByWithAggregationInput[]
    by: VendedorScalarFieldEnum[] | VendedorScalarFieldEnum
    having?: VendedorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VendedorCountAggregateInputType | true
    _avg?: VendedorAvgAggregateInputType
    _sum?: VendedorSumAggregateInputType
    _min?: VendedorMinAggregateInputType
    _max?: VendedorMaxAggregateInputType
  }

  export type VendedorGroupByOutputType = {
    id_vendedor: number
    nombre: string
    telefono: string | null
    email: string
    _count: VendedorCountAggregateOutputType | null
    _avg: VendedorAvgAggregateOutputType | null
    _sum: VendedorSumAggregateOutputType | null
    _min: VendedorMinAggregateOutputType | null
    _max: VendedorMaxAggregateOutputType | null
  }

  type GetVendedorGroupByPayload<T extends VendedorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VendedorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VendedorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VendedorGroupByOutputType[P]>
            : GetScalarType<T[P], VendedorGroupByOutputType[P]>
        }
      >
    >


  export type VendedorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_vendedor?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
  }, ExtArgs["result"]["vendedor"]>

  export type VendedorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_vendedor?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
  }, ExtArgs["result"]["vendedor"]>

  export type VendedorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_vendedor?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
  }, ExtArgs["result"]["vendedor"]>

  export type VendedorSelectScalar = {
    id_vendedor?: boolean
    nombre?: boolean
    telefono?: boolean
    email?: boolean
  }

  export type VendedorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_vendedor" | "nombre" | "telefono" | "email", ExtArgs["result"]["vendedor"]>

  export type $VendedorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vendedor"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_vendedor: number
      nombre: string
      telefono: string | null
      email: string
    }, ExtArgs["result"]["vendedor"]>
    composites: {}
  }

  type VendedorGetPayload<S extends boolean | null | undefined | VendedorDefaultArgs> = $Result.GetResult<Prisma.$VendedorPayload, S>

  type VendedorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VendedorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VendedorCountAggregateInputType | true
    }

  export interface VendedorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vendedor'], meta: { name: 'Vendedor' } }
    /**
     * Find zero or one Vendedor that matches the filter.
     * @param {VendedorFindUniqueArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VendedorFindUniqueArgs>(args: SelectSubset<T, VendedorFindUniqueArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vendedor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VendedorFindUniqueOrThrowArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VendedorFindUniqueOrThrowArgs>(args: SelectSubset<T, VendedorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendedor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindFirstArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VendedorFindFirstArgs>(args?: SelectSubset<T, VendedorFindFirstArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vendedor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindFirstOrThrowArgs} args - Arguments to find a Vendedor
     * @example
     * // Get one Vendedor
     * const vendedor = await prisma.vendedor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VendedorFindFirstOrThrowArgs>(args?: SelectSubset<T, VendedorFindFirstOrThrowArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Vendedors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vendedors
     * const vendedors = await prisma.vendedor.findMany()
     * 
     * // Get first 10 Vendedors
     * const vendedors = await prisma.vendedor.findMany({ take: 10 })
     * 
     * // Only select the `id_vendedor`
     * const vendedorWithId_vendedorOnly = await prisma.vendedor.findMany({ select: { id_vendedor: true } })
     * 
     */
    findMany<T extends VendedorFindManyArgs>(args?: SelectSubset<T, VendedorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vendedor.
     * @param {VendedorCreateArgs} args - Arguments to create a Vendedor.
     * @example
     * // Create one Vendedor
     * const Vendedor = await prisma.vendedor.create({
     *   data: {
     *     // ... data to create a Vendedor
     *   }
     * })
     * 
     */
    create<T extends VendedorCreateArgs>(args: SelectSubset<T, VendedorCreateArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Vendedors.
     * @param {VendedorCreateManyArgs} args - Arguments to create many Vendedors.
     * @example
     * // Create many Vendedors
     * const vendedor = await prisma.vendedor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VendedorCreateManyArgs>(args?: SelectSubset<T, VendedorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Vendedors and returns the data saved in the database.
     * @param {VendedorCreateManyAndReturnArgs} args - Arguments to create many Vendedors.
     * @example
     * // Create many Vendedors
     * const vendedor = await prisma.vendedor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Vendedors and only return the `id_vendedor`
     * const vendedorWithId_vendedorOnly = await prisma.vendedor.createManyAndReturn({
     *   select: { id_vendedor: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VendedorCreateManyAndReturnArgs>(args?: SelectSubset<T, VendedorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vendedor.
     * @param {VendedorDeleteArgs} args - Arguments to delete one Vendedor.
     * @example
     * // Delete one Vendedor
     * const Vendedor = await prisma.vendedor.delete({
     *   where: {
     *     // ... filter to delete one Vendedor
     *   }
     * })
     * 
     */
    delete<T extends VendedorDeleteArgs>(args: SelectSubset<T, VendedorDeleteArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vendedor.
     * @param {VendedorUpdateArgs} args - Arguments to update one Vendedor.
     * @example
     * // Update one Vendedor
     * const vendedor = await prisma.vendedor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VendedorUpdateArgs>(args: SelectSubset<T, VendedorUpdateArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Vendedors.
     * @param {VendedorDeleteManyArgs} args - Arguments to filter Vendedors to delete.
     * @example
     * // Delete a few Vendedors
     * const { count } = await prisma.vendedor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VendedorDeleteManyArgs>(args?: SelectSubset<T, VendedorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vendedors
     * const vendedor = await prisma.vendedor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VendedorUpdateManyArgs>(args: SelectSubset<T, VendedorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vendedors and returns the data updated in the database.
     * @param {VendedorUpdateManyAndReturnArgs} args - Arguments to update many Vendedors.
     * @example
     * // Update many Vendedors
     * const vendedor = await prisma.vendedor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Vendedors and only return the `id_vendedor`
     * const vendedorWithId_vendedorOnly = await prisma.vendedor.updateManyAndReturn({
     *   select: { id_vendedor: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VendedorUpdateManyAndReturnArgs>(args: SelectSubset<T, VendedorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vendedor.
     * @param {VendedorUpsertArgs} args - Arguments to update or create a Vendedor.
     * @example
     * // Update or create a Vendedor
     * const vendedor = await prisma.vendedor.upsert({
     *   create: {
     *     // ... data to create a Vendedor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vendedor we want to update
     *   }
     * })
     */
    upsert<T extends VendedorUpsertArgs>(args: SelectSubset<T, VendedorUpsertArgs<ExtArgs>>): Prisma__VendedorClient<$Result.GetResult<Prisma.$VendedorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Vendedors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorCountArgs} args - Arguments to filter Vendedors to count.
     * @example
     * // Count the number of Vendedors
     * const count = await prisma.vendedor.count({
     *   where: {
     *     // ... the filter for the Vendedors we want to count
     *   }
     * })
    **/
    count<T extends VendedorCountArgs>(
      args?: Subset<T, VendedorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VendedorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VendedorAggregateArgs>(args: Subset<T, VendedorAggregateArgs>): Prisma.PrismaPromise<GetVendedorAggregateType<T>>

    /**
     * Group by Vendedor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VendedorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VendedorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VendedorGroupByArgs['orderBy'] }
        : { orderBy?: VendedorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VendedorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVendedorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vendedor model
   */
  readonly fields: VendedorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vendedor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VendedorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vendedor model
   */
  interface VendedorFieldRefs {
    readonly id_vendedor: FieldRef<"Vendedor", 'Int'>
    readonly nombre: FieldRef<"Vendedor", 'String'>
    readonly telefono: FieldRef<"Vendedor", 'String'>
    readonly email: FieldRef<"Vendedor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Vendedor findUnique
   */
  export type VendedorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor findUniqueOrThrow
   */
  export type VendedorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor findFirst
   */
  export type VendedorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendedors.
     */
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor findFirstOrThrow
   */
  export type VendedorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter, which Vendedor to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Vendedors.
     */
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor findMany
   */
  export type VendedorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter, which Vendedors to fetch.
     */
    where?: VendedorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Vendedors to fetch.
     */
    orderBy?: VendedorOrderByWithRelationInput | VendedorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Vendedors.
     */
    cursor?: VendedorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Vendedors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Vendedors.
     */
    skip?: number
    distinct?: VendedorScalarFieldEnum | VendedorScalarFieldEnum[]
  }

  /**
   * Vendedor create
   */
  export type VendedorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * The data needed to create a Vendedor.
     */
    data: XOR<VendedorCreateInput, VendedorUncheckedCreateInput>
  }

  /**
   * Vendedor createMany
   */
  export type VendedorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Vendedors.
     */
    data: VendedorCreateManyInput | VendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vendedor createManyAndReturn
   */
  export type VendedorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * The data used to create many Vendedors.
     */
    data: VendedorCreateManyInput | VendedorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vendedor update
   */
  export type VendedorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * The data needed to update a Vendedor.
     */
    data: XOR<VendedorUpdateInput, VendedorUncheckedUpdateInput>
    /**
     * Choose, which Vendedor to update.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor updateMany
   */
  export type VendedorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Vendedors.
     */
    data: XOR<VendedorUpdateManyMutationInput, VendedorUncheckedUpdateManyInput>
    /**
     * Filter which Vendedors to update
     */
    where?: VendedorWhereInput
    /**
     * Limit how many Vendedors to update.
     */
    limit?: number
  }

  /**
   * Vendedor updateManyAndReturn
   */
  export type VendedorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * The data used to update Vendedors.
     */
    data: XOR<VendedorUpdateManyMutationInput, VendedorUncheckedUpdateManyInput>
    /**
     * Filter which Vendedors to update
     */
    where?: VendedorWhereInput
    /**
     * Limit how many Vendedors to update.
     */
    limit?: number
  }

  /**
   * Vendedor upsert
   */
  export type VendedorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * The filter to search for the Vendedor to update in case it exists.
     */
    where: VendedorWhereUniqueInput
    /**
     * In case the Vendedor found by the `where` argument doesn't exist, create a new Vendedor with this data.
     */
    create: XOR<VendedorCreateInput, VendedorUncheckedCreateInput>
    /**
     * In case the Vendedor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VendedorUpdateInput, VendedorUncheckedUpdateInput>
  }

  /**
   * Vendedor delete
   */
  export type VendedorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
    /**
     * Filter which Vendedor to delete.
     */
    where: VendedorWhereUniqueInput
  }

  /**
   * Vendedor deleteMany
   */
  export type VendedorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vendedors to delete
     */
    where?: VendedorWhereInput
    /**
     * Limit how many Vendedors to delete.
     */
    limit?: number
  }

  /**
   * Vendedor without action
   */
  export type VendedorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vendedor
     */
    select?: VendedorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vendedor
     */
    omit?: VendedorOmit<ExtArgs> | null
  }


  /**
   * Model Factura_Maestro
   */

  export type AggregateFactura_Maestro = {
    _count: Factura_MaestroCountAggregateOutputType | null
    _avg: Factura_MaestroAvgAggregateOutputType | null
    _sum: Factura_MaestroSumAggregateOutputType | null
    _min: Factura_MaestroMinAggregateOutputType | null
    _max: Factura_MaestroMaxAggregateOutputType | null
  }

  export type Factura_MaestroAvgAggregateOutputType = {
    id_factura_maestro: number | null
    cliente_id: number | null
    total: Decimal | null
    total_pagado: Decimal | null
  }

  export type Factura_MaestroSumAggregateOutputType = {
    id_factura_maestro: number | null
    cliente_id: number | null
    total: Decimal | null
    total_pagado: Decimal | null
  }

  export type Factura_MaestroMinAggregateOutputType = {
    id_factura_maestro: number | null
    numero_factura: string | null
    cliente_id: number | null
    fecha_factura: Date | null
    nit_cliente: string | null
    total: Decimal | null
    total_pagado: Decimal | null
    estado_factura: string | null
    metodo_pago: string | null
  }

  export type Factura_MaestroMaxAggregateOutputType = {
    id_factura_maestro: number | null
    numero_factura: string | null
    cliente_id: number | null
    fecha_factura: Date | null
    nit_cliente: string | null
    total: Decimal | null
    total_pagado: Decimal | null
    estado_factura: string | null
    metodo_pago: string | null
  }

  export type Factura_MaestroCountAggregateOutputType = {
    id_factura_maestro: number
    numero_factura: number
    cliente_id: number
    fecha_factura: number
    nit_cliente: number
    total: number
    total_pagado: number
    estado_factura: number
    metodo_pago: number
    _all: number
  }


  export type Factura_MaestroAvgAggregateInputType = {
    id_factura_maestro?: true
    cliente_id?: true
    total?: true
    total_pagado?: true
  }

  export type Factura_MaestroSumAggregateInputType = {
    id_factura_maestro?: true
    cliente_id?: true
    total?: true
    total_pagado?: true
  }

  export type Factura_MaestroMinAggregateInputType = {
    id_factura_maestro?: true
    numero_factura?: true
    cliente_id?: true
    fecha_factura?: true
    nit_cliente?: true
    total?: true
    total_pagado?: true
    estado_factura?: true
    metodo_pago?: true
  }

  export type Factura_MaestroMaxAggregateInputType = {
    id_factura_maestro?: true
    numero_factura?: true
    cliente_id?: true
    fecha_factura?: true
    nit_cliente?: true
    total?: true
    total_pagado?: true
    estado_factura?: true
    metodo_pago?: true
  }

  export type Factura_MaestroCountAggregateInputType = {
    id_factura_maestro?: true
    numero_factura?: true
    cliente_id?: true
    fecha_factura?: true
    nit_cliente?: true
    total?: true
    total_pagado?: true
    estado_factura?: true
    metodo_pago?: true
    _all?: true
  }

  export type Factura_MaestroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Factura_Maestro to aggregate.
     */
    where?: Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Maestros to fetch.
     */
    orderBy?: Factura_MaestroOrderByWithRelationInput | Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Factura_Maestros
    **/
    _count?: true | Factura_MaestroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Factura_MaestroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Factura_MaestroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Factura_MaestroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Factura_MaestroMaxAggregateInputType
  }

  export type GetFactura_MaestroAggregateType<T extends Factura_MaestroAggregateArgs> = {
        [P in keyof T & keyof AggregateFactura_Maestro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFactura_Maestro[P]>
      : GetScalarType<T[P], AggregateFactura_Maestro[P]>
  }




  export type Factura_MaestroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Factura_MaestroWhereInput
    orderBy?: Factura_MaestroOrderByWithAggregationInput | Factura_MaestroOrderByWithAggregationInput[]
    by: Factura_MaestroScalarFieldEnum[] | Factura_MaestroScalarFieldEnum
    having?: Factura_MaestroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Factura_MaestroCountAggregateInputType | true
    _avg?: Factura_MaestroAvgAggregateInputType
    _sum?: Factura_MaestroSumAggregateInputType
    _min?: Factura_MaestroMinAggregateInputType
    _max?: Factura_MaestroMaxAggregateInputType
  }

  export type Factura_MaestroGroupByOutputType = {
    id_factura_maestro: number
    numero_factura: string
    cliente_id: number
    fecha_factura: Date
    nit_cliente: string
    total: Decimal
    total_pagado: Decimal
    estado_factura: string
    metodo_pago: string | null
    _count: Factura_MaestroCountAggregateOutputType | null
    _avg: Factura_MaestroAvgAggregateOutputType | null
    _sum: Factura_MaestroSumAggregateOutputType | null
    _min: Factura_MaestroMinAggregateOutputType | null
    _max: Factura_MaestroMaxAggregateOutputType | null
  }

  type GetFactura_MaestroGroupByPayload<T extends Factura_MaestroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Factura_MaestroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Factura_MaestroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Factura_MaestroGroupByOutputType[P]>
            : GetScalarType<T[P], Factura_MaestroGroupByOutputType[P]>
        }
      >
    >


  export type Factura_MaestroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_maestro?: boolean
    numero_factura?: boolean
    cliente_id?: boolean
    fecha_factura?: boolean
    nit_cliente?: boolean
    total?: boolean
    total_pagado?: boolean
    estado_factura?: boolean
    metodo_pago?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    detalles?: boolean | Factura_Maestro$detallesArgs<ExtArgs>
    ventas?: boolean | Factura_Maestro$ventasArgs<ExtArgs>
    _count?: boolean | Factura_MaestroCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Maestro"]>

  export type Factura_MaestroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_maestro?: boolean
    numero_factura?: boolean
    cliente_id?: boolean
    fecha_factura?: boolean
    nit_cliente?: boolean
    total?: boolean
    total_pagado?: boolean
    estado_factura?: boolean
    metodo_pago?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Maestro"]>

  export type Factura_MaestroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_maestro?: boolean
    numero_factura?: boolean
    cliente_id?: boolean
    fecha_factura?: boolean
    nit_cliente?: boolean
    total?: boolean
    total_pagado?: boolean
    estado_factura?: boolean
    metodo_pago?: boolean
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Maestro"]>

  export type Factura_MaestroSelectScalar = {
    id_factura_maestro?: boolean
    numero_factura?: boolean
    cliente_id?: boolean
    fecha_factura?: boolean
    nit_cliente?: boolean
    total?: boolean
    total_pagado?: boolean
    estado_factura?: boolean
    metodo_pago?: boolean
  }

  export type Factura_MaestroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_factura_maestro" | "numero_factura" | "cliente_id" | "fecha_factura" | "nit_cliente" | "total" | "total_pagado" | "estado_factura" | "metodo_pago", ExtArgs["result"]["factura_Maestro"]>
  export type Factura_MaestroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
    detalles?: boolean | Factura_Maestro$detallesArgs<ExtArgs>
    ventas?: boolean | Factura_Maestro$ventasArgs<ExtArgs>
    _count?: boolean | Factura_MaestroCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Factura_MaestroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }
  export type Factura_MaestroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cliente?: boolean | ClienteDefaultArgs<ExtArgs>
  }

  export type $Factura_MaestroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Factura_Maestro"
    objects: {
      cliente: Prisma.$ClientePayload<ExtArgs>
      detalles: Prisma.$Factura_DetallePayload<ExtArgs>[]
      ventas: Prisma.$Venta_Factura_MaestroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_factura_maestro: number
      numero_factura: string
      cliente_id: number
      fecha_factura: Date
      nit_cliente: string
      total: Prisma.Decimal
      total_pagado: Prisma.Decimal
      estado_factura: string
      metodo_pago: string | null
    }, ExtArgs["result"]["factura_Maestro"]>
    composites: {}
  }

  type Factura_MaestroGetPayload<S extends boolean | null | undefined | Factura_MaestroDefaultArgs> = $Result.GetResult<Prisma.$Factura_MaestroPayload, S>

  type Factura_MaestroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Factura_MaestroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Factura_MaestroCountAggregateInputType | true
    }

  export interface Factura_MaestroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Factura_Maestro'], meta: { name: 'Factura_Maestro' } }
    /**
     * Find zero or one Factura_Maestro that matches the filter.
     * @param {Factura_MaestroFindUniqueArgs} args - Arguments to find a Factura_Maestro
     * @example
     * // Get one Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Factura_MaestroFindUniqueArgs>(args: SelectSubset<T, Factura_MaestroFindUniqueArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Factura_Maestro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Factura_MaestroFindUniqueOrThrowArgs} args - Arguments to find a Factura_Maestro
     * @example
     * // Get one Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Factura_MaestroFindUniqueOrThrowArgs>(args: SelectSubset<T, Factura_MaestroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura_Maestro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroFindFirstArgs} args - Arguments to find a Factura_Maestro
     * @example
     * // Get one Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Factura_MaestroFindFirstArgs>(args?: SelectSubset<T, Factura_MaestroFindFirstArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura_Maestro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroFindFirstOrThrowArgs} args - Arguments to find a Factura_Maestro
     * @example
     * // Get one Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Factura_MaestroFindFirstOrThrowArgs>(args?: SelectSubset<T, Factura_MaestroFindFirstOrThrowArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Factura_Maestros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Factura_Maestros
     * const factura_Maestros = await prisma.factura_Maestro.findMany()
     * 
     * // Get first 10 Factura_Maestros
     * const factura_Maestros = await prisma.factura_Maestro.findMany({ take: 10 })
     * 
     * // Only select the `id_factura_maestro`
     * const factura_MaestroWithId_factura_maestroOnly = await prisma.factura_Maestro.findMany({ select: { id_factura_maestro: true } })
     * 
     */
    findMany<T extends Factura_MaestroFindManyArgs>(args?: SelectSubset<T, Factura_MaestroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Factura_Maestro.
     * @param {Factura_MaestroCreateArgs} args - Arguments to create a Factura_Maestro.
     * @example
     * // Create one Factura_Maestro
     * const Factura_Maestro = await prisma.factura_Maestro.create({
     *   data: {
     *     // ... data to create a Factura_Maestro
     *   }
     * })
     * 
     */
    create<T extends Factura_MaestroCreateArgs>(args: SelectSubset<T, Factura_MaestroCreateArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Factura_Maestros.
     * @param {Factura_MaestroCreateManyArgs} args - Arguments to create many Factura_Maestros.
     * @example
     * // Create many Factura_Maestros
     * const factura_Maestro = await prisma.factura_Maestro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Factura_MaestroCreateManyArgs>(args?: SelectSubset<T, Factura_MaestroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Factura_Maestros and returns the data saved in the database.
     * @param {Factura_MaestroCreateManyAndReturnArgs} args - Arguments to create many Factura_Maestros.
     * @example
     * // Create many Factura_Maestros
     * const factura_Maestro = await prisma.factura_Maestro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Factura_Maestros and only return the `id_factura_maestro`
     * const factura_MaestroWithId_factura_maestroOnly = await prisma.factura_Maestro.createManyAndReturn({
     *   select: { id_factura_maestro: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Factura_MaestroCreateManyAndReturnArgs>(args?: SelectSubset<T, Factura_MaestroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Factura_Maestro.
     * @param {Factura_MaestroDeleteArgs} args - Arguments to delete one Factura_Maestro.
     * @example
     * // Delete one Factura_Maestro
     * const Factura_Maestro = await prisma.factura_Maestro.delete({
     *   where: {
     *     // ... filter to delete one Factura_Maestro
     *   }
     * })
     * 
     */
    delete<T extends Factura_MaestroDeleteArgs>(args: SelectSubset<T, Factura_MaestroDeleteArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Factura_Maestro.
     * @param {Factura_MaestroUpdateArgs} args - Arguments to update one Factura_Maestro.
     * @example
     * // Update one Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Factura_MaestroUpdateArgs>(args: SelectSubset<T, Factura_MaestroUpdateArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Factura_Maestros.
     * @param {Factura_MaestroDeleteManyArgs} args - Arguments to filter Factura_Maestros to delete.
     * @example
     * // Delete a few Factura_Maestros
     * const { count } = await prisma.factura_Maestro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Factura_MaestroDeleteManyArgs>(args?: SelectSubset<T, Factura_MaestroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Factura_Maestros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Factura_Maestros
     * const factura_Maestro = await prisma.factura_Maestro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Factura_MaestroUpdateManyArgs>(args: SelectSubset<T, Factura_MaestroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Factura_Maestros and returns the data updated in the database.
     * @param {Factura_MaestroUpdateManyAndReturnArgs} args - Arguments to update many Factura_Maestros.
     * @example
     * // Update many Factura_Maestros
     * const factura_Maestro = await prisma.factura_Maestro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Factura_Maestros and only return the `id_factura_maestro`
     * const factura_MaestroWithId_factura_maestroOnly = await prisma.factura_Maestro.updateManyAndReturn({
     *   select: { id_factura_maestro: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Factura_MaestroUpdateManyAndReturnArgs>(args: SelectSubset<T, Factura_MaestroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Factura_Maestro.
     * @param {Factura_MaestroUpsertArgs} args - Arguments to update or create a Factura_Maestro.
     * @example
     * // Update or create a Factura_Maestro
     * const factura_Maestro = await prisma.factura_Maestro.upsert({
     *   create: {
     *     // ... data to create a Factura_Maestro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Factura_Maestro we want to update
     *   }
     * })
     */
    upsert<T extends Factura_MaestroUpsertArgs>(args: SelectSubset<T, Factura_MaestroUpsertArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Factura_Maestros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroCountArgs} args - Arguments to filter Factura_Maestros to count.
     * @example
     * // Count the number of Factura_Maestros
     * const count = await prisma.factura_Maestro.count({
     *   where: {
     *     // ... the filter for the Factura_Maestros we want to count
     *   }
     * })
    **/
    count<T extends Factura_MaestroCountArgs>(
      args?: Subset<T, Factura_MaestroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Factura_MaestroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Factura_Maestro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Factura_MaestroAggregateArgs>(args: Subset<T, Factura_MaestroAggregateArgs>): Prisma.PrismaPromise<GetFactura_MaestroAggregateType<T>>

    /**
     * Group by Factura_Maestro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_MaestroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Factura_MaestroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Factura_MaestroGroupByArgs['orderBy'] }
        : { orderBy?: Factura_MaestroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Factura_MaestroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFactura_MaestroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Factura_Maestro model
   */
  readonly fields: Factura_MaestroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Factura_Maestro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Factura_MaestroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cliente<T extends ClienteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClienteDefaultArgs<ExtArgs>>): Prisma__ClienteClient<$Result.GetResult<Prisma.$ClientePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalles<T extends Factura_Maestro$detallesArgs<ExtArgs> = {}>(args?: Subset<T, Factura_Maestro$detallesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ventas<T extends Factura_Maestro$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Factura_Maestro$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Factura_Maestro model
   */
  interface Factura_MaestroFieldRefs {
    readonly id_factura_maestro: FieldRef<"Factura_Maestro", 'Int'>
    readonly numero_factura: FieldRef<"Factura_Maestro", 'String'>
    readonly cliente_id: FieldRef<"Factura_Maestro", 'Int'>
    readonly fecha_factura: FieldRef<"Factura_Maestro", 'DateTime'>
    readonly nit_cliente: FieldRef<"Factura_Maestro", 'String'>
    readonly total: FieldRef<"Factura_Maestro", 'Decimal'>
    readonly total_pagado: FieldRef<"Factura_Maestro", 'Decimal'>
    readonly estado_factura: FieldRef<"Factura_Maestro", 'String'>
    readonly metodo_pago: FieldRef<"Factura_Maestro", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Factura_Maestro findUnique
   */
  export type Factura_MaestroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Maestro to fetch.
     */
    where: Factura_MaestroWhereUniqueInput
  }

  /**
   * Factura_Maestro findUniqueOrThrow
   */
  export type Factura_MaestroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Maestro to fetch.
     */
    where: Factura_MaestroWhereUniqueInput
  }

  /**
   * Factura_Maestro findFirst
   */
  export type Factura_MaestroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Maestro to fetch.
     */
    where?: Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Maestros to fetch.
     */
    orderBy?: Factura_MaestroOrderByWithRelationInput | Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Factura_Maestros.
     */
    cursor?: Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Factura_Maestros.
     */
    distinct?: Factura_MaestroScalarFieldEnum | Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Factura_Maestro findFirstOrThrow
   */
  export type Factura_MaestroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Maestro to fetch.
     */
    where?: Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Maestros to fetch.
     */
    orderBy?: Factura_MaestroOrderByWithRelationInput | Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Factura_Maestros.
     */
    cursor?: Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Factura_Maestros.
     */
    distinct?: Factura_MaestroScalarFieldEnum | Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Factura_Maestro findMany
   */
  export type Factura_MaestroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Maestros to fetch.
     */
    where?: Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Maestros to fetch.
     */
    orderBy?: Factura_MaestroOrderByWithRelationInput | Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Factura_Maestros.
     */
    cursor?: Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Maestros.
     */
    skip?: number
    distinct?: Factura_MaestroScalarFieldEnum | Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Factura_Maestro create
   */
  export type Factura_MaestroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * The data needed to create a Factura_Maestro.
     */
    data: XOR<Factura_MaestroCreateInput, Factura_MaestroUncheckedCreateInput>
  }

  /**
   * Factura_Maestro createMany
   */
  export type Factura_MaestroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Factura_Maestros.
     */
    data: Factura_MaestroCreateManyInput | Factura_MaestroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Factura_Maestro createManyAndReturn
   */
  export type Factura_MaestroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * The data used to create many Factura_Maestros.
     */
    data: Factura_MaestroCreateManyInput | Factura_MaestroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura_Maestro update
   */
  export type Factura_MaestroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * The data needed to update a Factura_Maestro.
     */
    data: XOR<Factura_MaestroUpdateInput, Factura_MaestroUncheckedUpdateInput>
    /**
     * Choose, which Factura_Maestro to update.
     */
    where: Factura_MaestroWhereUniqueInput
  }

  /**
   * Factura_Maestro updateMany
   */
  export type Factura_MaestroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Factura_Maestros.
     */
    data: XOR<Factura_MaestroUpdateManyMutationInput, Factura_MaestroUncheckedUpdateManyInput>
    /**
     * Filter which Factura_Maestros to update
     */
    where?: Factura_MaestroWhereInput
    /**
     * Limit how many Factura_Maestros to update.
     */
    limit?: number
  }

  /**
   * Factura_Maestro updateManyAndReturn
   */
  export type Factura_MaestroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * The data used to update Factura_Maestros.
     */
    data: XOR<Factura_MaestroUpdateManyMutationInput, Factura_MaestroUncheckedUpdateManyInput>
    /**
     * Filter which Factura_Maestros to update
     */
    where?: Factura_MaestroWhereInput
    /**
     * Limit how many Factura_Maestros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura_Maestro upsert
   */
  export type Factura_MaestroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * The filter to search for the Factura_Maestro to update in case it exists.
     */
    where: Factura_MaestroWhereUniqueInput
    /**
     * In case the Factura_Maestro found by the `where` argument doesn't exist, create a new Factura_Maestro with this data.
     */
    create: XOR<Factura_MaestroCreateInput, Factura_MaestroUncheckedCreateInput>
    /**
     * In case the Factura_Maestro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Factura_MaestroUpdateInput, Factura_MaestroUncheckedUpdateInput>
  }

  /**
   * Factura_Maestro delete
   */
  export type Factura_MaestroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter which Factura_Maestro to delete.
     */
    where: Factura_MaestroWhereUniqueInput
  }

  /**
   * Factura_Maestro deleteMany
   */
  export type Factura_MaestroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Factura_Maestros to delete
     */
    where?: Factura_MaestroWhereInput
    /**
     * Limit how many Factura_Maestros to delete.
     */
    limit?: number
  }

  /**
   * Factura_Maestro.detalles
   */
  export type Factura_Maestro$detallesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    where?: Factura_DetalleWhereInput
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    cursor?: Factura_DetalleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Factura_DetalleScalarFieldEnum | Factura_DetalleScalarFieldEnum[]
  }

  /**
   * Factura_Maestro.ventas
   */
  export type Factura_Maestro$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    where?: Venta_Factura_MaestroWhereInput
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Venta_Factura_MaestroScalarFieldEnum | Venta_Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Factura_Maestro without action
   */
  export type Factura_MaestroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Maestro
     */
    select?: Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Maestro
     */
    omit?: Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_MaestroInclude<ExtArgs> | null
  }


  /**
   * Model Factura_Detalle
   */

  export type AggregateFactura_Detalle = {
    _count: Factura_DetalleCountAggregateOutputType | null
    _avg: Factura_DetalleAvgAggregateOutputType | null
    _sum: Factura_DetalleSumAggregateOutputType | null
    _min: Factura_DetalleMinAggregateOutputType | null
    _max: Factura_DetalleMaxAggregateOutputType | null
  }

  export type Factura_DetalleAvgAggregateOutputType = {
    id_factura_detalle: number | null
    factura_maestro_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
    total_producto: Decimal | null
  }

  export type Factura_DetalleSumAggregateOutputType = {
    id_factura_detalle: number | null
    factura_maestro_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
    total_producto: Decimal | null
  }

  export type Factura_DetalleMinAggregateOutputType = {
    id_factura_detalle: number | null
    factura_maestro_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
    total_producto: Decimal | null
  }

  export type Factura_DetalleMaxAggregateOutputType = {
    id_factura_detalle: number | null
    factura_maestro_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
    total_producto: Decimal | null
  }

  export type Factura_DetalleCountAggregateOutputType = {
    id_factura_detalle: number
    factura_maestro_id: number
    producto_id: number
    cantidad: number
    precio_unitario: number
    total_producto: number
    _all: number
  }


  export type Factura_DetalleAvgAggregateInputType = {
    id_factura_detalle?: true
    factura_maestro_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    total_producto?: true
  }

  export type Factura_DetalleSumAggregateInputType = {
    id_factura_detalle?: true
    factura_maestro_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    total_producto?: true
  }

  export type Factura_DetalleMinAggregateInputType = {
    id_factura_detalle?: true
    factura_maestro_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    total_producto?: true
  }

  export type Factura_DetalleMaxAggregateInputType = {
    id_factura_detalle?: true
    factura_maestro_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    total_producto?: true
  }

  export type Factura_DetalleCountAggregateInputType = {
    id_factura_detalle?: true
    factura_maestro_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    total_producto?: true
    _all?: true
  }

  export type Factura_DetalleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Factura_Detalle to aggregate.
     */
    where?: Factura_DetalleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Detalles to fetch.
     */
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Factura_DetalleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Factura_Detalles
    **/
    _count?: true | Factura_DetalleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Factura_DetalleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Factura_DetalleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Factura_DetalleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Factura_DetalleMaxAggregateInputType
  }

  export type GetFactura_DetalleAggregateType<T extends Factura_DetalleAggregateArgs> = {
        [P in keyof T & keyof AggregateFactura_Detalle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFactura_Detalle[P]>
      : GetScalarType<T[P], AggregateFactura_Detalle[P]>
  }




  export type Factura_DetalleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Factura_DetalleWhereInput
    orderBy?: Factura_DetalleOrderByWithAggregationInput | Factura_DetalleOrderByWithAggregationInput[]
    by: Factura_DetalleScalarFieldEnum[] | Factura_DetalleScalarFieldEnum
    having?: Factura_DetalleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Factura_DetalleCountAggregateInputType | true
    _avg?: Factura_DetalleAvgAggregateInputType
    _sum?: Factura_DetalleSumAggregateInputType
    _min?: Factura_DetalleMinAggregateInputType
    _max?: Factura_DetalleMaxAggregateInputType
  }

  export type Factura_DetalleGroupByOutputType = {
    id_factura_detalle: number
    factura_maestro_id: number
    producto_id: number
    cantidad: number
    precio_unitario: Decimal
    total_producto: Decimal
    _count: Factura_DetalleCountAggregateOutputType | null
    _avg: Factura_DetalleAvgAggregateOutputType | null
    _sum: Factura_DetalleSumAggregateOutputType | null
    _min: Factura_DetalleMinAggregateOutputType | null
    _max: Factura_DetalleMaxAggregateOutputType | null
  }

  type GetFactura_DetalleGroupByPayload<T extends Factura_DetalleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Factura_DetalleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Factura_DetalleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Factura_DetalleGroupByOutputType[P]>
            : GetScalarType<T[P], Factura_DetalleGroupByOutputType[P]>
        }
      >
    >


  export type Factura_DetalleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_detalle?: boolean
    factura_maestro_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    total_producto?: boolean
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Detalle"]>

  export type Factura_DetalleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_detalle?: boolean
    factura_maestro_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    total_producto?: boolean
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Detalle"]>

  export type Factura_DetalleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_factura_detalle?: boolean
    factura_maestro_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    total_producto?: boolean
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["factura_Detalle"]>

  export type Factura_DetalleSelectScalar = {
    id_factura_detalle?: boolean
    factura_maestro_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    total_producto?: boolean
  }

  export type Factura_DetalleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_factura_detalle" | "factura_maestro_id" | "producto_id" | "cantidad" | "precio_unitario" | "total_producto", ExtArgs["result"]["factura_Detalle"]>
  export type Factura_DetalleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type Factura_DetalleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type Factura_DetalleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $Factura_DetallePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Factura_Detalle"
    objects: {
      factura_maestro: Prisma.$Factura_MaestroPayload<ExtArgs>
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_factura_detalle: number
      factura_maestro_id: number
      producto_id: number
      cantidad: number
      precio_unitario: Prisma.Decimal
      total_producto: Prisma.Decimal
    }, ExtArgs["result"]["factura_Detalle"]>
    composites: {}
  }

  type Factura_DetalleGetPayload<S extends boolean | null | undefined | Factura_DetalleDefaultArgs> = $Result.GetResult<Prisma.$Factura_DetallePayload, S>

  type Factura_DetalleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Factura_DetalleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Factura_DetalleCountAggregateInputType | true
    }

  export interface Factura_DetalleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Factura_Detalle'], meta: { name: 'Factura_Detalle' } }
    /**
     * Find zero or one Factura_Detalle that matches the filter.
     * @param {Factura_DetalleFindUniqueArgs} args - Arguments to find a Factura_Detalle
     * @example
     * // Get one Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Factura_DetalleFindUniqueArgs>(args: SelectSubset<T, Factura_DetalleFindUniqueArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Factura_Detalle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Factura_DetalleFindUniqueOrThrowArgs} args - Arguments to find a Factura_Detalle
     * @example
     * // Get one Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Factura_DetalleFindUniqueOrThrowArgs>(args: SelectSubset<T, Factura_DetalleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura_Detalle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleFindFirstArgs} args - Arguments to find a Factura_Detalle
     * @example
     * // Get one Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Factura_DetalleFindFirstArgs>(args?: SelectSubset<T, Factura_DetalleFindFirstArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Factura_Detalle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleFindFirstOrThrowArgs} args - Arguments to find a Factura_Detalle
     * @example
     * // Get one Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Factura_DetalleFindFirstOrThrowArgs>(args?: SelectSubset<T, Factura_DetalleFindFirstOrThrowArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Factura_Detalles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Factura_Detalles
     * const factura_Detalles = await prisma.factura_Detalle.findMany()
     * 
     * // Get first 10 Factura_Detalles
     * const factura_Detalles = await prisma.factura_Detalle.findMany({ take: 10 })
     * 
     * // Only select the `id_factura_detalle`
     * const factura_DetalleWithId_factura_detalleOnly = await prisma.factura_Detalle.findMany({ select: { id_factura_detalle: true } })
     * 
     */
    findMany<T extends Factura_DetalleFindManyArgs>(args?: SelectSubset<T, Factura_DetalleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Factura_Detalle.
     * @param {Factura_DetalleCreateArgs} args - Arguments to create a Factura_Detalle.
     * @example
     * // Create one Factura_Detalle
     * const Factura_Detalle = await prisma.factura_Detalle.create({
     *   data: {
     *     // ... data to create a Factura_Detalle
     *   }
     * })
     * 
     */
    create<T extends Factura_DetalleCreateArgs>(args: SelectSubset<T, Factura_DetalleCreateArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Factura_Detalles.
     * @param {Factura_DetalleCreateManyArgs} args - Arguments to create many Factura_Detalles.
     * @example
     * // Create many Factura_Detalles
     * const factura_Detalle = await prisma.factura_Detalle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Factura_DetalleCreateManyArgs>(args?: SelectSubset<T, Factura_DetalleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Factura_Detalles and returns the data saved in the database.
     * @param {Factura_DetalleCreateManyAndReturnArgs} args - Arguments to create many Factura_Detalles.
     * @example
     * // Create many Factura_Detalles
     * const factura_Detalle = await prisma.factura_Detalle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Factura_Detalles and only return the `id_factura_detalle`
     * const factura_DetalleWithId_factura_detalleOnly = await prisma.factura_Detalle.createManyAndReturn({
     *   select: { id_factura_detalle: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Factura_DetalleCreateManyAndReturnArgs>(args?: SelectSubset<T, Factura_DetalleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Factura_Detalle.
     * @param {Factura_DetalleDeleteArgs} args - Arguments to delete one Factura_Detalle.
     * @example
     * // Delete one Factura_Detalle
     * const Factura_Detalle = await prisma.factura_Detalle.delete({
     *   where: {
     *     // ... filter to delete one Factura_Detalle
     *   }
     * })
     * 
     */
    delete<T extends Factura_DetalleDeleteArgs>(args: SelectSubset<T, Factura_DetalleDeleteArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Factura_Detalle.
     * @param {Factura_DetalleUpdateArgs} args - Arguments to update one Factura_Detalle.
     * @example
     * // Update one Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Factura_DetalleUpdateArgs>(args: SelectSubset<T, Factura_DetalleUpdateArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Factura_Detalles.
     * @param {Factura_DetalleDeleteManyArgs} args - Arguments to filter Factura_Detalles to delete.
     * @example
     * // Delete a few Factura_Detalles
     * const { count } = await prisma.factura_Detalle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Factura_DetalleDeleteManyArgs>(args?: SelectSubset<T, Factura_DetalleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Factura_Detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Factura_Detalles
     * const factura_Detalle = await prisma.factura_Detalle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Factura_DetalleUpdateManyArgs>(args: SelectSubset<T, Factura_DetalleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Factura_Detalles and returns the data updated in the database.
     * @param {Factura_DetalleUpdateManyAndReturnArgs} args - Arguments to update many Factura_Detalles.
     * @example
     * // Update many Factura_Detalles
     * const factura_Detalle = await prisma.factura_Detalle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Factura_Detalles and only return the `id_factura_detalle`
     * const factura_DetalleWithId_factura_detalleOnly = await prisma.factura_Detalle.updateManyAndReturn({
     *   select: { id_factura_detalle: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Factura_DetalleUpdateManyAndReturnArgs>(args: SelectSubset<T, Factura_DetalleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Factura_Detalle.
     * @param {Factura_DetalleUpsertArgs} args - Arguments to update or create a Factura_Detalle.
     * @example
     * // Update or create a Factura_Detalle
     * const factura_Detalle = await prisma.factura_Detalle.upsert({
     *   create: {
     *     // ... data to create a Factura_Detalle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Factura_Detalle we want to update
     *   }
     * })
     */
    upsert<T extends Factura_DetalleUpsertArgs>(args: SelectSubset<T, Factura_DetalleUpsertArgs<ExtArgs>>): Prisma__Factura_DetalleClient<$Result.GetResult<Prisma.$Factura_DetallePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Factura_Detalles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleCountArgs} args - Arguments to filter Factura_Detalles to count.
     * @example
     * // Count the number of Factura_Detalles
     * const count = await prisma.factura_Detalle.count({
     *   where: {
     *     // ... the filter for the Factura_Detalles we want to count
     *   }
     * })
    **/
    count<T extends Factura_DetalleCountArgs>(
      args?: Subset<T, Factura_DetalleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Factura_DetalleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Factura_Detalle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Factura_DetalleAggregateArgs>(args: Subset<T, Factura_DetalleAggregateArgs>): Prisma.PrismaPromise<GetFactura_DetalleAggregateType<T>>

    /**
     * Group by Factura_Detalle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Factura_DetalleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Factura_DetalleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Factura_DetalleGroupByArgs['orderBy'] }
        : { orderBy?: Factura_DetalleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Factura_DetalleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFactura_DetalleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Factura_Detalle model
   */
  readonly fields: Factura_DetalleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Factura_Detalle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Factura_DetalleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    factura_maestro<T extends Factura_MaestroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Factura_MaestroDefaultArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Factura_Detalle model
   */
  interface Factura_DetalleFieldRefs {
    readonly id_factura_detalle: FieldRef<"Factura_Detalle", 'Int'>
    readonly factura_maestro_id: FieldRef<"Factura_Detalle", 'Int'>
    readonly producto_id: FieldRef<"Factura_Detalle", 'Int'>
    readonly cantidad: FieldRef<"Factura_Detalle", 'Int'>
    readonly precio_unitario: FieldRef<"Factura_Detalle", 'Decimal'>
    readonly total_producto: FieldRef<"Factura_Detalle", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Factura_Detalle findUnique
   */
  export type Factura_DetalleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Detalle to fetch.
     */
    where: Factura_DetalleWhereUniqueInput
  }

  /**
   * Factura_Detalle findUniqueOrThrow
   */
  export type Factura_DetalleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Detalle to fetch.
     */
    where: Factura_DetalleWhereUniqueInput
  }

  /**
   * Factura_Detalle findFirst
   */
  export type Factura_DetalleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Detalle to fetch.
     */
    where?: Factura_DetalleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Detalles to fetch.
     */
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Factura_Detalles.
     */
    cursor?: Factura_DetalleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Factura_Detalles.
     */
    distinct?: Factura_DetalleScalarFieldEnum | Factura_DetalleScalarFieldEnum[]
  }

  /**
   * Factura_Detalle findFirstOrThrow
   */
  export type Factura_DetalleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Detalle to fetch.
     */
    where?: Factura_DetalleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Detalles to fetch.
     */
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Factura_Detalles.
     */
    cursor?: Factura_DetalleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Detalles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Factura_Detalles.
     */
    distinct?: Factura_DetalleScalarFieldEnum | Factura_DetalleScalarFieldEnum[]
  }

  /**
   * Factura_Detalle findMany
   */
  export type Factura_DetalleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter, which Factura_Detalles to fetch.
     */
    where?: Factura_DetalleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Factura_Detalles to fetch.
     */
    orderBy?: Factura_DetalleOrderByWithRelationInput | Factura_DetalleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Factura_Detalles.
     */
    cursor?: Factura_DetalleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Factura_Detalles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Factura_Detalles.
     */
    skip?: number
    distinct?: Factura_DetalleScalarFieldEnum | Factura_DetalleScalarFieldEnum[]
  }

  /**
   * Factura_Detalle create
   */
  export type Factura_DetalleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * The data needed to create a Factura_Detalle.
     */
    data: XOR<Factura_DetalleCreateInput, Factura_DetalleUncheckedCreateInput>
  }

  /**
   * Factura_Detalle createMany
   */
  export type Factura_DetalleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Factura_Detalles.
     */
    data: Factura_DetalleCreateManyInput | Factura_DetalleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Factura_Detalle createManyAndReturn
   */
  export type Factura_DetalleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * The data used to create many Factura_Detalles.
     */
    data: Factura_DetalleCreateManyInput | Factura_DetalleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura_Detalle update
   */
  export type Factura_DetalleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * The data needed to update a Factura_Detalle.
     */
    data: XOR<Factura_DetalleUpdateInput, Factura_DetalleUncheckedUpdateInput>
    /**
     * Choose, which Factura_Detalle to update.
     */
    where: Factura_DetalleWhereUniqueInput
  }

  /**
   * Factura_Detalle updateMany
   */
  export type Factura_DetalleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Factura_Detalles.
     */
    data: XOR<Factura_DetalleUpdateManyMutationInput, Factura_DetalleUncheckedUpdateManyInput>
    /**
     * Filter which Factura_Detalles to update
     */
    where?: Factura_DetalleWhereInput
    /**
     * Limit how many Factura_Detalles to update.
     */
    limit?: number
  }

  /**
   * Factura_Detalle updateManyAndReturn
   */
  export type Factura_DetalleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * The data used to update Factura_Detalles.
     */
    data: XOR<Factura_DetalleUpdateManyMutationInput, Factura_DetalleUncheckedUpdateManyInput>
    /**
     * Filter which Factura_Detalles to update
     */
    where?: Factura_DetalleWhereInput
    /**
     * Limit how many Factura_Detalles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Factura_Detalle upsert
   */
  export type Factura_DetalleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * The filter to search for the Factura_Detalle to update in case it exists.
     */
    where: Factura_DetalleWhereUniqueInput
    /**
     * In case the Factura_Detalle found by the `where` argument doesn't exist, create a new Factura_Detalle with this data.
     */
    create: XOR<Factura_DetalleCreateInput, Factura_DetalleUncheckedCreateInput>
    /**
     * In case the Factura_Detalle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Factura_DetalleUpdateInput, Factura_DetalleUncheckedUpdateInput>
  }

  /**
   * Factura_Detalle delete
   */
  export type Factura_DetalleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
    /**
     * Filter which Factura_Detalle to delete.
     */
    where: Factura_DetalleWhereUniqueInput
  }

  /**
   * Factura_Detalle deleteMany
   */
  export type Factura_DetalleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Factura_Detalles to delete
     */
    where?: Factura_DetalleWhereInput
    /**
     * Limit how many Factura_Detalles to delete.
     */
    limit?: number
  }

  /**
   * Factura_Detalle without action
   */
  export type Factura_DetalleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Factura_Detalle
     */
    select?: Factura_DetalleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Factura_Detalle
     */
    omit?: Factura_DetalleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Factura_DetalleInclude<ExtArgs> | null
  }


  /**
   * Model Inventario
   */

  export type AggregateInventario = {
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  export type InventarioAvgAggregateOutputType = {
    id_inventario: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InventarioSumAggregateOutputType = {
    id_inventario: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type InventarioMinAggregateOutputType = {
    id_inventario: number | null
    producto_id: number | null
    cantidad: number | null
    fecha_movimiento: Date | null
    tipo_movimiento: string | null
  }

  export type InventarioMaxAggregateOutputType = {
    id_inventario: number | null
    producto_id: number | null
    cantidad: number | null
    fecha_movimiento: Date | null
    tipo_movimiento: string | null
  }

  export type InventarioCountAggregateOutputType = {
    id_inventario: number
    producto_id: number
    cantidad: number
    fecha_movimiento: number
    tipo_movimiento: number
    _all: number
  }


  export type InventarioAvgAggregateInputType = {
    id_inventario?: true
    producto_id?: true
    cantidad?: true
  }

  export type InventarioSumAggregateInputType = {
    id_inventario?: true
    producto_id?: true
    cantidad?: true
  }

  export type InventarioMinAggregateInputType = {
    id_inventario?: true
    producto_id?: true
    cantidad?: true
    fecha_movimiento?: true
    tipo_movimiento?: true
  }

  export type InventarioMaxAggregateInputType = {
    id_inventario?: true
    producto_id?: true
    cantidad?: true
    fecha_movimiento?: true
    tipo_movimiento?: true
  }

  export type InventarioCountAggregateInputType = {
    id_inventario?: true
    producto_id?: true
    cantidad?: true
    fecha_movimiento?: true
    tipo_movimiento?: true
    _all?: true
  }

  export type InventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventario to aggregate.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inventarios
    **/
    _count?: true | InventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InventarioMaxAggregateInputType
  }

  export type GetInventarioAggregateType<T extends InventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateInventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInventario[P]>
      : GetScalarType<T[P], AggregateInventario[P]>
  }




  export type InventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InventarioWhereInput
    orderBy?: InventarioOrderByWithAggregationInput | InventarioOrderByWithAggregationInput[]
    by: InventarioScalarFieldEnum[] | InventarioScalarFieldEnum
    having?: InventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InventarioCountAggregateInputType | true
    _avg?: InventarioAvgAggregateInputType
    _sum?: InventarioSumAggregateInputType
    _min?: InventarioMinAggregateInputType
    _max?: InventarioMaxAggregateInputType
  }

  export type InventarioGroupByOutputType = {
    id_inventario: number
    producto_id: number
    cantidad: number
    fecha_movimiento: Date
    tipo_movimiento: string
    _count: InventarioCountAggregateOutputType | null
    _avg: InventarioAvgAggregateOutputType | null
    _sum: InventarioSumAggregateOutputType | null
    _min: InventarioMinAggregateOutputType | null
    _max: InventarioMaxAggregateOutputType | null
  }

  type GetInventarioGroupByPayload<T extends InventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InventarioGroupByOutputType[P]>
            : GetScalarType<T[P], InventarioGroupByOutputType[P]>
        }
      >
    >


  export type InventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_inventario?: boolean
    producto_id?: boolean
    cantidad?: boolean
    fecha_movimiento?: boolean
    tipo_movimiento?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_inventario?: boolean
    producto_id?: boolean
    cantidad?: boolean
    fecha_movimiento?: boolean
    tipo_movimiento?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_inventario?: boolean
    producto_id?: boolean
    cantidad?: boolean
    fecha_movimiento?: boolean
    tipo_movimiento?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inventario"]>

  export type InventarioSelectScalar = {
    id_inventario?: boolean
    producto_id?: boolean
    cantidad?: boolean
    fecha_movimiento?: boolean
    tipo_movimiento?: boolean
  }

  export type InventarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_inventario" | "producto_id" | "cantidad" | "fecha_movimiento" | "tipo_movimiento", ExtArgs["result"]["inventario"]>
  export type InventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type InventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }
  export type InventarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
  }

  export type $InventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inventario"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_inventario: number
      producto_id: number
      cantidad: number
      fecha_movimiento: Date
      tipo_movimiento: string
    }, ExtArgs["result"]["inventario"]>
    composites: {}
  }

  type InventarioGetPayload<S extends boolean | null | undefined | InventarioDefaultArgs> = $Result.GetResult<Prisma.$InventarioPayload, S>

  type InventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InventarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InventarioCountAggregateInputType | true
    }

  export interface InventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inventario'], meta: { name: 'Inventario' } }
    /**
     * Find zero or one Inventario that matches the filter.
     * @param {InventarioFindUniqueArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InventarioFindUniqueArgs>(args: SelectSubset<T, InventarioFindUniqueArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Inventario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InventarioFindUniqueOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, InventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InventarioFindFirstArgs>(args?: SelectSubset<T, InventarioFindFirstArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Inventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindFirstOrThrowArgs} args - Arguments to find a Inventario
     * @example
     * // Get one Inventario
     * const inventario = await prisma.inventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, InventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Inventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inventarios
     * const inventarios = await prisma.inventario.findMany()
     * 
     * // Get first 10 Inventarios
     * const inventarios = await prisma.inventario.findMany({ take: 10 })
     * 
     * // Only select the `id_inventario`
     * const inventarioWithId_inventarioOnly = await prisma.inventario.findMany({ select: { id_inventario: true } })
     * 
     */
    findMany<T extends InventarioFindManyArgs>(args?: SelectSubset<T, InventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Inventario.
     * @param {InventarioCreateArgs} args - Arguments to create a Inventario.
     * @example
     * // Create one Inventario
     * const Inventario = await prisma.inventario.create({
     *   data: {
     *     // ... data to create a Inventario
     *   }
     * })
     * 
     */
    create<T extends InventarioCreateArgs>(args: SelectSubset<T, InventarioCreateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Inventarios.
     * @param {InventarioCreateManyArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InventarioCreateManyArgs>(args?: SelectSubset<T, InventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inventarios and returns the data saved in the database.
     * @param {InventarioCreateManyAndReturnArgs} args - Arguments to create many Inventarios.
     * @example
     * // Create many Inventarios
     * const inventario = await prisma.inventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inventarios and only return the `id_inventario`
     * const inventarioWithId_inventarioOnly = await prisma.inventario.createManyAndReturn({
     *   select: { id_inventario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, InventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Inventario.
     * @param {InventarioDeleteArgs} args - Arguments to delete one Inventario.
     * @example
     * // Delete one Inventario
     * const Inventario = await prisma.inventario.delete({
     *   where: {
     *     // ... filter to delete one Inventario
     *   }
     * })
     * 
     */
    delete<T extends InventarioDeleteArgs>(args: SelectSubset<T, InventarioDeleteArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Inventario.
     * @param {InventarioUpdateArgs} args - Arguments to update one Inventario.
     * @example
     * // Update one Inventario
     * const inventario = await prisma.inventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InventarioUpdateArgs>(args: SelectSubset<T, InventarioUpdateArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Inventarios.
     * @param {InventarioDeleteManyArgs} args - Arguments to filter Inventarios to delete.
     * @example
     * // Delete a few Inventarios
     * const { count } = await prisma.inventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InventarioDeleteManyArgs>(args?: SelectSubset<T, InventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inventarios
     * const inventario = await prisma.inventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InventarioUpdateManyArgs>(args: SelectSubset<T, InventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inventarios and returns the data updated in the database.
     * @param {InventarioUpdateManyAndReturnArgs} args - Arguments to update many Inventarios.
     * @example
     * // Update many Inventarios
     * const inventario = await prisma.inventario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Inventarios and only return the `id_inventario`
     * const inventarioWithId_inventarioOnly = await prisma.inventario.updateManyAndReturn({
     *   select: { id_inventario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InventarioUpdateManyAndReturnArgs>(args: SelectSubset<T, InventarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Inventario.
     * @param {InventarioUpsertArgs} args - Arguments to update or create a Inventario.
     * @example
     * // Update or create a Inventario
     * const inventario = await prisma.inventario.upsert({
     *   create: {
     *     // ... data to create a Inventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inventario we want to update
     *   }
     * })
     */
    upsert<T extends InventarioUpsertArgs>(args: SelectSubset<T, InventarioUpsertArgs<ExtArgs>>): Prisma__InventarioClient<$Result.GetResult<Prisma.$InventarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioCountArgs} args - Arguments to filter Inventarios to count.
     * @example
     * // Count the number of Inventarios
     * const count = await prisma.inventario.count({
     *   where: {
     *     // ... the filter for the Inventarios we want to count
     *   }
     * })
    **/
    count<T extends InventarioCountArgs>(
      args?: Subset<T, InventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InventarioAggregateArgs>(args: Subset<T, InventarioAggregateArgs>): Prisma.PrismaPromise<GetInventarioAggregateType<T>>

    /**
     * Group by Inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InventarioGroupByArgs['orderBy'] }
        : { orderBy?: InventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inventario model
   */
  readonly fields: InventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inventario model
   */
  interface InventarioFieldRefs {
    readonly id_inventario: FieldRef<"Inventario", 'Int'>
    readonly producto_id: FieldRef<"Inventario", 'Int'>
    readonly cantidad: FieldRef<"Inventario", 'Int'>
    readonly fecha_movimiento: FieldRef<"Inventario", 'DateTime'>
    readonly tipo_movimiento: FieldRef<"Inventario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Inventario findUnique
   */
  export type InventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findUniqueOrThrow
   */
  export type InventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario findFirst
   */
  export type InventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findFirstOrThrow
   */
  export type InventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventario to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inventarios.
     */
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario findMany
   */
  export type InventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter, which Inventarios to fetch.
     */
    where?: InventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inventarios to fetch.
     */
    orderBy?: InventarioOrderByWithRelationInput | InventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inventarios.
     */
    cursor?: InventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inventarios.
     */
    skip?: number
    distinct?: InventarioScalarFieldEnum | InventarioScalarFieldEnum[]
  }

  /**
   * Inventario create
   */
  export type InventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Inventario.
     */
    data: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
  }

  /**
   * Inventario createMany
   */
  export type InventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inventario createManyAndReturn
   */
  export type InventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * The data used to create many Inventarios.
     */
    data: InventarioCreateManyInput | InventarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inventario update
   */
  export type InventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Inventario.
     */
    data: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
    /**
     * Choose, which Inventario to update.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario updateMany
   */
  export type InventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inventarios.
     */
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyInput>
    /**
     * Filter which Inventarios to update
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to update.
     */
    limit?: number
  }

  /**
   * Inventario updateManyAndReturn
   */
  export type InventarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * The data used to update Inventarios.
     */
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyInput>
    /**
     * Filter which Inventarios to update
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Inventario upsert
   */
  export type InventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Inventario to update in case it exists.
     */
    where: InventarioWhereUniqueInput
    /**
     * In case the Inventario found by the `where` argument doesn't exist, create a new Inventario with this data.
     */
    create: XOR<InventarioCreateInput, InventarioUncheckedCreateInput>
    /**
     * In case the Inventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InventarioUpdateInput, InventarioUncheckedUpdateInput>
  }

  /**
   * Inventario delete
   */
  export type InventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
    /**
     * Filter which Inventario to delete.
     */
    where: InventarioWhereUniqueInput
  }

  /**
   * Inventario deleteMany
   */
  export type InventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inventarios to delete
     */
    where?: InventarioWhereInput
    /**
     * Limit how many Inventarios to delete.
     */
    limit?: number
  }

  /**
   * Inventario without action
   */
  export type InventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inventario
     */
    select?: InventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Inventario
     */
    omit?: InventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InventarioInclude<ExtArgs> | null
  }


  /**
   * Model Sucursal
   */

  export type AggregateSucursal = {
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  export type SucursalAvgAggregateOutputType = {
    id_sucursal: number | null
  }

  export type SucursalSumAggregateOutputType = {
    id_sucursal: number | null
  }

  export type SucursalMinAggregateOutputType = {
    id_sucursal: number | null
    nombre_sucursal: string | null
    direccion: string | null
    telefono: string | null
  }

  export type SucursalMaxAggregateOutputType = {
    id_sucursal: number | null
    nombre_sucursal: string | null
    direccion: string | null
    telefono: string | null
  }

  export type SucursalCountAggregateOutputType = {
    id_sucursal: number
    nombre_sucursal: number
    direccion: number
    telefono: number
    _all: number
  }


  export type SucursalAvgAggregateInputType = {
    id_sucursal?: true
  }

  export type SucursalSumAggregateInputType = {
    id_sucursal?: true
  }

  export type SucursalMinAggregateInputType = {
    id_sucursal?: true
    nombre_sucursal?: true
    direccion?: true
    telefono?: true
  }

  export type SucursalMaxAggregateInputType = {
    id_sucursal?: true
    nombre_sucursal?: true
    direccion?: true
    telefono?: true
  }

  export type SucursalCountAggregateInputType = {
    id_sucursal?: true
    nombre_sucursal?: true
    direccion?: true
    telefono?: true
    _all?: true
  }

  export type SucursalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sucursal to aggregate.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sucursals
    **/
    _count?: true | SucursalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SucursalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SucursalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SucursalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SucursalMaxAggregateInputType
  }

  export type GetSucursalAggregateType<T extends SucursalAggregateArgs> = {
        [P in keyof T & keyof AggregateSucursal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSucursal[P]>
      : GetScalarType<T[P], AggregateSucursal[P]>
  }




  export type SucursalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SucursalWhereInput
    orderBy?: SucursalOrderByWithAggregationInput | SucursalOrderByWithAggregationInput[]
    by: SucursalScalarFieldEnum[] | SucursalScalarFieldEnum
    having?: SucursalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SucursalCountAggregateInputType | true
    _avg?: SucursalAvgAggregateInputType
    _sum?: SucursalSumAggregateInputType
    _min?: SucursalMinAggregateInputType
    _max?: SucursalMaxAggregateInputType
  }

  export type SucursalGroupByOutputType = {
    id_sucursal: number
    nombre_sucursal: string
    direccion: string | null
    telefono: string | null
    _count: SucursalCountAggregateOutputType | null
    _avg: SucursalAvgAggregateOutputType | null
    _sum: SucursalSumAggregateOutputType | null
    _min: SucursalMinAggregateOutputType | null
    _max: SucursalMaxAggregateOutputType | null
  }

  type GetSucursalGroupByPayload<T extends SucursalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SucursalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SucursalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SucursalGroupByOutputType[P]>
            : GetScalarType<T[P], SucursalGroupByOutputType[P]>
        }
      >
    >


  export type SucursalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sucursal?: boolean
    nombre_sucursal?: boolean
    direccion?: boolean
    telefono?: boolean
    ventas?: boolean | Sucursal$ventasArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sucursal"]>

  export type SucursalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sucursal?: boolean
    nombre_sucursal?: boolean
    direccion?: boolean
    telefono?: boolean
  }, ExtArgs["result"]["sucursal"]>

  export type SucursalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_sucursal?: boolean
    nombre_sucursal?: boolean
    direccion?: boolean
    telefono?: boolean
  }, ExtArgs["result"]["sucursal"]>

  export type SucursalSelectScalar = {
    id_sucursal?: boolean
    nombre_sucursal?: boolean
    direccion?: boolean
    telefono?: boolean
  }

  export type SucursalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_sucursal" | "nombre_sucursal" | "direccion" | "telefono", ExtArgs["result"]["sucursal"]>
  export type SucursalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | Sucursal$ventasArgs<ExtArgs>
    _count?: boolean | SucursalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SucursalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SucursalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SucursalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Sucursal"
    objects: {
      ventas: Prisma.$VentaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_sucursal: number
      nombre_sucursal: string
      direccion: string | null
      telefono: string | null
    }, ExtArgs["result"]["sucursal"]>
    composites: {}
  }

  type SucursalGetPayload<S extends boolean | null | undefined | SucursalDefaultArgs> = $Result.GetResult<Prisma.$SucursalPayload, S>

  type SucursalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SucursalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SucursalCountAggregateInputType | true
    }

  export interface SucursalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Sucursal'], meta: { name: 'Sucursal' } }
    /**
     * Find zero or one Sucursal that matches the filter.
     * @param {SucursalFindUniqueArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SucursalFindUniqueArgs>(args: SelectSubset<T, SucursalFindUniqueArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sucursal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SucursalFindUniqueOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SucursalFindUniqueOrThrowArgs>(args: SelectSubset<T, SucursalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sucursal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindFirstArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SucursalFindFirstArgs>(args?: SelectSubset<T, SucursalFindFirstArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sucursal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindFirstOrThrowArgs} args - Arguments to find a Sucursal
     * @example
     * // Get one Sucursal
     * const sucursal = await prisma.sucursal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SucursalFindFirstOrThrowArgs>(args?: SelectSubset<T, SucursalFindFirstOrThrowArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sucursals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sucursals
     * const sucursals = await prisma.sucursal.findMany()
     * 
     * // Get first 10 Sucursals
     * const sucursals = await prisma.sucursal.findMany({ take: 10 })
     * 
     * // Only select the `id_sucursal`
     * const sucursalWithId_sucursalOnly = await prisma.sucursal.findMany({ select: { id_sucursal: true } })
     * 
     */
    findMany<T extends SucursalFindManyArgs>(args?: SelectSubset<T, SucursalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sucursal.
     * @param {SucursalCreateArgs} args - Arguments to create a Sucursal.
     * @example
     * // Create one Sucursal
     * const Sucursal = await prisma.sucursal.create({
     *   data: {
     *     // ... data to create a Sucursal
     *   }
     * })
     * 
     */
    create<T extends SucursalCreateArgs>(args: SelectSubset<T, SucursalCreateArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sucursals.
     * @param {SucursalCreateManyArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SucursalCreateManyArgs>(args?: SelectSubset<T, SucursalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sucursals and returns the data saved in the database.
     * @param {SucursalCreateManyAndReturnArgs} args - Arguments to create many Sucursals.
     * @example
     * // Create many Sucursals
     * const sucursal = await prisma.sucursal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sucursals and only return the `id_sucursal`
     * const sucursalWithId_sucursalOnly = await prisma.sucursal.createManyAndReturn({
     *   select: { id_sucursal: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SucursalCreateManyAndReturnArgs>(args?: SelectSubset<T, SucursalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sucursal.
     * @param {SucursalDeleteArgs} args - Arguments to delete one Sucursal.
     * @example
     * // Delete one Sucursal
     * const Sucursal = await prisma.sucursal.delete({
     *   where: {
     *     // ... filter to delete one Sucursal
     *   }
     * })
     * 
     */
    delete<T extends SucursalDeleteArgs>(args: SelectSubset<T, SucursalDeleteArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sucursal.
     * @param {SucursalUpdateArgs} args - Arguments to update one Sucursal.
     * @example
     * // Update one Sucursal
     * const sucursal = await prisma.sucursal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SucursalUpdateArgs>(args: SelectSubset<T, SucursalUpdateArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sucursals.
     * @param {SucursalDeleteManyArgs} args - Arguments to filter Sucursals to delete.
     * @example
     * // Delete a few Sucursals
     * const { count } = await prisma.sucursal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SucursalDeleteManyArgs>(args?: SelectSubset<T, SucursalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sucursals
     * const sucursal = await prisma.sucursal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SucursalUpdateManyArgs>(args: SelectSubset<T, SucursalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sucursals and returns the data updated in the database.
     * @param {SucursalUpdateManyAndReturnArgs} args - Arguments to update many Sucursals.
     * @example
     * // Update many Sucursals
     * const sucursal = await prisma.sucursal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sucursals and only return the `id_sucursal`
     * const sucursalWithId_sucursalOnly = await prisma.sucursal.updateManyAndReturn({
     *   select: { id_sucursal: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SucursalUpdateManyAndReturnArgs>(args: SelectSubset<T, SucursalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sucursal.
     * @param {SucursalUpsertArgs} args - Arguments to update or create a Sucursal.
     * @example
     * // Update or create a Sucursal
     * const sucursal = await prisma.sucursal.upsert({
     *   create: {
     *     // ... data to create a Sucursal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sucursal we want to update
     *   }
     * })
     */
    upsert<T extends SucursalUpsertArgs>(args: SelectSubset<T, SucursalUpsertArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sucursals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalCountArgs} args - Arguments to filter Sucursals to count.
     * @example
     * // Count the number of Sucursals
     * const count = await prisma.sucursal.count({
     *   where: {
     *     // ... the filter for the Sucursals we want to count
     *   }
     * })
    **/
    count<T extends SucursalCountArgs>(
      args?: Subset<T, SucursalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SucursalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SucursalAggregateArgs>(args: Subset<T, SucursalAggregateArgs>): Prisma.PrismaPromise<GetSucursalAggregateType<T>>

    /**
     * Group by Sucursal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SucursalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SucursalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SucursalGroupByArgs['orderBy'] }
        : { orderBy?: SucursalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SucursalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSucursalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Sucursal model
   */
  readonly fields: SucursalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Sucursal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SucursalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ventas<T extends Sucursal$ventasArgs<ExtArgs> = {}>(args?: Subset<T, Sucursal$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Sucursal model
   */
  interface SucursalFieldRefs {
    readonly id_sucursal: FieldRef<"Sucursal", 'Int'>
    readonly nombre_sucursal: FieldRef<"Sucursal", 'String'>
    readonly direccion: FieldRef<"Sucursal", 'String'>
    readonly telefono: FieldRef<"Sucursal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Sucursal findUnique
   */
  export type SucursalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal findUniqueOrThrow
   */
  export type SucursalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal findFirst
   */
  export type SucursalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal findFirstOrThrow
   */
  export type SucursalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursal to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sucursals.
     */
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal findMany
   */
  export type SucursalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter, which Sucursals to fetch.
     */
    where?: SucursalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sucursals to fetch.
     */
    orderBy?: SucursalOrderByWithRelationInput | SucursalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sucursals.
     */
    cursor?: SucursalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sucursals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sucursals.
     */
    skip?: number
    distinct?: SucursalScalarFieldEnum | SucursalScalarFieldEnum[]
  }

  /**
   * Sucursal create
   */
  export type SucursalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The data needed to create a Sucursal.
     */
    data: XOR<SucursalCreateInput, SucursalUncheckedCreateInput>
  }

  /**
   * Sucursal createMany
   */
  export type SucursalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sucursals.
     */
    data: SucursalCreateManyInput | SucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sucursal createManyAndReturn
   */
  export type SucursalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * The data used to create many Sucursals.
     */
    data: SucursalCreateManyInput | SucursalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Sucursal update
   */
  export type SucursalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The data needed to update a Sucursal.
     */
    data: XOR<SucursalUpdateInput, SucursalUncheckedUpdateInput>
    /**
     * Choose, which Sucursal to update.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal updateMany
   */
  export type SucursalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sucursals.
     */
    data: XOR<SucursalUpdateManyMutationInput, SucursalUncheckedUpdateManyInput>
    /**
     * Filter which Sucursals to update
     */
    where?: SucursalWhereInput
    /**
     * Limit how many Sucursals to update.
     */
    limit?: number
  }

  /**
   * Sucursal updateManyAndReturn
   */
  export type SucursalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * The data used to update Sucursals.
     */
    data: XOR<SucursalUpdateManyMutationInput, SucursalUncheckedUpdateManyInput>
    /**
     * Filter which Sucursals to update
     */
    where?: SucursalWhereInput
    /**
     * Limit how many Sucursals to update.
     */
    limit?: number
  }

  /**
   * Sucursal upsert
   */
  export type SucursalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * The filter to search for the Sucursal to update in case it exists.
     */
    where: SucursalWhereUniqueInput
    /**
     * In case the Sucursal found by the `where` argument doesn't exist, create a new Sucursal with this data.
     */
    create: XOR<SucursalCreateInput, SucursalUncheckedCreateInput>
    /**
     * In case the Sucursal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SucursalUpdateInput, SucursalUncheckedUpdateInput>
  }

  /**
   * Sucursal delete
   */
  export type SucursalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
    /**
     * Filter which Sucursal to delete.
     */
    where: SucursalWhereUniqueInput
  }

  /**
   * Sucursal deleteMany
   */
  export type SucursalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sucursals to delete
     */
    where?: SucursalWhereInput
    /**
     * Limit how many Sucursals to delete.
     */
    limit?: number
  }

  /**
   * Sucursal.ventas
   */
  export type Sucursal$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    cursor?: VentaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Sucursal without action
   */
  export type SucursalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sucursal
     */
    select?: SucursalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Sucursal
     */
    omit?: SucursalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SucursalInclude<ExtArgs> | null
  }


  /**
   * Model Venta
   */

  export type AggregateVenta = {
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  export type VentaAvgAggregateOutputType = {
    id_venta: number | null
    sucursal_id: number | null
    total_venta: Decimal | null
    numero_facturas: number | null
  }

  export type VentaSumAggregateOutputType = {
    id_venta: number | null
    sucursal_id: number | null
    total_venta: Decimal | null
    numero_facturas: number | null
  }

  export type VentaMinAggregateOutputType = {
    id_venta: number | null
    sucursal_id: number | null
    total_venta: Decimal | null
    fecha_venta: Date | null
    numero_facturas: number | null
  }

  export type VentaMaxAggregateOutputType = {
    id_venta: number | null
    sucursal_id: number | null
    total_venta: Decimal | null
    fecha_venta: Date | null
    numero_facturas: number | null
  }

  export type VentaCountAggregateOutputType = {
    id_venta: number
    sucursal_id: number
    total_venta: number
    fecha_venta: number
    numero_facturas: number
    _all: number
  }


  export type VentaAvgAggregateInputType = {
    id_venta?: true
    sucursal_id?: true
    total_venta?: true
    numero_facturas?: true
  }

  export type VentaSumAggregateInputType = {
    id_venta?: true
    sucursal_id?: true
    total_venta?: true
    numero_facturas?: true
  }

  export type VentaMinAggregateInputType = {
    id_venta?: true
    sucursal_id?: true
    total_venta?: true
    fecha_venta?: true
    numero_facturas?: true
  }

  export type VentaMaxAggregateInputType = {
    id_venta?: true
    sucursal_id?: true
    total_venta?: true
    fecha_venta?: true
    numero_facturas?: true
  }

  export type VentaCountAggregateInputType = {
    id_venta?: true
    sucursal_id?: true
    total_venta?: true
    fecha_venta?: true
    numero_facturas?: true
    _all?: true
  }

  export type VentaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta to aggregate.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ventas
    **/
    _count?: true | VentaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentaMaxAggregateInputType
  }

  export type GetVentaAggregateType<T extends VentaAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta[P]>
      : GetScalarType<T[P], AggregateVenta[P]>
  }




  export type VentaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VentaWhereInput
    orderBy?: VentaOrderByWithAggregationInput | VentaOrderByWithAggregationInput[]
    by: VentaScalarFieldEnum[] | VentaScalarFieldEnum
    having?: VentaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentaCountAggregateInputType | true
    _avg?: VentaAvgAggregateInputType
    _sum?: VentaSumAggregateInputType
    _min?: VentaMinAggregateInputType
    _max?: VentaMaxAggregateInputType
  }

  export type VentaGroupByOutputType = {
    id_venta: number
    sucursal_id: number
    total_venta: Decimal
    fecha_venta: Date
    numero_facturas: number
    _count: VentaCountAggregateOutputType | null
    _avg: VentaAvgAggregateOutputType | null
    _sum: VentaSumAggregateOutputType | null
    _min: VentaMinAggregateOutputType | null
    _max: VentaMaxAggregateOutputType | null
  }

  type GetVentaGroupByPayload<T extends VentaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentaGroupByOutputType[P]>
            : GetScalarType<T[P], VentaGroupByOutputType[P]>
        }
      >
    >


  export type VentaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    sucursal_id?: boolean
    total_venta?: boolean
    fecha_venta?: boolean
    numero_facturas?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    facturas?: boolean | Venta$facturasArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    sucursal_id?: boolean
    total_venta?: boolean
    fecha_venta?: boolean
    numero_facturas?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta?: boolean
    sucursal_id?: boolean
    total_venta?: boolean
    fecha_venta?: boolean
    numero_facturas?: boolean
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta"]>

  export type VentaSelectScalar = {
    id_venta?: boolean
    sucursal_id?: boolean
    total_venta?: boolean
    fecha_venta?: boolean
    numero_facturas?: boolean
  }

  export type VentaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_venta" | "sucursal_id" | "total_venta" | "fecha_venta" | "numero_facturas", ExtArgs["result"]["venta"]>
  export type VentaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
    facturas?: boolean | Venta$facturasArgs<ExtArgs>
    _count?: boolean | VentaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VentaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }
  export type VentaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sucursal?: boolean | SucursalDefaultArgs<ExtArgs>
  }

  export type $VentaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta"
    objects: {
      sucursal: Prisma.$SucursalPayload<ExtArgs>
      facturas: Prisma.$Venta_Factura_MaestroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_venta: number
      sucursal_id: number
      total_venta: Prisma.Decimal
      fecha_venta: Date
      numero_facturas: number
    }, ExtArgs["result"]["venta"]>
    composites: {}
  }

  type VentaGetPayload<S extends boolean | null | undefined | VentaDefaultArgs> = $Result.GetResult<Prisma.$VentaPayload, S>

  type VentaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VentaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentaCountAggregateInputType | true
    }

  export interface VentaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta'], meta: { name: 'Venta' } }
    /**
     * Find zero or one Venta that matches the filter.
     * @param {VentaFindUniqueArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VentaFindUniqueArgs>(args: SelectSubset<T, VentaFindUniqueArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VentaFindUniqueOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VentaFindUniqueOrThrowArgs>(args: SelectSubset<T, VentaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VentaFindFirstArgs>(args?: SelectSubset<T, VentaFindFirstArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindFirstOrThrowArgs} args - Arguments to find a Venta
     * @example
     * // Get one Venta
     * const venta = await prisma.venta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VentaFindFirstOrThrowArgs>(args?: SelectSubset<T, VentaFindFirstOrThrowArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.venta.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.venta.findMany({ take: 10 })
     * 
     * // Only select the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.findMany({ select: { id_venta: true } })
     * 
     */
    findMany<T extends VentaFindManyArgs>(args?: SelectSubset<T, VentaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta.
     * @param {VentaCreateArgs} args - Arguments to create a Venta.
     * @example
     * // Create one Venta
     * const Venta = await prisma.venta.create({
     *   data: {
     *     // ... data to create a Venta
     *   }
     * })
     * 
     */
    create<T extends VentaCreateArgs>(args: SelectSubset<T, VentaCreateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {VentaCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VentaCreateManyArgs>(args?: SelectSubset<T, VentaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {VentaCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const venta = await prisma.venta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.createManyAndReturn({
     *   select: { id_venta: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VentaCreateManyAndReturnArgs>(args?: SelectSubset<T, VentaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta.
     * @param {VentaDeleteArgs} args - Arguments to delete one Venta.
     * @example
     * // Delete one Venta
     * const Venta = await prisma.venta.delete({
     *   where: {
     *     // ... filter to delete one Venta
     *   }
     * })
     * 
     */
    delete<T extends VentaDeleteArgs>(args: SelectSubset<T, VentaDeleteArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta.
     * @param {VentaUpdateArgs} args - Arguments to update one Venta.
     * @example
     * // Update one Venta
     * const venta = await prisma.venta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VentaUpdateArgs>(args: SelectSubset<T, VentaUpdateArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {VentaDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.venta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VentaDeleteManyArgs>(args?: SelectSubset<T, VentaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VentaUpdateManyArgs>(args: SelectSubset<T, VentaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {VentaUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const venta = await prisma.venta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id_venta`
     * const ventaWithId_ventaOnly = await prisma.venta.updateManyAndReturn({
     *   select: { id_venta: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VentaUpdateManyAndReturnArgs>(args: SelectSubset<T, VentaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta.
     * @param {VentaUpsertArgs} args - Arguments to update or create a Venta.
     * @example
     * // Update or create a Venta
     * const venta = await prisma.venta.upsert({
     *   create: {
     *     // ... data to create a Venta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta we want to update
     *   }
     * })
     */
    upsert<T extends VentaUpsertArgs>(args: SelectSubset<T, VentaUpsertArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.venta.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends VentaCountArgs>(
      args?: Subset<T, VentaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentaAggregateArgs>(args: Subset<T, VentaAggregateArgs>): Prisma.PrismaPromise<GetVentaAggregateType<T>>

    /**
     * Group by Venta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VentaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VentaGroupByArgs['orderBy'] }
        : { orderBy?: VentaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VentaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta model
   */
  readonly fields: VentaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VentaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sucursal<T extends SucursalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SucursalDefaultArgs<ExtArgs>>): Prisma__SucursalClient<$Result.GetResult<Prisma.$SucursalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    facturas<T extends Venta$facturasArgs<ExtArgs> = {}>(args?: Subset<T, Venta$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta model
   */
  interface VentaFieldRefs {
    readonly id_venta: FieldRef<"Venta", 'Int'>
    readonly sucursal_id: FieldRef<"Venta", 'Int'>
    readonly total_venta: FieldRef<"Venta", 'Decimal'>
    readonly fecha_venta: FieldRef<"Venta", 'DateTime'>
    readonly numero_facturas: FieldRef<"Venta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Venta findUnique
   */
  export type VentaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findUniqueOrThrow
   */
  export type VentaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta findFirst
   */
  export type VentaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findFirstOrThrow
   */
  export type VentaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Venta to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ventas.
     */
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta findMany
   */
  export type VentaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter, which Ventas to fetch.
     */
    where?: VentaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ventas to fetch.
     */
    orderBy?: VentaOrderByWithRelationInput | VentaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ventas.
     */
    cursor?: VentaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ventas.
     */
    skip?: number
    distinct?: VentaScalarFieldEnum | VentaScalarFieldEnum[]
  }

  /**
   * Venta create
   */
  export type VentaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta.
     */
    data: XOR<VentaCreateInput, VentaUncheckedCreateInput>
  }

  /**
   * Venta createMany
   */
  export type VentaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta createManyAndReturn
   */
  export type VentaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to create many Ventas.
     */
    data: VentaCreateManyInput | VentaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta update
   */
  export type VentaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta.
     */
    data: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
    /**
     * Choose, which Venta to update.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta updateMany
   */
  export type VentaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
  }

  /**
   * Venta updateManyAndReturn
   */
  export type VentaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * The data used to update Ventas.
     */
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyInput>
    /**
     * Filter which Ventas to update
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta upsert
   */
  export type VentaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta to update in case it exists.
     */
    where: VentaWhereUniqueInput
    /**
     * In case the Venta found by the `where` argument doesn't exist, create a new Venta with this data.
     */
    create: XOR<VentaCreateInput, VentaUncheckedCreateInput>
    /**
     * In case the Venta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VentaUpdateInput, VentaUncheckedUpdateInput>
  }

  /**
   * Venta delete
   */
  export type VentaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
    /**
     * Filter which Venta to delete.
     */
    where: VentaWhereUniqueInput
  }

  /**
   * Venta deleteMany
   */
  export type VentaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ventas to delete
     */
    where?: VentaWhereInput
    /**
     * Limit how many Ventas to delete.
     */
    limit?: number
  }

  /**
   * Venta.facturas
   */
  export type Venta$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    where?: Venta_Factura_MaestroWhereInput
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Venta_Factura_MaestroScalarFieldEnum | Venta_Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Venta without action
   */
  export type VentaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta
     */
    select?: VentaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta
     */
    omit?: VentaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VentaInclude<ExtArgs> | null
  }


  /**
   * Model Venta_Factura_Maestro
   */

  export type AggregateVenta_Factura_Maestro = {
    _count: Venta_Factura_MaestroCountAggregateOutputType | null
    _avg: Venta_Factura_MaestroAvgAggregateOutputType | null
    _sum: Venta_Factura_MaestroSumAggregateOutputType | null
    _min: Venta_Factura_MaestroMinAggregateOutputType | null
    _max: Venta_Factura_MaestroMaxAggregateOutputType | null
  }

  export type Venta_Factura_MaestroAvgAggregateOutputType = {
    id_venta_factura: number | null
    venta_id: number | null
    factura_maestro_id: number | null
  }

  export type Venta_Factura_MaestroSumAggregateOutputType = {
    id_venta_factura: number | null
    venta_id: number | null
    factura_maestro_id: number | null
  }

  export type Venta_Factura_MaestroMinAggregateOutputType = {
    id_venta_factura: number | null
    venta_id: number | null
    factura_maestro_id: number | null
  }

  export type Venta_Factura_MaestroMaxAggregateOutputType = {
    id_venta_factura: number | null
    venta_id: number | null
    factura_maestro_id: number | null
  }

  export type Venta_Factura_MaestroCountAggregateOutputType = {
    id_venta_factura: number
    venta_id: number
    factura_maestro_id: number
    _all: number
  }


  export type Venta_Factura_MaestroAvgAggregateInputType = {
    id_venta_factura?: true
    venta_id?: true
    factura_maestro_id?: true
  }

  export type Venta_Factura_MaestroSumAggregateInputType = {
    id_venta_factura?: true
    venta_id?: true
    factura_maestro_id?: true
  }

  export type Venta_Factura_MaestroMinAggregateInputType = {
    id_venta_factura?: true
    venta_id?: true
    factura_maestro_id?: true
  }

  export type Venta_Factura_MaestroMaxAggregateInputType = {
    id_venta_factura?: true
    venta_id?: true
    factura_maestro_id?: true
  }

  export type Venta_Factura_MaestroCountAggregateInputType = {
    id_venta_factura?: true
    venta_id?: true
    factura_maestro_id?: true
    _all?: true
  }

  export type Venta_Factura_MaestroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta_Factura_Maestro to aggregate.
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Venta_Factura_Maestros to fetch.
     */
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Venta_Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Venta_Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Venta_Factura_Maestros
    **/
    _count?: true | Venta_Factura_MaestroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Venta_Factura_MaestroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Venta_Factura_MaestroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Venta_Factura_MaestroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Venta_Factura_MaestroMaxAggregateInputType
  }

  export type GetVenta_Factura_MaestroAggregateType<T extends Venta_Factura_MaestroAggregateArgs> = {
        [P in keyof T & keyof AggregateVenta_Factura_Maestro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVenta_Factura_Maestro[P]>
      : GetScalarType<T[P], AggregateVenta_Factura_Maestro[P]>
  }




  export type Venta_Factura_MaestroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Venta_Factura_MaestroWhereInput
    orderBy?: Venta_Factura_MaestroOrderByWithAggregationInput | Venta_Factura_MaestroOrderByWithAggregationInput[]
    by: Venta_Factura_MaestroScalarFieldEnum[] | Venta_Factura_MaestroScalarFieldEnum
    having?: Venta_Factura_MaestroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Venta_Factura_MaestroCountAggregateInputType | true
    _avg?: Venta_Factura_MaestroAvgAggregateInputType
    _sum?: Venta_Factura_MaestroSumAggregateInputType
    _min?: Venta_Factura_MaestroMinAggregateInputType
    _max?: Venta_Factura_MaestroMaxAggregateInputType
  }

  export type Venta_Factura_MaestroGroupByOutputType = {
    id_venta_factura: number
    venta_id: number
    factura_maestro_id: number
    _count: Venta_Factura_MaestroCountAggregateOutputType | null
    _avg: Venta_Factura_MaestroAvgAggregateOutputType | null
    _sum: Venta_Factura_MaestroSumAggregateOutputType | null
    _min: Venta_Factura_MaestroMinAggregateOutputType | null
    _max: Venta_Factura_MaestroMaxAggregateOutputType | null
  }

  type GetVenta_Factura_MaestroGroupByPayload<T extends Venta_Factura_MaestroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Venta_Factura_MaestroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Venta_Factura_MaestroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Venta_Factura_MaestroGroupByOutputType[P]>
            : GetScalarType<T[P], Venta_Factura_MaestroGroupByOutputType[P]>
        }
      >
    >


  export type Venta_Factura_MaestroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta_factura?: boolean
    venta_id?: boolean
    factura_maestro_id?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta_Factura_Maestro"]>

  export type Venta_Factura_MaestroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta_factura?: boolean
    venta_id?: boolean
    factura_maestro_id?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta_Factura_Maestro"]>

  export type Venta_Factura_MaestroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_venta_factura?: boolean
    venta_id?: boolean
    factura_maestro_id?: boolean
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["venta_Factura_Maestro"]>

  export type Venta_Factura_MaestroSelectScalar = {
    id_venta_factura?: boolean
    venta_id?: boolean
    factura_maestro_id?: boolean
  }

  export type Venta_Factura_MaestroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_venta_factura" | "venta_id" | "factura_maestro_id", ExtArgs["result"]["venta_Factura_Maestro"]>
  export type Venta_Factura_MaestroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }
  export type Venta_Factura_MaestroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }
  export type Venta_Factura_MaestroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    venta?: boolean | VentaDefaultArgs<ExtArgs>
    factura_maestro?: boolean | Factura_MaestroDefaultArgs<ExtArgs>
  }

  export type $Venta_Factura_MaestroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Venta_Factura_Maestro"
    objects: {
      venta: Prisma.$VentaPayload<ExtArgs>
      factura_maestro: Prisma.$Factura_MaestroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_venta_factura: number
      venta_id: number
      factura_maestro_id: number
    }, ExtArgs["result"]["venta_Factura_Maestro"]>
    composites: {}
  }

  type Venta_Factura_MaestroGetPayload<S extends boolean | null | undefined | Venta_Factura_MaestroDefaultArgs> = $Result.GetResult<Prisma.$Venta_Factura_MaestroPayload, S>

  type Venta_Factura_MaestroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Venta_Factura_MaestroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Venta_Factura_MaestroCountAggregateInputType | true
    }

  export interface Venta_Factura_MaestroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Venta_Factura_Maestro'], meta: { name: 'Venta_Factura_Maestro' } }
    /**
     * Find zero or one Venta_Factura_Maestro that matches the filter.
     * @param {Venta_Factura_MaestroFindUniqueArgs} args - Arguments to find a Venta_Factura_Maestro
     * @example
     * // Get one Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Venta_Factura_MaestroFindUniqueArgs>(args: SelectSubset<T, Venta_Factura_MaestroFindUniqueArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Venta_Factura_Maestro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Venta_Factura_MaestroFindUniqueOrThrowArgs} args - Arguments to find a Venta_Factura_Maestro
     * @example
     * // Get one Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Venta_Factura_MaestroFindUniqueOrThrowArgs>(args: SelectSubset<T, Venta_Factura_MaestroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta_Factura_Maestro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroFindFirstArgs} args - Arguments to find a Venta_Factura_Maestro
     * @example
     * // Get one Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Venta_Factura_MaestroFindFirstArgs>(args?: SelectSubset<T, Venta_Factura_MaestroFindFirstArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Venta_Factura_Maestro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroFindFirstOrThrowArgs} args - Arguments to find a Venta_Factura_Maestro
     * @example
     * // Get one Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Venta_Factura_MaestroFindFirstOrThrowArgs>(args?: SelectSubset<T, Venta_Factura_MaestroFindFirstOrThrowArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Venta_Factura_Maestros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Venta_Factura_Maestros
     * const venta_Factura_Maestros = await prisma.venta_Factura_Maestro.findMany()
     * 
     * // Get first 10 Venta_Factura_Maestros
     * const venta_Factura_Maestros = await prisma.venta_Factura_Maestro.findMany({ take: 10 })
     * 
     * // Only select the `id_venta_factura`
     * const venta_Factura_MaestroWithId_venta_facturaOnly = await prisma.venta_Factura_Maestro.findMany({ select: { id_venta_factura: true } })
     * 
     */
    findMany<T extends Venta_Factura_MaestroFindManyArgs>(args?: SelectSubset<T, Venta_Factura_MaestroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Venta_Factura_Maestro.
     * @param {Venta_Factura_MaestroCreateArgs} args - Arguments to create a Venta_Factura_Maestro.
     * @example
     * // Create one Venta_Factura_Maestro
     * const Venta_Factura_Maestro = await prisma.venta_Factura_Maestro.create({
     *   data: {
     *     // ... data to create a Venta_Factura_Maestro
     *   }
     * })
     * 
     */
    create<T extends Venta_Factura_MaestroCreateArgs>(args: SelectSubset<T, Venta_Factura_MaestroCreateArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Venta_Factura_Maestros.
     * @param {Venta_Factura_MaestroCreateManyArgs} args - Arguments to create many Venta_Factura_Maestros.
     * @example
     * // Create many Venta_Factura_Maestros
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Venta_Factura_MaestroCreateManyArgs>(args?: SelectSubset<T, Venta_Factura_MaestroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Venta_Factura_Maestros and returns the data saved in the database.
     * @param {Venta_Factura_MaestroCreateManyAndReturnArgs} args - Arguments to create many Venta_Factura_Maestros.
     * @example
     * // Create many Venta_Factura_Maestros
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Venta_Factura_Maestros and only return the `id_venta_factura`
     * const venta_Factura_MaestroWithId_venta_facturaOnly = await prisma.venta_Factura_Maestro.createManyAndReturn({
     *   select: { id_venta_factura: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Venta_Factura_MaestroCreateManyAndReturnArgs>(args?: SelectSubset<T, Venta_Factura_MaestroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Venta_Factura_Maestro.
     * @param {Venta_Factura_MaestroDeleteArgs} args - Arguments to delete one Venta_Factura_Maestro.
     * @example
     * // Delete one Venta_Factura_Maestro
     * const Venta_Factura_Maestro = await prisma.venta_Factura_Maestro.delete({
     *   where: {
     *     // ... filter to delete one Venta_Factura_Maestro
     *   }
     * })
     * 
     */
    delete<T extends Venta_Factura_MaestroDeleteArgs>(args: SelectSubset<T, Venta_Factura_MaestroDeleteArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Venta_Factura_Maestro.
     * @param {Venta_Factura_MaestroUpdateArgs} args - Arguments to update one Venta_Factura_Maestro.
     * @example
     * // Update one Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Venta_Factura_MaestroUpdateArgs>(args: SelectSubset<T, Venta_Factura_MaestroUpdateArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Venta_Factura_Maestros.
     * @param {Venta_Factura_MaestroDeleteManyArgs} args - Arguments to filter Venta_Factura_Maestros to delete.
     * @example
     * // Delete a few Venta_Factura_Maestros
     * const { count } = await prisma.venta_Factura_Maestro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Venta_Factura_MaestroDeleteManyArgs>(args?: SelectSubset<T, Venta_Factura_MaestroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Venta_Factura_Maestros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Venta_Factura_Maestros
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Venta_Factura_MaestroUpdateManyArgs>(args: SelectSubset<T, Venta_Factura_MaestroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Venta_Factura_Maestros and returns the data updated in the database.
     * @param {Venta_Factura_MaestroUpdateManyAndReturnArgs} args - Arguments to update many Venta_Factura_Maestros.
     * @example
     * // Update many Venta_Factura_Maestros
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Venta_Factura_Maestros and only return the `id_venta_factura`
     * const venta_Factura_MaestroWithId_venta_facturaOnly = await prisma.venta_Factura_Maestro.updateManyAndReturn({
     *   select: { id_venta_factura: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Venta_Factura_MaestroUpdateManyAndReturnArgs>(args: SelectSubset<T, Venta_Factura_MaestroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Venta_Factura_Maestro.
     * @param {Venta_Factura_MaestroUpsertArgs} args - Arguments to update or create a Venta_Factura_Maestro.
     * @example
     * // Update or create a Venta_Factura_Maestro
     * const venta_Factura_Maestro = await prisma.venta_Factura_Maestro.upsert({
     *   create: {
     *     // ... data to create a Venta_Factura_Maestro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Venta_Factura_Maestro we want to update
     *   }
     * })
     */
    upsert<T extends Venta_Factura_MaestroUpsertArgs>(args: SelectSubset<T, Venta_Factura_MaestroUpsertArgs<ExtArgs>>): Prisma__Venta_Factura_MaestroClient<$Result.GetResult<Prisma.$Venta_Factura_MaestroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Venta_Factura_Maestros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroCountArgs} args - Arguments to filter Venta_Factura_Maestros to count.
     * @example
     * // Count the number of Venta_Factura_Maestros
     * const count = await prisma.venta_Factura_Maestro.count({
     *   where: {
     *     // ... the filter for the Venta_Factura_Maestros we want to count
     *   }
     * })
    **/
    count<T extends Venta_Factura_MaestroCountArgs>(
      args?: Subset<T, Venta_Factura_MaestroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Venta_Factura_MaestroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Venta_Factura_Maestro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Venta_Factura_MaestroAggregateArgs>(args: Subset<T, Venta_Factura_MaestroAggregateArgs>): Prisma.PrismaPromise<GetVenta_Factura_MaestroAggregateType<T>>

    /**
     * Group by Venta_Factura_Maestro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Venta_Factura_MaestroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Venta_Factura_MaestroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Venta_Factura_MaestroGroupByArgs['orderBy'] }
        : { orderBy?: Venta_Factura_MaestroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Venta_Factura_MaestroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVenta_Factura_MaestroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Venta_Factura_Maestro model
   */
  readonly fields: Venta_Factura_MaestroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Venta_Factura_Maestro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Venta_Factura_MaestroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    venta<T extends VentaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VentaDefaultArgs<ExtArgs>>): Prisma__VentaClient<$Result.GetResult<Prisma.$VentaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    factura_maestro<T extends Factura_MaestroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Factura_MaestroDefaultArgs<ExtArgs>>): Prisma__Factura_MaestroClient<$Result.GetResult<Prisma.$Factura_MaestroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Venta_Factura_Maestro model
   */
  interface Venta_Factura_MaestroFieldRefs {
    readonly id_venta_factura: FieldRef<"Venta_Factura_Maestro", 'Int'>
    readonly venta_id: FieldRef<"Venta_Factura_Maestro", 'Int'>
    readonly factura_maestro_id: FieldRef<"Venta_Factura_Maestro", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Venta_Factura_Maestro findUnique
   */
  export type Venta_Factura_MaestroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Venta_Factura_Maestro to fetch.
     */
    where: Venta_Factura_MaestroWhereUniqueInput
  }

  /**
   * Venta_Factura_Maestro findUniqueOrThrow
   */
  export type Venta_Factura_MaestroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Venta_Factura_Maestro to fetch.
     */
    where: Venta_Factura_MaestroWhereUniqueInput
  }

  /**
   * Venta_Factura_Maestro findFirst
   */
  export type Venta_Factura_MaestroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Venta_Factura_Maestro to fetch.
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Venta_Factura_Maestros to fetch.
     */
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Venta_Factura_Maestros.
     */
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Venta_Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Venta_Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Venta_Factura_Maestros.
     */
    distinct?: Venta_Factura_MaestroScalarFieldEnum | Venta_Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Venta_Factura_Maestro findFirstOrThrow
   */
  export type Venta_Factura_MaestroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Venta_Factura_Maestro to fetch.
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Venta_Factura_Maestros to fetch.
     */
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Venta_Factura_Maestros.
     */
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Venta_Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Venta_Factura_Maestros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Venta_Factura_Maestros.
     */
    distinct?: Venta_Factura_MaestroScalarFieldEnum | Venta_Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Venta_Factura_Maestro findMany
   */
  export type Venta_Factura_MaestroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter, which Venta_Factura_Maestros to fetch.
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Venta_Factura_Maestros to fetch.
     */
    orderBy?: Venta_Factura_MaestroOrderByWithRelationInput | Venta_Factura_MaestroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Venta_Factura_Maestros.
     */
    cursor?: Venta_Factura_MaestroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Venta_Factura_Maestros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Venta_Factura_Maestros.
     */
    skip?: number
    distinct?: Venta_Factura_MaestroScalarFieldEnum | Venta_Factura_MaestroScalarFieldEnum[]
  }

  /**
   * Venta_Factura_Maestro create
   */
  export type Venta_Factura_MaestroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * The data needed to create a Venta_Factura_Maestro.
     */
    data: XOR<Venta_Factura_MaestroCreateInput, Venta_Factura_MaestroUncheckedCreateInput>
  }

  /**
   * Venta_Factura_Maestro createMany
   */
  export type Venta_Factura_MaestroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Venta_Factura_Maestros.
     */
    data: Venta_Factura_MaestroCreateManyInput | Venta_Factura_MaestroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Venta_Factura_Maestro createManyAndReturn
   */
  export type Venta_Factura_MaestroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * The data used to create many Venta_Factura_Maestros.
     */
    data: Venta_Factura_MaestroCreateManyInput | Venta_Factura_MaestroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta_Factura_Maestro update
   */
  export type Venta_Factura_MaestroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * The data needed to update a Venta_Factura_Maestro.
     */
    data: XOR<Venta_Factura_MaestroUpdateInput, Venta_Factura_MaestroUncheckedUpdateInput>
    /**
     * Choose, which Venta_Factura_Maestro to update.
     */
    where: Venta_Factura_MaestroWhereUniqueInput
  }

  /**
   * Venta_Factura_Maestro updateMany
   */
  export type Venta_Factura_MaestroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Venta_Factura_Maestros.
     */
    data: XOR<Venta_Factura_MaestroUpdateManyMutationInput, Venta_Factura_MaestroUncheckedUpdateManyInput>
    /**
     * Filter which Venta_Factura_Maestros to update
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * Limit how many Venta_Factura_Maestros to update.
     */
    limit?: number
  }

  /**
   * Venta_Factura_Maestro updateManyAndReturn
   */
  export type Venta_Factura_MaestroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * The data used to update Venta_Factura_Maestros.
     */
    data: XOR<Venta_Factura_MaestroUpdateManyMutationInput, Venta_Factura_MaestroUncheckedUpdateManyInput>
    /**
     * Filter which Venta_Factura_Maestros to update
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * Limit how many Venta_Factura_Maestros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Venta_Factura_Maestro upsert
   */
  export type Venta_Factura_MaestroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * The filter to search for the Venta_Factura_Maestro to update in case it exists.
     */
    where: Venta_Factura_MaestroWhereUniqueInput
    /**
     * In case the Venta_Factura_Maestro found by the `where` argument doesn't exist, create a new Venta_Factura_Maestro with this data.
     */
    create: XOR<Venta_Factura_MaestroCreateInput, Venta_Factura_MaestroUncheckedCreateInput>
    /**
     * In case the Venta_Factura_Maestro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Venta_Factura_MaestroUpdateInput, Venta_Factura_MaestroUncheckedUpdateInput>
  }

  /**
   * Venta_Factura_Maestro delete
   */
  export type Venta_Factura_MaestroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
    /**
     * Filter which Venta_Factura_Maestro to delete.
     */
    where: Venta_Factura_MaestroWhereUniqueInput
  }

  /**
   * Venta_Factura_Maestro deleteMany
   */
  export type Venta_Factura_MaestroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Venta_Factura_Maestros to delete
     */
    where?: Venta_Factura_MaestroWhereInput
    /**
     * Limit how many Venta_Factura_Maestros to delete.
     */
    limit?: number
  }

  /**
   * Venta_Factura_Maestro without action
   */
  export type Venta_Factura_MaestroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Venta_Factura_Maestro
     */
    select?: Venta_Factura_MaestroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Venta_Factura_Maestro
     */
    omit?: Venta_Factura_MaestroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Venta_Factura_MaestroInclude<ExtArgs> | null
  }


  /**
   * Model Descuento
   */

  export type AggregateDescuento = {
    _count: DescuentoCountAggregateOutputType | null
    _avg: DescuentoAvgAggregateOutputType | null
    _sum: DescuentoSumAggregateOutputType | null
    _min: DescuentoMinAggregateOutputType | null
    _max: DescuentoMaxAggregateOutputType | null
  }

  export type DescuentoAvgAggregateOutputType = {
    id_descuento: number | null
    porcentaje: Decimal | null
    monto_fijo: Decimal | null
  }

  export type DescuentoSumAggregateOutputType = {
    id_descuento: number | null
    porcentaje: Decimal | null
    monto_fijo: Decimal | null
  }

  export type DescuentoMinAggregateOutputType = {
    id_descuento: number | null
    nombre_descuento: string | null
    porcentaje: Decimal | null
    monto_fijo: Decimal | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
  }

  export type DescuentoMaxAggregateOutputType = {
    id_descuento: number | null
    nombre_descuento: string | null
    porcentaje: Decimal | null
    monto_fijo: Decimal | null
    fecha_inicio: Date | null
    fecha_fin: Date | null
  }

  export type DescuentoCountAggregateOutputType = {
    id_descuento: number
    nombre_descuento: number
    porcentaje: number
    monto_fijo: number
    fecha_inicio: number
    fecha_fin: number
    _all: number
  }


  export type DescuentoAvgAggregateInputType = {
    id_descuento?: true
    porcentaje?: true
    monto_fijo?: true
  }

  export type DescuentoSumAggregateInputType = {
    id_descuento?: true
    porcentaje?: true
    monto_fijo?: true
  }

  export type DescuentoMinAggregateInputType = {
    id_descuento?: true
    nombre_descuento?: true
    porcentaje?: true
    monto_fijo?: true
    fecha_inicio?: true
    fecha_fin?: true
  }

  export type DescuentoMaxAggregateInputType = {
    id_descuento?: true
    nombre_descuento?: true
    porcentaje?: true
    monto_fijo?: true
    fecha_inicio?: true
    fecha_fin?: true
  }

  export type DescuentoCountAggregateInputType = {
    id_descuento?: true
    nombre_descuento?: true
    porcentaje?: true
    monto_fijo?: true
    fecha_inicio?: true
    fecha_fin?: true
    _all?: true
  }

  export type DescuentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descuento to aggregate.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Descuentos
    **/
    _count?: true | DescuentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DescuentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DescuentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DescuentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DescuentoMaxAggregateInputType
  }

  export type GetDescuentoAggregateType<T extends DescuentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDescuento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescuento[P]>
      : GetScalarType<T[P], AggregateDescuento[P]>
  }




  export type DescuentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DescuentoWhereInput
    orderBy?: DescuentoOrderByWithAggregationInput | DescuentoOrderByWithAggregationInput[]
    by: DescuentoScalarFieldEnum[] | DescuentoScalarFieldEnum
    having?: DescuentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DescuentoCountAggregateInputType | true
    _avg?: DescuentoAvgAggregateInputType
    _sum?: DescuentoSumAggregateInputType
    _min?: DescuentoMinAggregateInputType
    _max?: DescuentoMaxAggregateInputType
  }

  export type DescuentoGroupByOutputType = {
    id_descuento: number
    nombre_descuento: string
    porcentaje: Decimal | null
    monto_fijo: Decimal | null
    fecha_inicio: Date
    fecha_fin: Date
    _count: DescuentoCountAggregateOutputType | null
    _avg: DescuentoAvgAggregateOutputType | null
    _sum: DescuentoSumAggregateOutputType | null
    _min: DescuentoMinAggregateOutputType | null
    _max: DescuentoMaxAggregateOutputType | null
  }

  type GetDescuentoGroupByPayload<T extends DescuentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DescuentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DescuentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DescuentoGroupByOutputType[P]>
            : GetScalarType<T[P], DescuentoGroupByOutputType[P]>
        }
      >
    >


  export type DescuentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_descuento?: boolean
    nombre_descuento?: boolean
    porcentaje?: boolean
    monto_fijo?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
    productos?: boolean | Descuento$productosArgs<ExtArgs>
    _count?: boolean | DescuentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_descuento?: boolean
    nombre_descuento?: boolean
    porcentaje?: boolean
    monto_fijo?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_descuento?: boolean
    nombre_descuento?: boolean
    porcentaje?: boolean
    monto_fijo?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
  }, ExtArgs["result"]["descuento"]>

  export type DescuentoSelectScalar = {
    id_descuento?: boolean
    nombre_descuento?: boolean
    porcentaje?: boolean
    monto_fijo?: boolean
    fecha_inicio?: boolean
    fecha_fin?: boolean
  }

  export type DescuentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_descuento" | "nombre_descuento" | "porcentaje" | "monto_fijo" | "fecha_inicio" | "fecha_fin", ExtArgs["result"]["descuento"]>
  export type DescuentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | Descuento$productosArgs<ExtArgs>
    _count?: boolean | DescuentoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DescuentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DescuentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DescuentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Descuento"
    objects: {
      productos: Prisma.$Producto_DescuentoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_descuento: number
      nombre_descuento: string
      porcentaje: Prisma.Decimal | null
      monto_fijo: Prisma.Decimal | null
      fecha_inicio: Date
      fecha_fin: Date
    }, ExtArgs["result"]["descuento"]>
    composites: {}
  }

  type DescuentoGetPayload<S extends boolean | null | undefined | DescuentoDefaultArgs> = $Result.GetResult<Prisma.$DescuentoPayload, S>

  type DescuentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DescuentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DescuentoCountAggregateInputType | true
    }

  export interface DescuentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Descuento'], meta: { name: 'Descuento' } }
    /**
     * Find zero or one Descuento that matches the filter.
     * @param {DescuentoFindUniqueArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DescuentoFindUniqueArgs>(args: SelectSubset<T, DescuentoFindUniqueArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Descuento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DescuentoFindUniqueOrThrowArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DescuentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DescuentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Descuento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindFirstArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DescuentoFindFirstArgs>(args?: SelectSubset<T, DescuentoFindFirstArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Descuento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindFirstOrThrowArgs} args - Arguments to find a Descuento
     * @example
     * // Get one Descuento
     * const descuento = await prisma.descuento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DescuentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DescuentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Descuentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Descuentos
     * const descuentos = await prisma.descuento.findMany()
     * 
     * // Get first 10 Descuentos
     * const descuentos = await prisma.descuento.findMany({ take: 10 })
     * 
     * // Only select the `id_descuento`
     * const descuentoWithId_descuentoOnly = await prisma.descuento.findMany({ select: { id_descuento: true } })
     * 
     */
    findMany<T extends DescuentoFindManyArgs>(args?: SelectSubset<T, DescuentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Descuento.
     * @param {DescuentoCreateArgs} args - Arguments to create a Descuento.
     * @example
     * // Create one Descuento
     * const Descuento = await prisma.descuento.create({
     *   data: {
     *     // ... data to create a Descuento
     *   }
     * })
     * 
     */
    create<T extends DescuentoCreateArgs>(args: SelectSubset<T, DescuentoCreateArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Descuentos.
     * @param {DescuentoCreateManyArgs} args - Arguments to create many Descuentos.
     * @example
     * // Create many Descuentos
     * const descuento = await prisma.descuento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DescuentoCreateManyArgs>(args?: SelectSubset<T, DescuentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Descuentos and returns the data saved in the database.
     * @param {DescuentoCreateManyAndReturnArgs} args - Arguments to create many Descuentos.
     * @example
     * // Create many Descuentos
     * const descuento = await prisma.descuento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Descuentos and only return the `id_descuento`
     * const descuentoWithId_descuentoOnly = await prisma.descuento.createManyAndReturn({
     *   select: { id_descuento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DescuentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DescuentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Descuento.
     * @param {DescuentoDeleteArgs} args - Arguments to delete one Descuento.
     * @example
     * // Delete one Descuento
     * const Descuento = await prisma.descuento.delete({
     *   where: {
     *     // ... filter to delete one Descuento
     *   }
     * })
     * 
     */
    delete<T extends DescuentoDeleteArgs>(args: SelectSubset<T, DescuentoDeleteArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Descuento.
     * @param {DescuentoUpdateArgs} args - Arguments to update one Descuento.
     * @example
     * // Update one Descuento
     * const descuento = await prisma.descuento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DescuentoUpdateArgs>(args: SelectSubset<T, DescuentoUpdateArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Descuentos.
     * @param {DescuentoDeleteManyArgs} args - Arguments to filter Descuentos to delete.
     * @example
     * // Delete a few Descuentos
     * const { count } = await prisma.descuento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DescuentoDeleteManyArgs>(args?: SelectSubset<T, DescuentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Descuentos
     * const descuento = await prisma.descuento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DescuentoUpdateManyArgs>(args: SelectSubset<T, DescuentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Descuentos and returns the data updated in the database.
     * @param {DescuentoUpdateManyAndReturnArgs} args - Arguments to update many Descuentos.
     * @example
     * // Update many Descuentos
     * const descuento = await prisma.descuento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Descuentos and only return the `id_descuento`
     * const descuentoWithId_descuentoOnly = await prisma.descuento.updateManyAndReturn({
     *   select: { id_descuento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DescuentoUpdateManyAndReturnArgs>(args: SelectSubset<T, DescuentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Descuento.
     * @param {DescuentoUpsertArgs} args - Arguments to update or create a Descuento.
     * @example
     * // Update or create a Descuento
     * const descuento = await prisma.descuento.upsert({
     *   create: {
     *     // ... data to create a Descuento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Descuento we want to update
     *   }
     * })
     */
    upsert<T extends DescuentoUpsertArgs>(args: SelectSubset<T, DescuentoUpsertArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoCountArgs} args - Arguments to filter Descuentos to count.
     * @example
     * // Count the number of Descuentos
     * const count = await prisma.descuento.count({
     *   where: {
     *     // ... the filter for the Descuentos we want to count
     *   }
     * })
    **/
    count<T extends DescuentoCountArgs>(
      args?: Subset<T, DescuentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DescuentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DescuentoAggregateArgs>(args: Subset<T, DescuentoAggregateArgs>): Prisma.PrismaPromise<GetDescuentoAggregateType<T>>

    /**
     * Group by Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescuentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DescuentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DescuentoGroupByArgs['orderBy'] }
        : { orderBy?: DescuentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DescuentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescuentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Descuento model
   */
  readonly fields: DescuentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Descuento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DescuentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends Descuento$productosArgs<ExtArgs> = {}>(args?: Subset<T, Descuento$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Descuento model
   */
  interface DescuentoFieldRefs {
    readonly id_descuento: FieldRef<"Descuento", 'Int'>
    readonly nombre_descuento: FieldRef<"Descuento", 'String'>
    readonly porcentaje: FieldRef<"Descuento", 'Decimal'>
    readonly monto_fijo: FieldRef<"Descuento", 'Decimal'>
    readonly fecha_inicio: FieldRef<"Descuento", 'DateTime'>
    readonly fecha_fin: FieldRef<"Descuento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Descuento findUnique
   */
  export type DescuentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento findUniqueOrThrow
   */
  export type DescuentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento findFirst
   */
  export type DescuentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descuentos.
     */
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento findFirstOrThrow
   */
  export type DescuentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuento to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Descuentos.
     */
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento findMany
   */
  export type DescuentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Descuentos to fetch.
     */
    where?: DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Descuentos to fetch.
     */
    orderBy?: DescuentoOrderByWithRelationInput | DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Descuentos.
     */
    cursor?: DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Descuentos.
     */
    skip?: number
    distinct?: DescuentoScalarFieldEnum | DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento create
   */
  export type DescuentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Descuento.
     */
    data: XOR<DescuentoCreateInput, DescuentoUncheckedCreateInput>
  }

  /**
   * Descuento createMany
   */
  export type DescuentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Descuentos.
     */
    data: DescuentoCreateManyInput | DescuentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Descuento createManyAndReturn
   */
  export type DescuentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * The data used to create many Descuentos.
     */
    data: DescuentoCreateManyInput | DescuentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Descuento update
   */
  export type DescuentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Descuento.
     */
    data: XOR<DescuentoUpdateInput, DescuentoUncheckedUpdateInput>
    /**
     * Choose, which Descuento to update.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento updateMany
   */
  export type DescuentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Descuentos.
     */
    data: XOR<DescuentoUpdateManyMutationInput, DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Descuentos to update
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to update.
     */
    limit?: number
  }

  /**
   * Descuento updateManyAndReturn
   */
  export type DescuentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * The data used to update Descuentos.
     */
    data: XOR<DescuentoUpdateManyMutationInput, DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Descuentos to update
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to update.
     */
    limit?: number
  }

  /**
   * Descuento upsert
   */
  export type DescuentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Descuento to update in case it exists.
     */
    where: DescuentoWhereUniqueInput
    /**
     * In case the Descuento found by the `where` argument doesn't exist, create a new Descuento with this data.
     */
    create: XOR<DescuentoCreateInput, DescuentoUncheckedCreateInput>
    /**
     * In case the Descuento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DescuentoUpdateInput, DescuentoUncheckedUpdateInput>
  }

  /**
   * Descuento delete
   */
  export type DescuentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
    /**
     * Filter which Descuento to delete.
     */
    where: DescuentoWhereUniqueInput
  }

  /**
   * Descuento deleteMany
   */
  export type DescuentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Descuentos to delete
     */
    where?: DescuentoWhereInput
    /**
     * Limit how many Descuentos to delete.
     */
    limit?: number
  }

  /**
   * Descuento.productos
   */
  export type Descuento$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    where?: Producto_DescuentoWhereInput
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    cursor?: Producto_DescuentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Producto_DescuentoScalarFieldEnum | Producto_DescuentoScalarFieldEnum[]
  }

  /**
   * Descuento without action
   */
  export type DescuentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Descuento
     */
    select?: DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Descuento
     */
    omit?: DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescuentoInclude<ExtArgs> | null
  }


  /**
   * Model Producto_Descuento
   */

  export type AggregateProducto_Descuento = {
    _count: Producto_DescuentoCountAggregateOutputType | null
    _avg: Producto_DescuentoAvgAggregateOutputType | null
    _sum: Producto_DescuentoSumAggregateOutputType | null
    _min: Producto_DescuentoMinAggregateOutputType | null
    _max: Producto_DescuentoMaxAggregateOutputType | null
  }

  export type Producto_DescuentoAvgAggregateOutputType = {
    id_producto_descuento: number | null
    producto_id: number | null
    descuento_id: number | null
    cantidad_aplicada: Decimal | null
  }

  export type Producto_DescuentoSumAggregateOutputType = {
    id_producto_descuento: number | null
    producto_id: number | null
    descuento_id: number | null
    cantidad_aplicada: Decimal | null
  }

  export type Producto_DescuentoMinAggregateOutputType = {
    id_producto_descuento: number | null
    producto_id: number | null
    descuento_id: number | null
    cantidad_aplicada: Decimal | null
  }

  export type Producto_DescuentoMaxAggregateOutputType = {
    id_producto_descuento: number | null
    producto_id: number | null
    descuento_id: number | null
    cantidad_aplicada: Decimal | null
  }

  export type Producto_DescuentoCountAggregateOutputType = {
    id_producto_descuento: number
    producto_id: number
    descuento_id: number
    cantidad_aplicada: number
    _all: number
  }


  export type Producto_DescuentoAvgAggregateInputType = {
    id_producto_descuento?: true
    producto_id?: true
    descuento_id?: true
    cantidad_aplicada?: true
  }

  export type Producto_DescuentoSumAggregateInputType = {
    id_producto_descuento?: true
    producto_id?: true
    descuento_id?: true
    cantidad_aplicada?: true
  }

  export type Producto_DescuentoMinAggregateInputType = {
    id_producto_descuento?: true
    producto_id?: true
    descuento_id?: true
    cantidad_aplicada?: true
  }

  export type Producto_DescuentoMaxAggregateInputType = {
    id_producto_descuento?: true
    producto_id?: true
    descuento_id?: true
    cantidad_aplicada?: true
  }

  export type Producto_DescuentoCountAggregateInputType = {
    id_producto_descuento?: true
    producto_id?: true
    descuento_id?: true
    cantidad_aplicada?: true
    _all?: true
  }

  export type Producto_DescuentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto_Descuento to aggregate.
     */
    where?: Producto_DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producto_Descuentos to fetch.
     */
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Producto_DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producto_Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producto_Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Producto_Descuentos
    **/
    _count?: true | Producto_DescuentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Producto_DescuentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Producto_DescuentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Producto_DescuentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Producto_DescuentoMaxAggregateInputType
  }

  export type GetProducto_DescuentoAggregateType<T extends Producto_DescuentoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducto_Descuento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducto_Descuento[P]>
      : GetScalarType<T[P], AggregateProducto_Descuento[P]>
  }




  export type Producto_DescuentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Producto_DescuentoWhereInput
    orderBy?: Producto_DescuentoOrderByWithAggregationInput | Producto_DescuentoOrderByWithAggregationInput[]
    by: Producto_DescuentoScalarFieldEnum[] | Producto_DescuentoScalarFieldEnum
    having?: Producto_DescuentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Producto_DescuentoCountAggregateInputType | true
    _avg?: Producto_DescuentoAvgAggregateInputType
    _sum?: Producto_DescuentoSumAggregateInputType
    _min?: Producto_DescuentoMinAggregateInputType
    _max?: Producto_DescuentoMaxAggregateInputType
  }

  export type Producto_DescuentoGroupByOutputType = {
    id_producto_descuento: number
    producto_id: number
    descuento_id: number
    cantidad_aplicada: Decimal
    _count: Producto_DescuentoCountAggregateOutputType | null
    _avg: Producto_DescuentoAvgAggregateOutputType | null
    _sum: Producto_DescuentoSumAggregateOutputType | null
    _min: Producto_DescuentoMinAggregateOutputType | null
    _max: Producto_DescuentoMaxAggregateOutputType | null
  }

  type GetProducto_DescuentoGroupByPayload<T extends Producto_DescuentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Producto_DescuentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Producto_DescuentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Producto_DescuentoGroupByOutputType[P]>
            : GetScalarType<T[P], Producto_DescuentoGroupByOutputType[P]>
        }
      >
    >


  export type Producto_DescuentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto_descuento?: boolean
    producto_id?: boolean
    descuento_id?: boolean
    cantidad_aplicada?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_Descuento"]>

  export type Producto_DescuentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto_descuento?: boolean
    producto_id?: boolean
    descuento_id?: boolean
    cantidad_aplicada?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_Descuento"]>

  export type Producto_DescuentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_producto_descuento?: boolean
    producto_id?: boolean
    descuento_id?: boolean
    cantidad_aplicada?: boolean
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producto_Descuento"]>

  export type Producto_DescuentoSelectScalar = {
    id_producto_descuento?: boolean
    producto_id?: boolean
    descuento_id?: boolean
    cantidad_aplicada?: boolean
  }

  export type Producto_DescuentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_producto_descuento" | "producto_id" | "descuento_id" | "cantidad_aplicada", ExtArgs["result"]["producto_Descuento"]>
  export type Producto_DescuentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }
  export type Producto_DescuentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }
  export type Producto_DescuentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductoDefaultArgs<ExtArgs>
    descuento?: boolean | DescuentoDefaultArgs<ExtArgs>
  }

  export type $Producto_DescuentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producto_Descuento"
    objects: {
      producto: Prisma.$ProductoPayload<ExtArgs>
      descuento: Prisma.$DescuentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_producto_descuento: number
      producto_id: number
      descuento_id: number
      cantidad_aplicada: Prisma.Decimal
    }, ExtArgs["result"]["producto_Descuento"]>
    composites: {}
  }

  type Producto_DescuentoGetPayload<S extends boolean | null | undefined | Producto_DescuentoDefaultArgs> = $Result.GetResult<Prisma.$Producto_DescuentoPayload, S>

  type Producto_DescuentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Producto_DescuentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Producto_DescuentoCountAggregateInputType | true
    }

  export interface Producto_DescuentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producto_Descuento'], meta: { name: 'Producto_Descuento' } }
    /**
     * Find zero or one Producto_Descuento that matches the filter.
     * @param {Producto_DescuentoFindUniqueArgs} args - Arguments to find a Producto_Descuento
     * @example
     * // Get one Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Producto_DescuentoFindUniqueArgs>(args: SelectSubset<T, Producto_DescuentoFindUniqueArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Producto_Descuento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Producto_DescuentoFindUniqueOrThrowArgs} args - Arguments to find a Producto_Descuento
     * @example
     * // Get one Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Producto_DescuentoFindUniqueOrThrowArgs>(args: SelectSubset<T, Producto_DescuentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto_Descuento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoFindFirstArgs} args - Arguments to find a Producto_Descuento
     * @example
     * // Get one Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Producto_DescuentoFindFirstArgs>(args?: SelectSubset<T, Producto_DescuentoFindFirstArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Producto_Descuento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoFindFirstOrThrowArgs} args - Arguments to find a Producto_Descuento
     * @example
     * // Get one Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Producto_DescuentoFindFirstOrThrowArgs>(args?: SelectSubset<T, Producto_DescuentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Producto_Descuentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Producto_Descuentos
     * const producto_Descuentos = await prisma.producto_Descuento.findMany()
     * 
     * // Get first 10 Producto_Descuentos
     * const producto_Descuentos = await prisma.producto_Descuento.findMany({ take: 10 })
     * 
     * // Only select the `id_producto_descuento`
     * const producto_DescuentoWithId_producto_descuentoOnly = await prisma.producto_Descuento.findMany({ select: { id_producto_descuento: true } })
     * 
     */
    findMany<T extends Producto_DescuentoFindManyArgs>(args?: SelectSubset<T, Producto_DescuentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Producto_Descuento.
     * @param {Producto_DescuentoCreateArgs} args - Arguments to create a Producto_Descuento.
     * @example
     * // Create one Producto_Descuento
     * const Producto_Descuento = await prisma.producto_Descuento.create({
     *   data: {
     *     // ... data to create a Producto_Descuento
     *   }
     * })
     * 
     */
    create<T extends Producto_DescuentoCreateArgs>(args: SelectSubset<T, Producto_DescuentoCreateArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Producto_Descuentos.
     * @param {Producto_DescuentoCreateManyArgs} args - Arguments to create many Producto_Descuentos.
     * @example
     * // Create many Producto_Descuentos
     * const producto_Descuento = await prisma.producto_Descuento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Producto_DescuentoCreateManyArgs>(args?: SelectSubset<T, Producto_DescuentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Producto_Descuentos and returns the data saved in the database.
     * @param {Producto_DescuentoCreateManyAndReturnArgs} args - Arguments to create many Producto_Descuentos.
     * @example
     * // Create many Producto_Descuentos
     * const producto_Descuento = await prisma.producto_Descuento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Producto_Descuentos and only return the `id_producto_descuento`
     * const producto_DescuentoWithId_producto_descuentoOnly = await prisma.producto_Descuento.createManyAndReturn({
     *   select: { id_producto_descuento: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Producto_DescuentoCreateManyAndReturnArgs>(args?: SelectSubset<T, Producto_DescuentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Producto_Descuento.
     * @param {Producto_DescuentoDeleteArgs} args - Arguments to delete one Producto_Descuento.
     * @example
     * // Delete one Producto_Descuento
     * const Producto_Descuento = await prisma.producto_Descuento.delete({
     *   where: {
     *     // ... filter to delete one Producto_Descuento
     *   }
     * })
     * 
     */
    delete<T extends Producto_DescuentoDeleteArgs>(args: SelectSubset<T, Producto_DescuentoDeleteArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Producto_Descuento.
     * @param {Producto_DescuentoUpdateArgs} args - Arguments to update one Producto_Descuento.
     * @example
     * // Update one Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Producto_DescuentoUpdateArgs>(args: SelectSubset<T, Producto_DescuentoUpdateArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Producto_Descuentos.
     * @param {Producto_DescuentoDeleteManyArgs} args - Arguments to filter Producto_Descuentos to delete.
     * @example
     * // Delete a few Producto_Descuentos
     * const { count } = await prisma.producto_Descuento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Producto_DescuentoDeleteManyArgs>(args?: SelectSubset<T, Producto_DescuentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Producto_Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Producto_Descuentos
     * const producto_Descuento = await prisma.producto_Descuento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Producto_DescuentoUpdateManyArgs>(args: SelectSubset<T, Producto_DescuentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Producto_Descuentos and returns the data updated in the database.
     * @param {Producto_DescuentoUpdateManyAndReturnArgs} args - Arguments to update many Producto_Descuentos.
     * @example
     * // Update many Producto_Descuentos
     * const producto_Descuento = await prisma.producto_Descuento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Producto_Descuentos and only return the `id_producto_descuento`
     * const producto_DescuentoWithId_producto_descuentoOnly = await prisma.producto_Descuento.updateManyAndReturn({
     *   select: { id_producto_descuento: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Producto_DescuentoUpdateManyAndReturnArgs>(args: SelectSubset<T, Producto_DescuentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Producto_Descuento.
     * @param {Producto_DescuentoUpsertArgs} args - Arguments to update or create a Producto_Descuento.
     * @example
     * // Update or create a Producto_Descuento
     * const producto_Descuento = await prisma.producto_Descuento.upsert({
     *   create: {
     *     // ... data to create a Producto_Descuento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producto_Descuento we want to update
     *   }
     * })
     */
    upsert<T extends Producto_DescuentoUpsertArgs>(args: SelectSubset<T, Producto_DescuentoUpsertArgs<ExtArgs>>): Prisma__Producto_DescuentoClient<$Result.GetResult<Prisma.$Producto_DescuentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Producto_Descuentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoCountArgs} args - Arguments to filter Producto_Descuentos to count.
     * @example
     * // Count the number of Producto_Descuentos
     * const count = await prisma.producto_Descuento.count({
     *   where: {
     *     // ... the filter for the Producto_Descuentos we want to count
     *   }
     * })
    **/
    count<T extends Producto_DescuentoCountArgs>(
      args?: Subset<T, Producto_DescuentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Producto_DescuentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producto_Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Producto_DescuentoAggregateArgs>(args: Subset<T, Producto_DescuentoAggregateArgs>): Prisma.PrismaPromise<GetProducto_DescuentoAggregateType<T>>

    /**
     * Group by Producto_Descuento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Producto_DescuentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Producto_DescuentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Producto_DescuentoGroupByArgs['orderBy'] }
        : { orderBy?: Producto_DescuentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Producto_DescuentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProducto_DescuentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producto_Descuento model
   */
  readonly fields: Producto_DescuentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producto_Descuento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Producto_DescuentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductoDefaultArgs<ExtArgs>>): Prisma__ProductoClient<$Result.GetResult<Prisma.$ProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    descuento<T extends DescuentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DescuentoDefaultArgs<ExtArgs>>): Prisma__DescuentoClient<$Result.GetResult<Prisma.$DescuentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producto_Descuento model
   */
  interface Producto_DescuentoFieldRefs {
    readonly id_producto_descuento: FieldRef<"Producto_Descuento", 'Int'>
    readonly producto_id: FieldRef<"Producto_Descuento", 'Int'>
    readonly descuento_id: FieldRef<"Producto_Descuento", 'Int'>
    readonly cantidad_aplicada: FieldRef<"Producto_Descuento", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Producto_Descuento findUnique
   */
  export type Producto_DescuentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Producto_Descuento to fetch.
     */
    where: Producto_DescuentoWhereUniqueInput
  }

  /**
   * Producto_Descuento findUniqueOrThrow
   */
  export type Producto_DescuentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Producto_Descuento to fetch.
     */
    where: Producto_DescuentoWhereUniqueInput
  }

  /**
   * Producto_Descuento findFirst
   */
  export type Producto_DescuentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Producto_Descuento to fetch.
     */
    where?: Producto_DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producto_Descuentos to fetch.
     */
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Producto_Descuentos.
     */
    cursor?: Producto_DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producto_Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producto_Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Producto_Descuentos.
     */
    distinct?: Producto_DescuentoScalarFieldEnum | Producto_DescuentoScalarFieldEnum[]
  }

  /**
   * Producto_Descuento findFirstOrThrow
   */
  export type Producto_DescuentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Producto_Descuento to fetch.
     */
    where?: Producto_DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producto_Descuentos to fetch.
     */
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Producto_Descuentos.
     */
    cursor?: Producto_DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producto_Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producto_Descuentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Producto_Descuentos.
     */
    distinct?: Producto_DescuentoScalarFieldEnum | Producto_DescuentoScalarFieldEnum[]
  }

  /**
   * Producto_Descuento findMany
   */
  export type Producto_DescuentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter, which Producto_Descuentos to fetch.
     */
    where?: Producto_DescuentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producto_Descuentos to fetch.
     */
    orderBy?: Producto_DescuentoOrderByWithRelationInput | Producto_DescuentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Producto_Descuentos.
     */
    cursor?: Producto_DescuentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producto_Descuentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producto_Descuentos.
     */
    skip?: number
    distinct?: Producto_DescuentoScalarFieldEnum | Producto_DescuentoScalarFieldEnum[]
  }

  /**
   * Producto_Descuento create
   */
  export type Producto_DescuentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producto_Descuento.
     */
    data: XOR<Producto_DescuentoCreateInput, Producto_DescuentoUncheckedCreateInput>
  }

  /**
   * Producto_Descuento createMany
   */
  export type Producto_DescuentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Producto_Descuentos.
     */
    data: Producto_DescuentoCreateManyInput | Producto_DescuentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producto_Descuento createManyAndReturn
   */
  export type Producto_DescuentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * The data used to create many Producto_Descuentos.
     */
    data: Producto_DescuentoCreateManyInput | Producto_DescuentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto_Descuento update
   */
  export type Producto_DescuentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producto_Descuento.
     */
    data: XOR<Producto_DescuentoUpdateInput, Producto_DescuentoUncheckedUpdateInput>
    /**
     * Choose, which Producto_Descuento to update.
     */
    where: Producto_DescuentoWhereUniqueInput
  }

  /**
   * Producto_Descuento updateMany
   */
  export type Producto_DescuentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Producto_Descuentos.
     */
    data: XOR<Producto_DescuentoUpdateManyMutationInput, Producto_DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Producto_Descuentos to update
     */
    where?: Producto_DescuentoWhereInput
    /**
     * Limit how many Producto_Descuentos to update.
     */
    limit?: number
  }

  /**
   * Producto_Descuento updateManyAndReturn
   */
  export type Producto_DescuentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * The data used to update Producto_Descuentos.
     */
    data: XOR<Producto_DescuentoUpdateManyMutationInput, Producto_DescuentoUncheckedUpdateManyInput>
    /**
     * Filter which Producto_Descuentos to update
     */
    where?: Producto_DescuentoWhereInput
    /**
     * Limit how many Producto_Descuentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Producto_Descuento upsert
   */
  export type Producto_DescuentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producto_Descuento to update in case it exists.
     */
    where: Producto_DescuentoWhereUniqueInput
    /**
     * In case the Producto_Descuento found by the `where` argument doesn't exist, create a new Producto_Descuento with this data.
     */
    create: XOR<Producto_DescuentoCreateInput, Producto_DescuentoUncheckedCreateInput>
    /**
     * In case the Producto_Descuento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Producto_DescuentoUpdateInput, Producto_DescuentoUncheckedUpdateInput>
  }

  /**
   * Producto_Descuento delete
   */
  export type Producto_DescuentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
    /**
     * Filter which Producto_Descuento to delete.
     */
    where: Producto_DescuentoWhereUniqueInput
  }

  /**
   * Producto_Descuento deleteMany
   */
  export type Producto_DescuentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producto_Descuentos to delete
     */
    where?: Producto_DescuentoWhereInput
    /**
     * Limit how many Producto_Descuentos to delete.
     */
    limit?: number
  }

  /**
   * Producto_Descuento without action
   */
  export type Producto_DescuentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producto_Descuento
     */
    select?: Producto_DescuentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Producto_Descuento
     */
    omit?: Producto_DescuentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Producto_DescuentoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const MarcaScalarFieldEnum: {
    id_marca: 'id_marca',
    nombre_marca: 'nombre_marca',
    pais_origen: 'pais_origen'
  };

  export type MarcaScalarFieldEnum = (typeof MarcaScalarFieldEnum)[keyof typeof MarcaScalarFieldEnum]


  export const Categoria_ProductoScalarFieldEnum: {
    id_categoria: 'id_categoria',
    nombre_categoria: 'nombre_categoria'
  };

  export type Categoria_ProductoScalarFieldEnum = (typeof Categoria_ProductoScalarFieldEnum)[keyof typeof Categoria_ProductoScalarFieldEnum]


  export const ProveedorScalarFieldEnum: {
    id_proveedor: 'id_proveedor',
    nombre: 'nombre',
    direccion: 'direccion',
    telefono: 'telefono',
    email: 'email'
  };

  export type ProveedorScalarFieldEnum = (typeof ProveedorScalarFieldEnum)[keyof typeof ProveedorScalarFieldEnum]


  export const ProductoScalarFieldEnum: {
    id_producto: 'id_producto',
    nombre: 'nombre',
    descripcion: 'descripcion',
    precio: 'precio',
    stock_disponible: 'stock_disponible',
    categoria_id: 'categoria_id',
    proveedor_id: 'proveedor_id',
    marca_id: 'marca_id'
  };

  export type ProductoScalarFieldEnum = (typeof ProductoScalarFieldEnum)[keyof typeof ProductoScalarFieldEnum]


  export const ClienteScalarFieldEnum: {
    id_cliente: 'id_cliente',
    nombre: 'nombre',
    direccion: 'direccion',
    telefono: 'telefono',
    email: 'email',
    fecha_registro: 'fecha_registro'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const VendedorScalarFieldEnum: {
    id_vendedor: 'id_vendedor',
    nombre: 'nombre',
    telefono: 'telefono',
    email: 'email'
  };

  export type VendedorScalarFieldEnum = (typeof VendedorScalarFieldEnum)[keyof typeof VendedorScalarFieldEnum]


  export const Factura_MaestroScalarFieldEnum: {
    id_factura_maestro: 'id_factura_maestro',
    numero_factura: 'numero_factura',
    cliente_id: 'cliente_id',
    fecha_factura: 'fecha_factura',
    nit_cliente: 'nit_cliente',
    total: 'total',
    total_pagado: 'total_pagado',
    estado_factura: 'estado_factura',
    metodo_pago: 'metodo_pago'
  };

  export type Factura_MaestroScalarFieldEnum = (typeof Factura_MaestroScalarFieldEnum)[keyof typeof Factura_MaestroScalarFieldEnum]


  export const Factura_DetalleScalarFieldEnum: {
    id_factura_detalle: 'id_factura_detalle',
    factura_maestro_id: 'factura_maestro_id',
    producto_id: 'producto_id',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario',
    total_producto: 'total_producto'
  };

  export type Factura_DetalleScalarFieldEnum = (typeof Factura_DetalleScalarFieldEnum)[keyof typeof Factura_DetalleScalarFieldEnum]


  export const InventarioScalarFieldEnum: {
    id_inventario: 'id_inventario',
    producto_id: 'producto_id',
    cantidad: 'cantidad',
    fecha_movimiento: 'fecha_movimiento',
    tipo_movimiento: 'tipo_movimiento'
  };

  export type InventarioScalarFieldEnum = (typeof InventarioScalarFieldEnum)[keyof typeof InventarioScalarFieldEnum]


  export const SucursalScalarFieldEnum: {
    id_sucursal: 'id_sucursal',
    nombre_sucursal: 'nombre_sucursal',
    direccion: 'direccion',
    telefono: 'telefono'
  };

  export type SucursalScalarFieldEnum = (typeof SucursalScalarFieldEnum)[keyof typeof SucursalScalarFieldEnum]


  export const VentaScalarFieldEnum: {
    id_venta: 'id_venta',
    sucursal_id: 'sucursal_id',
    total_venta: 'total_venta',
    fecha_venta: 'fecha_venta',
    numero_facturas: 'numero_facturas'
  };

  export type VentaScalarFieldEnum = (typeof VentaScalarFieldEnum)[keyof typeof VentaScalarFieldEnum]


  export const Venta_Factura_MaestroScalarFieldEnum: {
    id_venta_factura: 'id_venta_factura',
    venta_id: 'venta_id',
    factura_maestro_id: 'factura_maestro_id'
  };

  export type Venta_Factura_MaestroScalarFieldEnum = (typeof Venta_Factura_MaestroScalarFieldEnum)[keyof typeof Venta_Factura_MaestroScalarFieldEnum]


  export const DescuentoScalarFieldEnum: {
    id_descuento: 'id_descuento',
    nombre_descuento: 'nombre_descuento',
    porcentaje: 'porcentaje',
    monto_fijo: 'monto_fijo',
    fecha_inicio: 'fecha_inicio',
    fecha_fin: 'fecha_fin'
  };

  export type DescuentoScalarFieldEnum = (typeof DescuentoScalarFieldEnum)[keyof typeof DescuentoScalarFieldEnum]


  export const Producto_DescuentoScalarFieldEnum: {
    id_producto_descuento: 'id_producto_descuento',
    producto_id: 'producto_id',
    descuento_id: 'descuento_id',
    cantidad_aplicada: 'cantidad_aplicada'
  };

  export type Producto_DescuentoScalarFieldEnum = (typeof Producto_DescuentoScalarFieldEnum)[keyof typeof Producto_DescuentoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type MarcaWhereInput = {
    AND?: MarcaWhereInput | MarcaWhereInput[]
    OR?: MarcaWhereInput[]
    NOT?: MarcaWhereInput | MarcaWhereInput[]
    id_marca?: IntFilter<"Marca"> | number
    nombre_marca?: StringFilter<"Marca"> | string
    pais_origen?: StringNullableFilter<"Marca"> | string | null
    productos?: ProductoListRelationFilter
  }

  export type MarcaOrderByWithRelationInput = {
    id_marca?: SortOrder
    nombre_marca?: SortOrder
    pais_origen?: SortOrderInput | SortOrder
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type MarcaWhereUniqueInput = Prisma.AtLeast<{
    id_marca?: number
    AND?: MarcaWhereInput | MarcaWhereInput[]
    OR?: MarcaWhereInput[]
    NOT?: MarcaWhereInput | MarcaWhereInput[]
    nombre_marca?: StringFilter<"Marca"> | string
    pais_origen?: StringNullableFilter<"Marca"> | string | null
    productos?: ProductoListRelationFilter
  }, "id_marca">

  export type MarcaOrderByWithAggregationInput = {
    id_marca?: SortOrder
    nombre_marca?: SortOrder
    pais_origen?: SortOrderInput | SortOrder
    _count?: MarcaCountOrderByAggregateInput
    _avg?: MarcaAvgOrderByAggregateInput
    _max?: MarcaMaxOrderByAggregateInput
    _min?: MarcaMinOrderByAggregateInput
    _sum?: MarcaSumOrderByAggregateInput
  }

  export type MarcaScalarWhereWithAggregatesInput = {
    AND?: MarcaScalarWhereWithAggregatesInput | MarcaScalarWhereWithAggregatesInput[]
    OR?: MarcaScalarWhereWithAggregatesInput[]
    NOT?: MarcaScalarWhereWithAggregatesInput | MarcaScalarWhereWithAggregatesInput[]
    id_marca?: IntWithAggregatesFilter<"Marca"> | number
    nombre_marca?: StringWithAggregatesFilter<"Marca"> | string
    pais_origen?: StringNullableWithAggregatesFilter<"Marca"> | string | null
  }

  export type Categoria_ProductoWhereInput = {
    AND?: Categoria_ProductoWhereInput | Categoria_ProductoWhereInput[]
    OR?: Categoria_ProductoWhereInput[]
    NOT?: Categoria_ProductoWhereInput | Categoria_ProductoWhereInput[]
    id_categoria?: IntFilter<"Categoria_Producto"> | number
    nombre_categoria?: StringFilter<"Categoria_Producto"> | string
    productos?: ProductoListRelationFilter
  }

  export type Categoria_ProductoOrderByWithRelationInput = {
    id_categoria?: SortOrder
    nombre_categoria?: SortOrder
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type Categoria_ProductoWhereUniqueInput = Prisma.AtLeast<{
    id_categoria?: number
    AND?: Categoria_ProductoWhereInput | Categoria_ProductoWhereInput[]
    OR?: Categoria_ProductoWhereInput[]
    NOT?: Categoria_ProductoWhereInput | Categoria_ProductoWhereInput[]
    nombre_categoria?: StringFilter<"Categoria_Producto"> | string
    productos?: ProductoListRelationFilter
  }, "id_categoria">

  export type Categoria_ProductoOrderByWithAggregationInput = {
    id_categoria?: SortOrder
    nombre_categoria?: SortOrder
    _count?: Categoria_ProductoCountOrderByAggregateInput
    _avg?: Categoria_ProductoAvgOrderByAggregateInput
    _max?: Categoria_ProductoMaxOrderByAggregateInput
    _min?: Categoria_ProductoMinOrderByAggregateInput
    _sum?: Categoria_ProductoSumOrderByAggregateInput
  }

  export type Categoria_ProductoScalarWhereWithAggregatesInput = {
    AND?: Categoria_ProductoScalarWhereWithAggregatesInput | Categoria_ProductoScalarWhereWithAggregatesInput[]
    OR?: Categoria_ProductoScalarWhereWithAggregatesInput[]
    NOT?: Categoria_ProductoScalarWhereWithAggregatesInput | Categoria_ProductoScalarWhereWithAggregatesInput[]
    id_categoria?: IntWithAggregatesFilter<"Categoria_Producto"> | number
    nombre_categoria?: StringWithAggregatesFilter<"Categoria_Producto"> | string
  }

  export type ProveedorWhereInput = {
    AND?: ProveedorWhereInput | ProveedorWhereInput[]
    OR?: ProveedorWhereInput[]
    NOT?: ProveedorWhereInput | ProveedorWhereInput[]
    id_proveedor?: IntFilter<"Proveedor"> | number
    nombre?: StringFilter<"Proveedor"> | string
    direccion?: StringNullableFilter<"Proveedor"> | string | null
    telefono?: StringNullableFilter<"Proveedor"> | string | null
    email?: StringFilter<"Proveedor"> | string
    productos?: ProductoListRelationFilter
  }

  export type ProveedorOrderByWithRelationInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
    productos?: ProductoOrderByRelationAggregateInput
  }

  export type ProveedorWhereUniqueInput = Prisma.AtLeast<{
    id_proveedor?: number
    email?: string
    AND?: ProveedorWhereInput | ProveedorWhereInput[]
    OR?: ProveedorWhereInput[]
    NOT?: ProveedorWhereInput | ProveedorWhereInput[]
    nombre?: StringFilter<"Proveedor"> | string
    direccion?: StringNullableFilter<"Proveedor"> | string | null
    telefono?: StringNullableFilter<"Proveedor"> | string | null
    productos?: ProductoListRelationFilter
  }, "id_proveedor" | "email">

  export type ProveedorOrderByWithAggregationInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
    _count?: ProveedorCountOrderByAggregateInput
    _avg?: ProveedorAvgOrderByAggregateInput
    _max?: ProveedorMaxOrderByAggregateInput
    _min?: ProveedorMinOrderByAggregateInput
    _sum?: ProveedorSumOrderByAggregateInput
  }

  export type ProveedorScalarWhereWithAggregatesInput = {
    AND?: ProveedorScalarWhereWithAggregatesInput | ProveedorScalarWhereWithAggregatesInput[]
    OR?: ProveedorScalarWhereWithAggregatesInput[]
    NOT?: ProveedorScalarWhereWithAggregatesInput | ProveedorScalarWhereWithAggregatesInput[]
    id_proveedor?: IntWithAggregatesFilter<"Proveedor"> | number
    nombre?: StringWithAggregatesFilter<"Proveedor"> | string
    direccion?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Proveedor"> | string | null
    email?: StringWithAggregatesFilter<"Proveedor"> | string
  }

  export type ProductoWhereInput = {
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFilter<"Producto"> | number
    categoria_id?: IntFilter<"Producto"> | number
    proveedor_id?: IntFilter<"Producto"> | number
    marca_id?: IntFilter<"Producto"> | number
    categoria?: XOR<Categoria_ProductoScalarRelationFilter, Categoria_ProductoWhereInput>
    proveedor?: XOR<ProveedorScalarRelationFilter, ProveedorWhereInput>
    marca?: XOR<MarcaScalarRelationFilter, MarcaWhereInput>
    detallesFactura?: Factura_DetalleListRelationFilter
    inventarios?: InventarioListRelationFilter
    descuentos?: Producto_DescuentoListRelationFilter
  }

  export type ProductoOrderByWithRelationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
    categoria?: Categoria_ProductoOrderByWithRelationInput
    proveedor?: ProveedorOrderByWithRelationInput
    marca?: MarcaOrderByWithRelationInput
    detallesFactura?: Factura_DetalleOrderByRelationAggregateInput
    inventarios?: InventarioOrderByRelationAggregateInput
    descuentos?: Producto_DescuentoOrderByRelationAggregateInput
  }

  export type ProductoWhereUniqueInput = Prisma.AtLeast<{
    id_producto?: number
    AND?: ProductoWhereInput | ProductoWhereInput[]
    OR?: ProductoWhereInput[]
    NOT?: ProductoWhereInput | ProductoWhereInput[]
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFilter<"Producto"> | number
    categoria_id?: IntFilter<"Producto"> | number
    proveedor_id?: IntFilter<"Producto"> | number
    marca_id?: IntFilter<"Producto"> | number
    categoria?: XOR<Categoria_ProductoScalarRelationFilter, Categoria_ProductoWhereInput>
    proveedor?: XOR<ProveedorScalarRelationFilter, ProveedorWhereInput>
    marca?: XOR<MarcaScalarRelationFilter, MarcaWhereInput>
    detallesFactura?: Factura_DetalleListRelationFilter
    inventarios?: InventarioListRelationFilter
    descuentos?: Producto_DescuentoListRelationFilter
  }, "id_producto">

  export type ProductoOrderByWithAggregationInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
    _count?: ProductoCountOrderByAggregateInput
    _avg?: ProductoAvgOrderByAggregateInput
    _max?: ProductoMaxOrderByAggregateInput
    _min?: ProductoMinOrderByAggregateInput
    _sum?: ProductoSumOrderByAggregateInput
  }

  export type ProductoScalarWhereWithAggregatesInput = {
    AND?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    OR?: ProductoScalarWhereWithAggregatesInput[]
    NOT?: ProductoScalarWhereWithAggregatesInput | ProductoScalarWhereWithAggregatesInput[]
    id_producto?: IntWithAggregatesFilter<"Producto"> | number
    nombre?: StringWithAggregatesFilter<"Producto"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Producto"> | string | null
    precio?: DecimalWithAggregatesFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntWithAggregatesFilter<"Producto"> | number
    categoria_id?: IntWithAggregatesFilter<"Producto"> | number
    proveedor_id?: IntWithAggregatesFilter<"Producto"> | number
    marca_id?: IntWithAggregatesFilter<"Producto"> | number
  }

  export type ClienteWhereInput = {
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    id_cliente?: IntFilter<"Cliente"> | number
    nombre?: StringFilter<"Cliente"> | string
    direccion?: StringNullableFilter<"Cliente"> | string | null
    telefono?: StringNullableFilter<"Cliente"> | string | null
    email?: StringFilter<"Cliente"> | string
    fecha_registro?: DateTimeFilter<"Cliente"> | Date | string
    facturas?: Factura_MaestroListRelationFilter
  }

  export type ClienteOrderByWithRelationInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
    fecha_registro?: SortOrder
    facturas?: Factura_MaestroOrderByRelationAggregateInput
  }

  export type ClienteWhereUniqueInput = Prisma.AtLeast<{
    id_cliente?: number
    email?: string
    AND?: ClienteWhereInput | ClienteWhereInput[]
    OR?: ClienteWhereInput[]
    NOT?: ClienteWhereInput | ClienteWhereInput[]
    nombre?: StringFilter<"Cliente"> | string
    direccion?: StringNullableFilter<"Cliente"> | string | null
    telefono?: StringNullableFilter<"Cliente"> | string | null
    fecha_registro?: DateTimeFilter<"Cliente"> | Date | string
    facturas?: Factura_MaestroListRelationFilter
  }, "id_cliente" | "email">

  export type ClienteOrderByWithAggregationInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
    fecha_registro?: SortOrder
    _count?: ClienteCountOrderByAggregateInput
    _avg?: ClienteAvgOrderByAggregateInput
    _max?: ClienteMaxOrderByAggregateInput
    _min?: ClienteMinOrderByAggregateInput
    _sum?: ClienteSumOrderByAggregateInput
  }

  export type ClienteScalarWhereWithAggregatesInput = {
    AND?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    OR?: ClienteScalarWhereWithAggregatesInput[]
    NOT?: ClienteScalarWhereWithAggregatesInput | ClienteScalarWhereWithAggregatesInput[]
    id_cliente?: IntWithAggregatesFilter<"Cliente"> | number
    nombre?: StringWithAggregatesFilter<"Cliente"> | string
    direccion?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Cliente"> | string | null
    email?: StringWithAggregatesFilter<"Cliente"> | string
    fecha_registro?: DateTimeWithAggregatesFilter<"Cliente"> | Date | string
  }

  export type VendedorWhereInput = {
    AND?: VendedorWhereInput | VendedorWhereInput[]
    OR?: VendedorWhereInput[]
    NOT?: VendedorWhereInput | VendedorWhereInput[]
    id_vendedor?: IntFilter<"Vendedor"> | number
    nombre?: StringFilter<"Vendedor"> | string
    telefono?: StringNullableFilter<"Vendedor"> | string | null
    email?: StringFilter<"Vendedor"> | string
  }

  export type VendedorOrderByWithRelationInput = {
    id_vendedor?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
  }

  export type VendedorWhereUniqueInput = Prisma.AtLeast<{
    id_vendedor?: number
    email?: string
    AND?: VendedorWhereInput | VendedorWhereInput[]
    OR?: VendedorWhereInput[]
    NOT?: VendedorWhereInput | VendedorWhereInput[]
    nombre?: StringFilter<"Vendedor"> | string
    telefono?: StringNullableFilter<"Vendedor"> | string | null
  }, "id_vendedor" | "email">

  export type VendedorOrderByWithAggregationInput = {
    id_vendedor?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrder
    _count?: VendedorCountOrderByAggregateInput
    _avg?: VendedorAvgOrderByAggregateInput
    _max?: VendedorMaxOrderByAggregateInput
    _min?: VendedorMinOrderByAggregateInput
    _sum?: VendedorSumOrderByAggregateInput
  }

  export type VendedorScalarWhereWithAggregatesInput = {
    AND?: VendedorScalarWhereWithAggregatesInput | VendedorScalarWhereWithAggregatesInput[]
    OR?: VendedorScalarWhereWithAggregatesInput[]
    NOT?: VendedorScalarWhereWithAggregatesInput | VendedorScalarWhereWithAggregatesInput[]
    id_vendedor?: IntWithAggregatesFilter<"Vendedor"> | number
    nombre?: StringWithAggregatesFilter<"Vendedor"> | string
    telefono?: StringNullableWithAggregatesFilter<"Vendedor"> | string | null
    email?: StringWithAggregatesFilter<"Vendedor"> | string
  }

  export type Factura_MaestroWhereInput = {
    AND?: Factura_MaestroWhereInput | Factura_MaestroWhereInput[]
    OR?: Factura_MaestroWhereInput[]
    NOT?: Factura_MaestroWhereInput | Factura_MaestroWhereInput[]
    id_factura_maestro?: IntFilter<"Factura_Maestro"> | number
    numero_factura?: StringFilter<"Factura_Maestro"> | string
    cliente_id?: IntFilter<"Factura_Maestro"> | number
    fecha_factura?: DateTimeFilter<"Factura_Maestro"> | Date | string
    nit_cliente?: StringFilter<"Factura_Maestro"> | string
    total?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFilter<"Factura_Maestro"> | string
    metodo_pago?: StringNullableFilter<"Factura_Maestro"> | string | null
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    detalles?: Factura_DetalleListRelationFilter
    ventas?: Venta_Factura_MaestroListRelationFilter
  }

  export type Factura_MaestroOrderByWithRelationInput = {
    id_factura_maestro?: SortOrder
    numero_factura?: SortOrder
    cliente_id?: SortOrder
    fecha_factura?: SortOrder
    nit_cliente?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
    estado_factura?: SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    cliente?: ClienteOrderByWithRelationInput
    detalles?: Factura_DetalleOrderByRelationAggregateInput
    ventas?: Venta_Factura_MaestroOrderByRelationAggregateInput
  }

  export type Factura_MaestroWhereUniqueInput = Prisma.AtLeast<{
    id_factura_maestro?: number
    AND?: Factura_MaestroWhereInput | Factura_MaestroWhereInput[]
    OR?: Factura_MaestroWhereInput[]
    NOT?: Factura_MaestroWhereInput | Factura_MaestroWhereInput[]
    numero_factura?: StringFilter<"Factura_Maestro"> | string
    cliente_id?: IntFilter<"Factura_Maestro"> | number
    fecha_factura?: DateTimeFilter<"Factura_Maestro"> | Date | string
    nit_cliente?: StringFilter<"Factura_Maestro"> | string
    total?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFilter<"Factura_Maestro"> | string
    metodo_pago?: StringNullableFilter<"Factura_Maestro"> | string | null
    cliente?: XOR<ClienteScalarRelationFilter, ClienteWhereInput>
    detalles?: Factura_DetalleListRelationFilter
    ventas?: Venta_Factura_MaestroListRelationFilter
  }, "id_factura_maestro">

  export type Factura_MaestroOrderByWithAggregationInput = {
    id_factura_maestro?: SortOrder
    numero_factura?: SortOrder
    cliente_id?: SortOrder
    fecha_factura?: SortOrder
    nit_cliente?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
    estado_factura?: SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    _count?: Factura_MaestroCountOrderByAggregateInput
    _avg?: Factura_MaestroAvgOrderByAggregateInput
    _max?: Factura_MaestroMaxOrderByAggregateInput
    _min?: Factura_MaestroMinOrderByAggregateInput
    _sum?: Factura_MaestroSumOrderByAggregateInput
  }

  export type Factura_MaestroScalarWhereWithAggregatesInput = {
    AND?: Factura_MaestroScalarWhereWithAggregatesInput | Factura_MaestroScalarWhereWithAggregatesInput[]
    OR?: Factura_MaestroScalarWhereWithAggregatesInput[]
    NOT?: Factura_MaestroScalarWhereWithAggregatesInput | Factura_MaestroScalarWhereWithAggregatesInput[]
    id_factura_maestro?: IntWithAggregatesFilter<"Factura_Maestro"> | number
    numero_factura?: StringWithAggregatesFilter<"Factura_Maestro"> | string
    cliente_id?: IntWithAggregatesFilter<"Factura_Maestro"> | number
    fecha_factura?: DateTimeWithAggregatesFilter<"Factura_Maestro"> | Date | string
    nit_cliente?: StringWithAggregatesFilter<"Factura_Maestro"> | string
    total?: DecimalWithAggregatesFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalWithAggregatesFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    estado_factura?: StringWithAggregatesFilter<"Factura_Maestro"> | string
    metodo_pago?: StringNullableWithAggregatesFilter<"Factura_Maestro"> | string | null
  }

  export type Factura_DetalleWhereInput = {
    AND?: Factura_DetalleWhereInput | Factura_DetalleWhereInput[]
    OR?: Factura_DetalleWhereInput[]
    NOT?: Factura_DetalleWhereInput | Factura_DetalleWhereInput[]
    id_factura_detalle?: IntFilter<"Factura_Detalle"> | number
    factura_maestro_id?: IntFilter<"Factura_Detalle"> | number
    producto_id?: IntFilter<"Factura_Detalle"> | number
    cantidad?: IntFilter<"Factura_Detalle"> | number
    precio_unitario?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    factura_maestro?: XOR<Factura_MaestroScalarRelationFilter, Factura_MaestroWhereInput>
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type Factura_DetalleOrderByWithRelationInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
    factura_maestro?: Factura_MaestroOrderByWithRelationInput
    producto?: ProductoOrderByWithRelationInput
  }

  export type Factura_DetalleWhereUniqueInput = Prisma.AtLeast<{
    id_factura_detalle?: number
    AND?: Factura_DetalleWhereInput | Factura_DetalleWhereInput[]
    OR?: Factura_DetalleWhereInput[]
    NOT?: Factura_DetalleWhereInput | Factura_DetalleWhereInput[]
    factura_maestro_id?: IntFilter<"Factura_Detalle"> | number
    producto_id?: IntFilter<"Factura_Detalle"> | number
    cantidad?: IntFilter<"Factura_Detalle"> | number
    precio_unitario?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    factura_maestro?: XOR<Factura_MaestroScalarRelationFilter, Factura_MaestroWhereInput>
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_factura_detalle">

  export type Factura_DetalleOrderByWithAggregationInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
    _count?: Factura_DetalleCountOrderByAggregateInput
    _avg?: Factura_DetalleAvgOrderByAggregateInput
    _max?: Factura_DetalleMaxOrderByAggregateInput
    _min?: Factura_DetalleMinOrderByAggregateInput
    _sum?: Factura_DetalleSumOrderByAggregateInput
  }

  export type Factura_DetalleScalarWhereWithAggregatesInput = {
    AND?: Factura_DetalleScalarWhereWithAggregatesInput | Factura_DetalleScalarWhereWithAggregatesInput[]
    OR?: Factura_DetalleScalarWhereWithAggregatesInput[]
    NOT?: Factura_DetalleScalarWhereWithAggregatesInput | Factura_DetalleScalarWhereWithAggregatesInput[]
    id_factura_detalle?: IntWithAggregatesFilter<"Factura_Detalle"> | number
    factura_maestro_id?: IntWithAggregatesFilter<"Factura_Detalle"> | number
    producto_id?: IntWithAggregatesFilter<"Factura_Detalle"> | number
    cantidad?: IntWithAggregatesFilter<"Factura_Detalle"> | number
    precio_unitario?: DecimalWithAggregatesFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalWithAggregatesFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
  }

  export type InventarioWhereInput = {
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    id_inventario?: IntFilter<"Inventario"> | number
    producto_id?: IntFilter<"Inventario"> | number
    cantidad?: IntFilter<"Inventario"> | number
    fecha_movimiento?: DateTimeFilter<"Inventario"> | Date | string
    tipo_movimiento?: StringFilter<"Inventario"> | string
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }

  export type InventarioOrderByWithRelationInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    fecha_movimiento?: SortOrder
    tipo_movimiento?: SortOrder
    producto?: ProductoOrderByWithRelationInput
  }

  export type InventarioWhereUniqueInput = Prisma.AtLeast<{
    id_inventario?: number
    AND?: InventarioWhereInput | InventarioWhereInput[]
    OR?: InventarioWhereInput[]
    NOT?: InventarioWhereInput | InventarioWhereInput[]
    producto_id?: IntFilter<"Inventario"> | number
    cantidad?: IntFilter<"Inventario"> | number
    fecha_movimiento?: DateTimeFilter<"Inventario"> | Date | string
    tipo_movimiento?: StringFilter<"Inventario"> | string
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
  }, "id_inventario">

  export type InventarioOrderByWithAggregationInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    fecha_movimiento?: SortOrder
    tipo_movimiento?: SortOrder
    _count?: InventarioCountOrderByAggregateInput
    _avg?: InventarioAvgOrderByAggregateInput
    _max?: InventarioMaxOrderByAggregateInput
    _min?: InventarioMinOrderByAggregateInput
    _sum?: InventarioSumOrderByAggregateInput
  }

  export type InventarioScalarWhereWithAggregatesInput = {
    AND?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    OR?: InventarioScalarWhereWithAggregatesInput[]
    NOT?: InventarioScalarWhereWithAggregatesInput | InventarioScalarWhereWithAggregatesInput[]
    id_inventario?: IntWithAggregatesFilter<"Inventario"> | number
    producto_id?: IntWithAggregatesFilter<"Inventario"> | number
    cantidad?: IntWithAggregatesFilter<"Inventario"> | number
    fecha_movimiento?: DateTimeWithAggregatesFilter<"Inventario"> | Date | string
    tipo_movimiento?: StringWithAggregatesFilter<"Inventario"> | string
  }

  export type SucursalWhereInput = {
    AND?: SucursalWhereInput | SucursalWhereInput[]
    OR?: SucursalWhereInput[]
    NOT?: SucursalWhereInput | SucursalWhereInput[]
    id_sucursal?: IntFilter<"Sucursal"> | number
    nombre_sucursal?: StringFilter<"Sucursal"> | string
    direccion?: StringNullableFilter<"Sucursal"> | string | null
    telefono?: StringNullableFilter<"Sucursal"> | string | null
    ventas?: VentaListRelationFilter
  }

  export type SucursalOrderByWithRelationInput = {
    id_sucursal?: SortOrder
    nombre_sucursal?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    ventas?: VentaOrderByRelationAggregateInput
  }

  export type SucursalWhereUniqueInput = Prisma.AtLeast<{
    id_sucursal?: number
    AND?: SucursalWhereInput | SucursalWhereInput[]
    OR?: SucursalWhereInput[]
    NOT?: SucursalWhereInput | SucursalWhereInput[]
    nombre_sucursal?: StringFilter<"Sucursal"> | string
    direccion?: StringNullableFilter<"Sucursal"> | string | null
    telefono?: StringNullableFilter<"Sucursal"> | string | null
    ventas?: VentaListRelationFilter
  }, "id_sucursal">

  export type SucursalOrderByWithAggregationInput = {
    id_sucursal?: SortOrder
    nombre_sucursal?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    _count?: SucursalCountOrderByAggregateInput
    _avg?: SucursalAvgOrderByAggregateInput
    _max?: SucursalMaxOrderByAggregateInput
    _min?: SucursalMinOrderByAggregateInput
    _sum?: SucursalSumOrderByAggregateInput
  }

  export type SucursalScalarWhereWithAggregatesInput = {
    AND?: SucursalScalarWhereWithAggregatesInput | SucursalScalarWhereWithAggregatesInput[]
    OR?: SucursalScalarWhereWithAggregatesInput[]
    NOT?: SucursalScalarWhereWithAggregatesInput | SucursalScalarWhereWithAggregatesInput[]
    id_sucursal?: IntWithAggregatesFilter<"Sucursal"> | number
    nombre_sucursal?: StringWithAggregatesFilter<"Sucursal"> | string
    direccion?: StringNullableWithAggregatesFilter<"Sucursal"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Sucursal"> | string | null
  }

  export type VentaWhereInput = {
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    id_venta?: IntFilter<"Venta"> | number
    sucursal_id?: IntFilter<"Venta"> | number
    total_venta?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    numero_facturas?: IntFilter<"Venta"> | number
    sucursal?: XOR<SucursalScalarRelationFilter, SucursalWhereInput>
    facturas?: Venta_Factura_MaestroListRelationFilter
  }

  export type VentaOrderByWithRelationInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    fecha_venta?: SortOrder
    numero_facturas?: SortOrder
    sucursal?: SucursalOrderByWithRelationInput
    facturas?: Venta_Factura_MaestroOrderByRelationAggregateInput
  }

  export type VentaWhereUniqueInput = Prisma.AtLeast<{
    id_venta?: number
    AND?: VentaWhereInput | VentaWhereInput[]
    OR?: VentaWhereInput[]
    NOT?: VentaWhereInput | VentaWhereInput[]
    sucursal_id?: IntFilter<"Venta"> | number
    total_venta?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    numero_facturas?: IntFilter<"Venta"> | number
    sucursal?: XOR<SucursalScalarRelationFilter, SucursalWhereInput>
    facturas?: Venta_Factura_MaestroListRelationFilter
  }, "id_venta">

  export type VentaOrderByWithAggregationInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    fecha_venta?: SortOrder
    numero_facturas?: SortOrder
    _count?: VentaCountOrderByAggregateInput
    _avg?: VentaAvgOrderByAggregateInput
    _max?: VentaMaxOrderByAggregateInput
    _min?: VentaMinOrderByAggregateInput
    _sum?: VentaSumOrderByAggregateInput
  }

  export type VentaScalarWhereWithAggregatesInput = {
    AND?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    OR?: VentaScalarWhereWithAggregatesInput[]
    NOT?: VentaScalarWhereWithAggregatesInput | VentaScalarWhereWithAggregatesInput[]
    id_venta?: IntWithAggregatesFilter<"Venta"> | number
    sucursal_id?: IntWithAggregatesFilter<"Venta"> | number
    total_venta?: DecimalWithAggregatesFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeWithAggregatesFilter<"Venta"> | Date | string
    numero_facturas?: IntWithAggregatesFilter<"Venta"> | number
  }

  export type Venta_Factura_MaestroWhereInput = {
    AND?: Venta_Factura_MaestroWhereInput | Venta_Factura_MaestroWhereInput[]
    OR?: Venta_Factura_MaestroWhereInput[]
    NOT?: Venta_Factura_MaestroWhereInput | Venta_Factura_MaestroWhereInput[]
    id_venta_factura?: IntFilter<"Venta_Factura_Maestro"> | number
    venta_id?: IntFilter<"Venta_Factura_Maestro"> | number
    factura_maestro_id?: IntFilter<"Venta_Factura_Maestro"> | number
    venta?: XOR<VentaScalarRelationFilter, VentaWhereInput>
    factura_maestro?: XOR<Factura_MaestroScalarRelationFilter, Factura_MaestroWhereInput>
  }

  export type Venta_Factura_MaestroOrderByWithRelationInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
    venta?: VentaOrderByWithRelationInput
    factura_maestro?: Factura_MaestroOrderByWithRelationInput
  }

  export type Venta_Factura_MaestroWhereUniqueInput = Prisma.AtLeast<{
    id_venta_factura?: number
    AND?: Venta_Factura_MaestroWhereInput | Venta_Factura_MaestroWhereInput[]
    OR?: Venta_Factura_MaestroWhereInput[]
    NOT?: Venta_Factura_MaestroWhereInput | Venta_Factura_MaestroWhereInput[]
    venta_id?: IntFilter<"Venta_Factura_Maestro"> | number
    factura_maestro_id?: IntFilter<"Venta_Factura_Maestro"> | number
    venta?: XOR<VentaScalarRelationFilter, VentaWhereInput>
    factura_maestro?: XOR<Factura_MaestroScalarRelationFilter, Factura_MaestroWhereInput>
  }, "id_venta_factura">

  export type Venta_Factura_MaestroOrderByWithAggregationInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
    _count?: Venta_Factura_MaestroCountOrderByAggregateInput
    _avg?: Venta_Factura_MaestroAvgOrderByAggregateInput
    _max?: Venta_Factura_MaestroMaxOrderByAggregateInput
    _min?: Venta_Factura_MaestroMinOrderByAggregateInput
    _sum?: Venta_Factura_MaestroSumOrderByAggregateInput
  }

  export type Venta_Factura_MaestroScalarWhereWithAggregatesInput = {
    AND?: Venta_Factura_MaestroScalarWhereWithAggregatesInput | Venta_Factura_MaestroScalarWhereWithAggregatesInput[]
    OR?: Venta_Factura_MaestroScalarWhereWithAggregatesInput[]
    NOT?: Venta_Factura_MaestroScalarWhereWithAggregatesInput | Venta_Factura_MaestroScalarWhereWithAggregatesInput[]
    id_venta_factura?: IntWithAggregatesFilter<"Venta_Factura_Maestro"> | number
    venta_id?: IntWithAggregatesFilter<"Venta_Factura_Maestro"> | number
    factura_maestro_id?: IntWithAggregatesFilter<"Venta_Factura_Maestro"> | number
  }

  export type DescuentoWhereInput = {
    AND?: DescuentoWhereInput | DescuentoWhereInput[]
    OR?: DescuentoWhereInput[]
    NOT?: DescuentoWhereInput | DescuentoWhereInput[]
    id_descuento?: IntFilter<"Descuento"> | number
    nombre_descuento?: StringFilter<"Descuento"> | string
    porcentaje?: DecimalNullableFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: DecimalNullableFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFilter<"Descuento"> | Date | string
    fecha_fin?: DateTimeFilter<"Descuento"> | Date | string
    productos?: Producto_DescuentoListRelationFilter
  }

  export type DescuentoOrderByWithRelationInput = {
    id_descuento?: SortOrder
    nombre_descuento?: SortOrder
    porcentaje?: SortOrderInput | SortOrder
    monto_fijo?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    productos?: Producto_DescuentoOrderByRelationAggregateInput
  }

  export type DescuentoWhereUniqueInput = Prisma.AtLeast<{
    id_descuento?: number
    AND?: DescuentoWhereInput | DescuentoWhereInput[]
    OR?: DescuentoWhereInput[]
    NOT?: DescuentoWhereInput | DescuentoWhereInput[]
    nombre_descuento?: StringFilter<"Descuento"> | string
    porcentaje?: DecimalNullableFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: DecimalNullableFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFilter<"Descuento"> | Date | string
    fecha_fin?: DateTimeFilter<"Descuento"> | Date | string
    productos?: Producto_DescuentoListRelationFilter
  }, "id_descuento">

  export type DescuentoOrderByWithAggregationInput = {
    id_descuento?: SortOrder
    nombre_descuento?: SortOrder
    porcentaje?: SortOrderInput | SortOrder
    monto_fijo?: SortOrderInput | SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
    _count?: DescuentoCountOrderByAggregateInput
    _avg?: DescuentoAvgOrderByAggregateInput
    _max?: DescuentoMaxOrderByAggregateInput
    _min?: DescuentoMinOrderByAggregateInput
    _sum?: DescuentoSumOrderByAggregateInput
  }

  export type DescuentoScalarWhereWithAggregatesInput = {
    AND?: DescuentoScalarWhereWithAggregatesInput | DescuentoScalarWhereWithAggregatesInput[]
    OR?: DescuentoScalarWhereWithAggregatesInput[]
    NOT?: DescuentoScalarWhereWithAggregatesInput | DescuentoScalarWhereWithAggregatesInput[]
    id_descuento?: IntWithAggregatesFilter<"Descuento"> | number
    nombre_descuento?: StringWithAggregatesFilter<"Descuento"> | string
    porcentaje?: DecimalNullableWithAggregatesFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: DecimalNullableWithAggregatesFilter<"Descuento"> | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeWithAggregatesFilter<"Descuento"> | Date | string
    fecha_fin?: DateTimeWithAggregatesFilter<"Descuento"> | Date | string
  }

  export type Producto_DescuentoWhereInput = {
    AND?: Producto_DescuentoWhereInput | Producto_DescuentoWhereInput[]
    OR?: Producto_DescuentoWhereInput[]
    NOT?: Producto_DescuentoWhereInput | Producto_DescuentoWhereInput[]
    id_producto_descuento?: IntFilter<"Producto_Descuento"> | number
    producto_id?: IntFilter<"Producto_Descuento"> | number
    descuento_id?: IntFilter<"Producto_Descuento"> | number
    cantidad_aplicada?: DecimalFilter<"Producto_Descuento"> | Decimal | DecimalJsLike | number | string
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    descuento?: XOR<DescuentoScalarRelationFilter, DescuentoWhereInput>
  }

  export type Producto_DescuentoOrderByWithRelationInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
    producto?: ProductoOrderByWithRelationInput
    descuento?: DescuentoOrderByWithRelationInput
  }

  export type Producto_DescuentoWhereUniqueInput = Prisma.AtLeast<{
    id_producto_descuento?: number
    AND?: Producto_DescuentoWhereInput | Producto_DescuentoWhereInput[]
    OR?: Producto_DescuentoWhereInput[]
    NOT?: Producto_DescuentoWhereInput | Producto_DescuentoWhereInput[]
    producto_id?: IntFilter<"Producto_Descuento"> | number
    descuento_id?: IntFilter<"Producto_Descuento"> | number
    cantidad_aplicada?: DecimalFilter<"Producto_Descuento"> | Decimal | DecimalJsLike | number | string
    producto?: XOR<ProductoScalarRelationFilter, ProductoWhereInput>
    descuento?: XOR<DescuentoScalarRelationFilter, DescuentoWhereInput>
  }, "id_producto_descuento">

  export type Producto_DescuentoOrderByWithAggregationInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
    _count?: Producto_DescuentoCountOrderByAggregateInput
    _avg?: Producto_DescuentoAvgOrderByAggregateInput
    _max?: Producto_DescuentoMaxOrderByAggregateInput
    _min?: Producto_DescuentoMinOrderByAggregateInput
    _sum?: Producto_DescuentoSumOrderByAggregateInput
  }

  export type Producto_DescuentoScalarWhereWithAggregatesInput = {
    AND?: Producto_DescuentoScalarWhereWithAggregatesInput | Producto_DescuentoScalarWhereWithAggregatesInput[]
    OR?: Producto_DescuentoScalarWhereWithAggregatesInput[]
    NOT?: Producto_DescuentoScalarWhereWithAggregatesInput | Producto_DescuentoScalarWhereWithAggregatesInput[]
    id_producto_descuento?: IntWithAggregatesFilter<"Producto_Descuento"> | number
    producto_id?: IntWithAggregatesFilter<"Producto_Descuento"> | number
    descuento_id?: IntWithAggregatesFilter<"Producto_Descuento"> | number
    cantidad_aplicada?: DecimalWithAggregatesFilter<"Producto_Descuento"> | Decimal | DecimalJsLike | number | string
  }

  export type MarcaCreateInput = {
    nombre_marca: string
    pais_origen?: string | null
    productos?: ProductoCreateNestedManyWithoutMarcaInput
  }

  export type MarcaUncheckedCreateInput = {
    id_marca?: number
    nombre_marca: string
    pais_origen?: string | null
    productos?: ProductoUncheckedCreateNestedManyWithoutMarcaInput
  }

  export type MarcaUpdateInput = {
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: ProductoUpdateManyWithoutMarcaNestedInput
  }

  export type MarcaUncheckedUpdateInput = {
    id_marca?: IntFieldUpdateOperationsInput | number
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: ProductoUncheckedUpdateManyWithoutMarcaNestedInput
  }

  export type MarcaCreateManyInput = {
    id_marca?: number
    nombre_marca: string
    pais_origen?: string | null
  }

  export type MarcaUpdateManyMutationInput = {
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MarcaUncheckedUpdateManyInput = {
    id_marca?: IntFieldUpdateOperationsInput | number
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Categoria_ProductoCreateInput = {
    nombre_categoria: string
    productos?: ProductoCreateNestedManyWithoutCategoriaInput
  }

  export type Categoria_ProductoUncheckedCreateInput = {
    id_categoria?: number
    nombre_categoria: string
    productos?: ProductoUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type Categoria_ProductoUpdateInput = {
    nombre_categoria?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUpdateManyWithoutCategoriaNestedInput
  }

  export type Categoria_ProductoUncheckedUpdateInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre_categoria?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type Categoria_ProductoCreateManyInput = {
    id_categoria?: number
    nombre_categoria: string
  }

  export type Categoria_ProductoUpdateManyMutationInput = {
    nombre_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type Categoria_ProductoUncheckedUpdateManyInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type ProveedorCreateInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    productos?: ProductoCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUncheckedCreateInput = {
    id_proveedor?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    productos?: ProductoUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type ProveedorUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorUncheckedUpdateInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    productos?: ProductoUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type ProveedorCreateManyInput = {
    id_proveedor?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
  }

  export type ProveedorUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ProveedorUncheckedUpdateManyInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ProductoCreateInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateManyInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
  }

  export type ProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoUncheckedUpdateManyInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
  }

  export type ClienteCreateInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    fecha_registro: Date | string
    facturas?: Factura_MaestroCreateNestedManyWithoutClienteInput
  }

  export type ClienteUncheckedCreateInput = {
    id_cliente?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    fecha_registro: Date | string
    facturas?: Factura_MaestroUncheckedCreateNestedManyWithoutClienteInput
  }

  export type ClienteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: Factura_MaestroUpdateManyWithoutClienteNestedInput
  }

  export type ClienteUncheckedUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
    facturas?: Factura_MaestroUncheckedUpdateManyWithoutClienteNestedInput
  }

  export type ClienteCreateManyInput = {
    id_cliente?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    fecha_registro: Date | string
  }

  export type ClienteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateManyInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VendedorCreateInput = {
    nombre: string
    telefono?: string | null
    email: string
  }

  export type VendedorUncheckedCreateInput = {
    id_vendedor?: number
    nombre: string
    telefono?: string | null
    email: string
  }

  export type VendedorUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type VendedorUncheckedUpdateInput = {
    id_vendedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type VendedorCreateManyInput = {
    id_vendedor?: number
    nombre: string
    telefono?: string | null
    email: string
  }

  export type VendedorUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type VendedorUncheckedUpdateManyInput = {
    id_vendedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type Factura_MaestroCreateInput = {
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    cliente: ClienteCreateNestedOneWithoutFacturasInput
    detalles?: Factura_DetalleCreateNestedManyWithoutFactura_maestroInput
    ventas?: Venta_Factura_MaestroCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroUncheckedCreateInput = {
    id_factura_maestro?: number
    numero_factura: string
    cliente_id: number
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    detalles?: Factura_DetalleUncheckedCreateNestedManyWithoutFactura_maestroInput
    ventas?: Venta_Factura_MaestroUncheckedCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroUpdateInput = {
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneRequiredWithoutFacturasNestedInput
    detalles?: Factura_DetalleUpdateManyWithoutFactura_maestroNestedInput
    ventas?: Venta_Factura_MaestroUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroUncheckedUpdateInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    cliente_id?: IntFieldUpdateOperationsInput | number
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroNestedInput
    ventas?: Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroCreateManyInput = {
    id_factura_maestro?: number
    numero_factura: string
    cliente_id: number
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
  }

  export type Factura_MaestroUpdateManyMutationInput = {
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Factura_MaestroUncheckedUpdateManyInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    cliente_id?: IntFieldUpdateOperationsInput | number
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Factura_DetalleCreateInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
    factura_maestro: Factura_MaestroCreateNestedOneWithoutDetallesInput
    producto: ProductoCreateNestedOneWithoutDetallesFacturaInput
  }

  export type Factura_DetalleUncheckedCreateInput = {
    id_factura_detalle?: number
    factura_maestro_id: number
    producto_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    factura_maestro?: Factura_MaestroUpdateOneRequiredWithoutDetallesNestedInput
    producto?: ProductoUpdateOneRequiredWithoutDetallesFacturaNestedInput
  }

  export type Factura_DetalleUncheckedUpdateInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleCreateManyInput = {
    id_factura_detalle?: number
    factura_maestro_id: number
    producto_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUncheckedUpdateManyInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InventarioCreateInput = {
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
    producto: ProductoCreateNestedOneWithoutInventariosInput
  }

  export type InventarioUncheckedCreateInput = {
    id_inventario?: number
    producto_id: number
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
  }

  export type InventarioUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
    producto?: ProductoUpdateOneRequiredWithoutInventariosNestedInput
  }

  export type InventarioUncheckedUpdateInput = {
    id_inventario?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type InventarioCreateManyInput = {
    id_inventario?: number
    producto_id: number
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
  }

  export type InventarioUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type InventarioUncheckedUpdateManyInput = {
    id_inventario?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type SucursalCreateInput = {
    nombre_sucursal: string
    direccion?: string | null
    telefono?: string | null
    ventas?: VentaCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUncheckedCreateInput = {
    id_sucursal?: number
    nombre_sucursal: string
    direccion?: string | null
    telefono?: string | null
    ventas?: VentaUncheckedCreateNestedManyWithoutSucursalInput
  }

  export type SucursalUpdateInput = {
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    ventas?: VentaUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalUncheckedUpdateInput = {
    id_sucursal?: IntFieldUpdateOperationsInput | number
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    ventas?: VentaUncheckedUpdateManyWithoutSucursalNestedInput
  }

  export type SucursalCreateManyInput = {
    id_sucursal?: number
    nombre_sucursal: string
    direccion?: string | null
    telefono?: string | null
  }

  export type SucursalUpdateManyMutationInput = {
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SucursalUncheckedUpdateManyInput = {
    id_sucursal?: IntFieldUpdateOperationsInput | number
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VentaCreateInput = {
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
    sucursal: SucursalCreateNestedOneWithoutVentasInput
    facturas?: Venta_Factura_MaestroCreateNestedManyWithoutVentaInput
  }

  export type VentaUncheckedCreateInput = {
    id_venta?: number
    sucursal_id: number
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
    facturas?: Venta_Factura_MaestroUncheckedCreateNestedManyWithoutVentaInput
  }

  export type VentaUpdateInput = {
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
    sucursal?: SucursalUpdateOneRequiredWithoutVentasNestedInput
    facturas?: Venta_Factura_MaestroUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    sucursal_id?: IntFieldUpdateOperationsInput | number
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
    facturas?: Venta_Factura_MaestroUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type VentaCreateManyInput = {
    id_venta?: number
    sucursal_id: number
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
  }

  export type VentaUpdateManyMutationInput = {
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
  }

  export type VentaUncheckedUpdateManyInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    sucursal_id?: IntFieldUpdateOperationsInput | number
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
  }

  export type Venta_Factura_MaestroCreateInput = {
    venta: VentaCreateNestedOneWithoutFacturasInput
    factura_maestro: Factura_MaestroCreateNestedOneWithoutVentasInput
  }

  export type Venta_Factura_MaestroUncheckedCreateInput = {
    id_venta_factura?: number
    venta_id: number
    factura_maestro_id: number
  }

  export type Venta_Factura_MaestroUpdateInput = {
    venta?: VentaUpdateOneRequiredWithoutFacturasNestedInput
    factura_maestro?: Factura_MaestroUpdateOneRequiredWithoutVentasNestedInput
  }

  export type Venta_Factura_MaestroUncheckedUpdateInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    venta_id?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
  }

  export type Venta_Factura_MaestroCreateManyInput = {
    id_venta_factura?: number
    venta_id: number
    factura_maestro_id: number
  }

  export type Venta_Factura_MaestroUpdateManyMutationInput = {

  }

  export type Venta_Factura_MaestroUncheckedUpdateManyInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    venta_id?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
  }

  export type DescuentoCreateInput = {
    nombre_descuento: string
    porcentaje?: Decimal | DecimalJsLike | number | string | null
    monto_fijo?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    productos?: Producto_DescuentoCreateNestedManyWithoutDescuentoInput
  }

  export type DescuentoUncheckedCreateInput = {
    id_descuento?: number
    nombre_descuento: string
    porcentaje?: Decimal | DecimalJsLike | number | string | null
    monto_fijo?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
    productos?: Producto_DescuentoUncheckedCreateNestedManyWithoutDescuentoInput
  }

  export type DescuentoUpdateInput = {
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: Producto_DescuentoUpdateManyWithoutDescuentoNestedInput
  }

  export type DescuentoUncheckedUpdateInput = {
    id_descuento?: IntFieldUpdateOperationsInput | number
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
    productos?: Producto_DescuentoUncheckedUpdateManyWithoutDescuentoNestedInput
  }

  export type DescuentoCreateManyInput = {
    id_descuento?: number
    nombre_descuento: string
    porcentaje?: Decimal | DecimalJsLike | number | string | null
    monto_fijo?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
  }

  export type DescuentoUpdateManyMutationInput = {
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DescuentoUncheckedUpdateManyInput = {
    id_descuento?: IntFieldUpdateOperationsInput | number
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Producto_DescuentoCreateInput = {
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
    producto: ProductoCreateNestedOneWithoutDescuentosInput
    descuento: DescuentoCreateNestedOneWithoutProductosInput
  }

  export type Producto_DescuentoUncheckedCreateInput = {
    id_producto_descuento?: number
    producto_id: number
    descuento_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUpdateInput = {
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: ProductoUpdateOneRequiredWithoutDescuentosNestedInput
    descuento?: DescuentoUpdateOneRequiredWithoutProductosNestedInput
  }

  export type Producto_DescuentoUncheckedUpdateInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    descuento_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoCreateManyInput = {
    id_producto_descuento?: number
    producto_id: number
    descuento_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUpdateManyMutationInput = {
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUncheckedUpdateManyInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    descuento_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ProductoListRelationFilter = {
    every?: ProductoWhereInput
    some?: ProductoWhereInput
    none?: ProductoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MarcaCountOrderByAggregateInput = {
    id_marca?: SortOrder
    nombre_marca?: SortOrder
    pais_origen?: SortOrder
  }

  export type MarcaAvgOrderByAggregateInput = {
    id_marca?: SortOrder
  }

  export type MarcaMaxOrderByAggregateInput = {
    id_marca?: SortOrder
    nombre_marca?: SortOrder
    pais_origen?: SortOrder
  }

  export type MarcaMinOrderByAggregateInput = {
    id_marca?: SortOrder
    nombre_marca?: SortOrder
    pais_origen?: SortOrder
  }

  export type MarcaSumOrderByAggregateInput = {
    id_marca?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Categoria_ProductoCountOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre_categoria?: SortOrder
  }

  export type Categoria_ProductoAvgOrderByAggregateInput = {
    id_categoria?: SortOrder
  }

  export type Categoria_ProductoMaxOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre_categoria?: SortOrder
  }

  export type Categoria_ProductoMinOrderByAggregateInput = {
    id_categoria?: SortOrder
    nombre_categoria?: SortOrder
  }

  export type Categoria_ProductoSumOrderByAggregateInput = {
    id_categoria?: SortOrder
  }

  export type ProveedorCountOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type ProveedorAvgOrderByAggregateInput = {
    id_proveedor?: SortOrder
  }

  export type ProveedorMaxOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type ProveedorMinOrderByAggregateInput = {
    id_proveedor?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type ProveedorSumOrderByAggregateInput = {
    id_proveedor?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Categoria_ProductoScalarRelationFilter = {
    is?: Categoria_ProductoWhereInput
    isNot?: Categoria_ProductoWhereInput
  }

  export type ProveedorScalarRelationFilter = {
    is?: ProveedorWhereInput
    isNot?: ProveedorWhereInput
  }

  export type MarcaScalarRelationFilter = {
    is?: MarcaWhereInput
    isNot?: MarcaWhereInput
  }

  export type Factura_DetalleListRelationFilter = {
    every?: Factura_DetalleWhereInput
    some?: Factura_DetalleWhereInput
    none?: Factura_DetalleWhereInput
  }

  export type InventarioListRelationFilter = {
    every?: InventarioWhereInput
    some?: InventarioWhereInput
    none?: InventarioWhereInput
  }

  export type Producto_DescuentoListRelationFilter = {
    every?: Producto_DescuentoWhereInput
    some?: Producto_DescuentoWhereInput
    none?: Producto_DescuentoWhereInput
  }

  export type Factura_DetalleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Producto_DescuentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductoCountOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
  }

  export type ProductoAvgOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
  }

  export type ProductoMaxOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
  }

  export type ProductoMinOrderByAggregateInput = {
    id_producto?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
  }

  export type ProductoSumOrderByAggregateInput = {
    id_producto?: SortOrder
    precio?: SortOrder
    stock_disponible?: SortOrder
    categoria_id?: SortOrder
    proveedor_id?: SortOrder
    marca_id?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Factura_MaestroListRelationFilter = {
    every?: Factura_MaestroWhereInput
    some?: Factura_MaestroWhereInput
    none?: Factura_MaestroWhereInput
  }

  export type Factura_MaestroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClienteCountOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    fecha_registro?: SortOrder
  }

  export type ClienteAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type ClienteMaxOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    fecha_registro?: SortOrder
  }

  export type ClienteMinOrderByAggregateInput = {
    id_cliente?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    fecha_registro?: SortOrder
  }

  export type ClienteSumOrderByAggregateInput = {
    id_cliente?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type VendedorCountOrderByAggregateInput = {
    id_vendedor?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type VendedorAvgOrderByAggregateInput = {
    id_vendedor?: SortOrder
  }

  export type VendedorMaxOrderByAggregateInput = {
    id_vendedor?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type VendedorMinOrderByAggregateInput = {
    id_vendedor?: SortOrder
    nombre?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
  }

  export type VendedorSumOrderByAggregateInput = {
    id_vendedor?: SortOrder
  }

  export type ClienteScalarRelationFilter = {
    is?: ClienteWhereInput
    isNot?: ClienteWhereInput
  }

  export type Venta_Factura_MaestroListRelationFilter = {
    every?: Venta_Factura_MaestroWhereInput
    some?: Venta_Factura_MaestroWhereInput
    none?: Venta_Factura_MaestroWhereInput
  }

  export type Venta_Factura_MaestroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Factura_MaestroCountOrderByAggregateInput = {
    id_factura_maestro?: SortOrder
    numero_factura?: SortOrder
    cliente_id?: SortOrder
    fecha_factura?: SortOrder
    nit_cliente?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
    estado_factura?: SortOrder
    metodo_pago?: SortOrder
  }

  export type Factura_MaestroAvgOrderByAggregateInput = {
    id_factura_maestro?: SortOrder
    cliente_id?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
  }

  export type Factura_MaestroMaxOrderByAggregateInput = {
    id_factura_maestro?: SortOrder
    numero_factura?: SortOrder
    cliente_id?: SortOrder
    fecha_factura?: SortOrder
    nit_cliente?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
    estado_factura?: SortOrder
    metodo_pago?: SortOrder
  }

  export type Factura_MaestroMinOrderByAggregateInput = {
    id_factura_maestro?: SortOrder
    numero_factura?: SortOrder
    cliente_id?: SortOrder
    fecha_factura?: SortOrder
    nit_cliente?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
    estado_factura?: SortOrder
    metodo_pago?: SortOrder
  }

  export type Factura_MaestroSumOrderByAggregateInput = {
    id_factura_maestro?: SortOrder
    cliente_id?: SortOrder
    total?: SortOrder
    total_pagado?: SortOrder
  }

  export type Factura_MaestroScalarRelationFilter = {
    is?: Factura_MaestroWhereInput
    isNot?: Factura_MaestroWhereInput
  }

  export type ProductoScalarRelationFilter = {
    is?: ProductoWhereInput
    isNot?: ProductoWhereInput
  }

  export type Factura_DetalleCountOrderByAggregateInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
  }

  export type Factura_DetalleAvgOrderByAggregateInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
  }

  export type Factura_DetalleMaxOrderByAggregateInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
  }

  export type Factura_DetalleMinOrderByAggregateInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
  }

  export type Factura_DetalleSumOrderByAggregateInput = {
    id_factura_detalle?: SortOrder
    factura_maestro_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
    total_producto?: SortOrder
  }

  export type InventarioCountOrderByAggregateInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    fecha_movimiento?: SortOrder
    tipo_movimiento?: SortOrder
  }

  export type InventarioAvgOrderByAggregateInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type InventarioMaxOrderByAggregateInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    fecha_movimiento?: SortOrder
    tipo_movimiento?: SortOrder
  }

  export type InventarioMinOrderByAggregateInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    fecha_movimiento?: SortOrder
    tipo_movimiento?: SortOrder
  }

  export type InventarioSumOrderByAggregateInput = {
    id_inventario?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type VentaListRelationFilter = {
    every?: VentaWhereInput
    some?: VentaWhereInput
    none?: VentaWhereInput
  }

  export type VentaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SucursalCountOrderByAggregateInput = {
    id_sucursal?: SortOrder
    nombre_sucursal?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type SucursalAvgOrderByAggregateInput = {
    id_sucursal?: SortOrder
  }

  export type SucursalMaxOrderByAggregateInput = {
    id_sucursal?: SortOrder
    nombre_sucursal?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type SucursalMinOrderByAggregateInput = {
    id_sucursal?: SortOrder
    nombre_sucursal?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type SucursalSumOrderByAggregateInput = {
    id_sucursal?: SortOrder
  }

  export type SucursalScalarRelationFilter = {
    is?: SucursalWhereInput
    isNot?: SucursalWhereInput
  }

  export type VentaCountOrderByAggregateInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    fecha_venta?: SortOrder
    numero_facturas?: SortOrder
  }

  export type VentaAvgOrderByAggregateInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    numero_facturas?: SortOrder
  }

  export type VentaMaxOrderByAggregateInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    fecha_venta?: SortOrder
    numero_facturas?: SortOrder
  }

  export type VentaMinOrderByAggregateInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    fecha_venta?: SortOrder
    numero_facturas?: SortOrder
  }

  export type VentaSumOrderByAggregateInput = {
    id_venta?: SortOrder
    sucursal_id?: SortOrder
    total_venta?: SortOrder
    numero_facturas?: SortOrder
  }

  export type VentaScalarRelationFilter = {
    is?: VentaWhereInput
    isNot?: VentaWhereInput
  }

  export type Venta_Factura_MaestroCountOrderByAggregateInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
  }

  export type Venta_Factura_MaestroAvgOrderByAggregateInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
  }

  export type Venta_Factura_MaestroMaxOrderByAggregateInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
  }

  export type Venta_Factura_MaestroMinOrderByAggregateInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
  }

  export type Venta_Factura_MaestroSumOrderByAggregateInput = {
    id_venta_factura?: SortOrder
    venta_id?: SortOrder
    factura_maestro_id?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DescuentoCountOrderByAggregateInput = {
    id_descuento?: SortOrder
    nombre_descuento?: SortOrder
    porcentaje?: SortOrder
    monto_fijo?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
  }

  export type DescuentoAvgOrderByAggregateInput = {
    id_descuento?: SortOrder
    porcentaje?: SortOrder
    monto_fijo?: SortOrder
  }

  export type DescuentoMaxOrderByAggregateInput = {
    id_descuento?: SortOrder
    nombre_descuento?: SortOrder
    porcentaje?: SortOrder
    monto_fijo?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
  }

  export type DescuentoMinOrderByAggregateInput = {
    id_descuento?: SortOrder
    nombre_descuento?: SortOrder
    porcentaje?: SortOrder
    monto_fijo?: SortOrder
    fecha_inicio?: SortOrder
    fecha_fin?: SortOrder
  }

  export type DescuentoSumOrderByAggregateInput = {
    id_descuento?: SortOrder
    porcentaje?: SortOrder
    monto_fijo?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DescuentoScalarRelationFilter = {
    is?: DescuentoWhereInput
    isNot?: DescuentoWhereInput
  }

  export type Producto_DescuentoCountOrderByAggregateInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
  }

  export type Producto_DescuentoAvgOrderByAggregateInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
  }

  export type Producto_DescuentoMaxOrderByAggregateInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
  }

  export type Producto_DescuentoMinOrderByAggregateInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
  }

  export type Producto_DescuentoSumOrderByAggregateInput = {
    id_producto_descuento?: SortOrder
    producto_id?: SortOrder
    descuento_id?: SortOrder
    cantidad_aplicada?: SortOrder
  }

  export type ProductoCreateNestedManyWithoutMarcaInput = {
    create?: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput> | ProductoCreateWithoutMarcaInput[] | ProductoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMarcaInput | ProductoCreateOrConnectWithoutMarcaInput[]
    createMany?: ProductoCreateManyMarcaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutMarcaInput = {
    create?: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput> | ProductoCreateWithoutMarcaInput[] | ProductoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMarcaInput | ProductoCreateOrConnectWithoutMarcaInput[]
    createMany?: ProductoCreateManyMarcaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ProductoUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput> | ProductoCreateWithoutMarcaInput[] | ProductoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMarcaInput | ProductoCreateOrConnectWithoutMarcaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutMarcaInput | ProductoUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: ProductoCreateManyMarcaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutMarcaInput | ProductoUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutMarcaInput | ProductoUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductoUncheckedUpdateManyWithoutMarcaNestedInput = {
    create?: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput> | ProductoCreateWithoutMarcaInput[] | ProductoUncheckedCreateWithoutMarcaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutMarcaInput | ProductoCreateOrConnectWithoutMarcaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutMarcaInput | ProductoUpsertWithWhereUniqueWithoutMarcaInput[]
    createMany?: ProductoCreateManyMarcaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutMarcaInput | ProductoUpdateWithWhereUniqueWithoutMarcaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutMarcaInput | ProductoUpdateManyWithWhereWithoutMarcaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaInput | ProductoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaInput | ProductoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaInput | ProductoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput> | ProductoCreateWithoutCategoriaInput[] | ProductoUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutCategoriaInput | ProductoCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutCategoriaInput | ProductoUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductoCreateManyCategoriaInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutCategoriaInput | ProductoUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutCategoriaInput | ProductoUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
  }

  export type ProductoUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutProveedorInput | ProductoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutProveedorInput | ProductoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutProveedorInput | ProductoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type ProductoUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput> | ProductoCreateWithoutProveedorInput[] | ProductoUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: ProductoCreateOrConnectWithoutProveedorInput | ProductoCreateOrConnectWithoutProveedorInput[]
    upsert?: ProductoUpsertWithWhereUniqueWithoutProveedorInput | ProductoUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: ProductoCreateManyProveedorInputEnvelope
    set?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    disconnect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    delete?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    connect?: ProductoWhereUniqueInput | ProductoWhereUniqueInput[]
    update?: ProductoUpdateWithWhereUniqueWithoutProveedorInput | ProductoUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: ProductoUpdateManyWithWhereWithoutProveedorInput | ProductoUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
  }

  export type Categoria_ProductoCreateNestedOneWithoutProductosInput = {
    create?: XOR<Categoria_ProductoCreateWithoutProductosInput, Categoria_ProductoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: Categoria_ProductoCreateOrConnectWithoutProductosInput
    connect?: Categoria_ProductoWhereUniqueInput
  }

  export type ProveedorCreateNestedOneWithoutProductosInput = {
    create?: XOR<ProveedorCreateWithoutProductosInput, ProveedorUncheckedCreateWithoutProductosInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutProductosInput
    connect?: ProveedorWhereUniqueInput
  }

  export type MarcaCreateNestedOneWithoutProductosInput = {
    create?: XOR<MarcaCreateWithoutProductosInput, MarcaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: MarcaCreateOrConnectWithoutProductosInput
    connect?: MarcaWhereUniqueInput
  }

  export type Factura_DetalleCreateNestedManyWithoutProductoInput = {
    create?: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput> | Factura_DetalleCreateWithoutProductoInput[] | Factura_DetalleUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutProductoInput | Factura_DetalleCreateOrConnectWithoutProductoInput[]
    createMany?: Factura_DetalleCreateManyProductoInputEnvelope
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
  }

  export type InventarioCreateNestedManyWithoutProductoInput = {
    create?: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput> | InventarioCreateWithoutProductoInput[] | InventarioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProductoInput | InventarioCreateOrConnectWithoutProductoInput[]
    createMany?: InventarioCreateManyProductoInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type Producto_DescuentoCreateNestedManyWithoutProductoInput = {
    create?: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput> | Producto_DescuentoCreateWithoutProductoInput[] | Producto_DescuentoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutProductoInput | Producto_DescuentoCreateOrConnectWithoutProductoInput[]
    createMany?: Producto_DescuentoCreateManyProductoInputEnvelope
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
  }

  export type Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput> | Factura_DetalleCreateWithoutProductoInput[] | Factura_DetalleUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutProductoInput | Factura_DetalleCreateOrConnectWithoutProductoInput[]
    createMany?: Factura_DetalleCreateManyProductoInputEnvelope
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
  }

  export type InventarioUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput> | InventarioCreateWithoutProductoInput[] | InventarioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProductoInput | InventarioCreateOrConnectWithoutProductoInput[]
    createMany?: InventarioCreateManyProductoInputEnvelope
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
  }

  export type Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput> | Producto_DescuentoCreateWithoutProductoInput[] | Producto_DescuentoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutProductoInput | Producto_DescuentoCreateOrConnectWithoutProductoInput[]
    createMany?: Producto_DescuentoCreateManyProductoInputEnvelope
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<Categoria_ProductoCreateWithoutProductosInput, Categoria_ProductoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: Categoria_ProductoCreateOrConnectWithoutProductosInput
    upsert?: Categoria_ProductoUpsertWithoutProductosInput
    connect?: Categoria_ProductoWhereUniqueInput
    update?: XOR<XOR<Categoria_ProductoUpdateToOneWithWhereWithoutProductosInput, Categoria_ProductoUpdateWithoutProductosInput>, Categoria_ProductoUncheckedUpdateWithoutProductosInput>
  }

  export type ProveedorUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<ProveedorCreateWithoutProductosInput, ProveedorUncheckedCreateWithoutProductosInput>
    connectOrCreate?: ProveedorCreateOrConnectWithoutProductosInput
    upsert?: ProveedorUpsertWithoutProductosInput
    connect?: ProveedorWhereUniqueInput
    update?: XOR<XOR<ProveedorUpdateToOneWithWhereWithoutProductosInput, ProveedorUpdateWithoutProductosInput>, ProveedorUncheckedUpdateWithoutProductosInput>
  }

  export type MarcaUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<MarcaCreateWithoutProductosInput, MarcaUncheckedCreateWithoutProductosInput>
    connectOrCreate?: MarcaCreateOrConnectWithoutProductosInput
    upsert?: MarcaUpsertWithoutProductosInput
    connect?: MarcaWhereUniqueInput
    update?: XOR<XOR<MarcaUpdateToOneWithWhereWithoutProductosInput, MarcaUpdateWithoutProductosInput>, MarcaUncheckedUpdateWithoutProductosInput>
  }

  export type Factura_DetalleUpdateManyWithoutProductoNestedInput = {
    create?: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput> | Factura_DetalleCreateWithoutProductoInput[] | Factura_DetalleUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutProductoInput | Factura_DetalleCreateOrConnectWithoutProductoInput[]
    upsert?: Factura_DetalleUpsertWithWhereUniqueWithoutProductoInput | Factura_DetalleUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: Factura_DetalleCreateManyProductoInputEnvelope
    set?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    disconnect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    delete?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    update?: Factura_DetalleUpdateWithWhereUniqueWithoutProductoInput | Factura_DetalleUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: Factura_DetalleUpdateManyWithWhereWithoutProductoInput | Factura_DetalleUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
  }

  export type InventarioUpdateManyWithoutProductoNestedInput = {
    create?: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput> | InventarioCreateWithoutProductoInput[] | InventarioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProductoInput | InventarioCreateOrConnectWithoutProductoInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutProductoInput | InventarioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: InventarioCreateManyProductoInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutProductoInput | InventarioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutProductoInput | InventarioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type Producto_DescuentoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput> | Producto_DescuentoCreateWithoutProductoInput[] | Producto_DescuentoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutProductoInput | Producto_DescuentoCreateOrConnectWithoutProductoInput[]
    upsert?: Producto_DescuentoUpsertWithWhereUniqueWithoutProductoInput | Producto_DescuentoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: Producto_DescuentoCreateManyProductoInputEnvelope
    set?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    disconnect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    delete?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    update?: Producto_DescuentoUpdateWithWhereUniqueWithoutProductoInput | Producto_DescuentoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: Producto_DescuentoUpdateManyWithWhereWithoutProductoInput | Producto_DescuentoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
  }

  export type Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput> | Factura_DetalleCreateWithoutProductoInput[] | Factura_DetalleUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutProductoInput | Factura_DetalleCreateOrConnectWithoutProductoInput[]
    upsert?: Factura_DetalleUpsertWithWhereUniqueWithoutProductoInput | Factura_DetalleUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: Factura_DetalleCreateManyProductoInputEnvelope
    set?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    disconnect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    delete?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    update?: Factura_DetalleUpdateWithWhereUniqueWithoutProductoInput | Factura_DetalleUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: Factura_DetalleUpdateManyWithWhereWithoutProductoInput | Factura_DetalleUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
  }

  export type InventarioUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput> | InventarioCreateWithoutProductoInput[] | InventarioUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: InventarioCreateOrConnectWithoutProductoInput | InventarioCreateOrConnectWithoutProductoInput[]
    upsert?: InventarioUpsertWithWhereUniqueWithoutProductoInput | InventarioUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: InventarioCreateManyProductoInputEnvelope
    set?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    disconnect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    delete?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    connect?: InventarioWhereUniqueInput | InventarioWhereUniqueInput[]
    update?: InventarioUpdateWithWhereUniqueWithoutProductoInput | InventarioUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: InventarioUpdateManyWithWhereWithoutProductoInput | InventarioUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
  }

  export type Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput> | Producto_DescuentoCreateWithoutProductoInput[] | Producto_DescuentoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutProductoInput | Producto_DescuentoCreateOrConnectWithoutProductoInput[]
    upsert?: Producto_DescuentoUpsertWithWhereUniqueWithoutProductoInput | Producto_DescuentoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: Producto_DescuentoCreateManyProductoInputEnvelope
    set?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    disconnect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    delete?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    update?: Producto_DescuentoUpdateWithWhereUniqueWithoutProductoInput | Producto_DescuentoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: Producto_DescuentoUpdateManyWithWhereWithoutProductoInput | Producto_DescuentoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
  }

  export type Factura_MaestroCreateNestedManyWithoutClienteInput = {
    create?: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput> | Factura_MaestroCreateWithoutClienteInput[] | Factura_MaestroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutClienteInput | Factura_MaestroCreateOrConnectWithoutClienteInput[]
    createMany?: Factura_MaestroCreateManyClienteInputEnvelope
    connect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
  }

  export type Factura_MaestroUncheckedCreateNestedManyWithoutClienteInput = {
    create?: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput> | Factura_MaestroCreateWithoutClienteInput[] | Factura_MaestroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutClienteInput | Factura_MaestroCreateOrConnectWithoutClienteInput[]
    createMany?: Factura_MaestroCreateManyClienteInputEnvelope
    connect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type Factura_MaestroUpdateManyWithoutClienteNestedInput = {
    create?: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput> | Factura_MaestroCreateWithoutClienteInput[] | Factura_MaestroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutClienteInput | Factura_MaestroCreateOrConnectWithoutClienteInput[]
    upsert?: Factura_MaestroUpsertWithWhereUniqueWithoutClienteInput | Factura_MaestroUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: Factura_MaestroCreateManyClienteInputEnvelope
    set?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    disconnect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    delete?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    connect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    update?: Factura_MaestroUpdateWithWhereUniqueWithoutClienteInput | Factura_MaestroUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: Factura_MaestroUpdateManyWithWhereWithoutClienteInput | Factura_MaestroUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: Factura_MaestroScalarWhereInput | Factura_MaestroScalarWhereInput[]
  }

  export type Factura_MaestroUncheckedUpdateManyWithoutClienteNestedInput = {
    create?: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput> | Factura_MaestroCreateWithoutClienteInput[] | Factura_MaestroUncheckedCreateWithoutClienteInput[]
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutClienteInput | Factura_MaestroCreateOrConnectWithoutClienteInput[]
    upsert?: Factura_MaestroUpsertWithWhereUniqueWithoutClienteInput | Factura_MaestroUpsertWithWhereUniqueWithoutClienteInput[]
    createMany?: Factura_MaestroCreateManyClienteInputEnvelope
    set?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    disconnect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    delete?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    connect?: Factura_MaestroWhereUniqueInput | Factura_MaestroWhereUniqueInput[]
    update?: Factura_MaestroUpdateWithWhereUniqueWithoutClienteInput | Factura_MaestroUpdateWithWhereUniqueWithoutClienteInput[]
    updateMany?: Factura_MaestroUpdateManyWithWhereWithoutClienteInput | Factura_MaestroUpdateManyWithWhereWithoutClienteInput[]
    deleteMany?: Factura_MaestroScalarWhereInput | Factura_MaestroScalarWhereInput[]
  }

  export type ClienteCreateNestedOneWithoutFacturasInput = {
    create?: XOR<ClienteCreateWithoutFacturasInput, ClienteUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutFacturasInput
    connect?: ClienteWhereUniqueInput
  }

  export type Factura_DetalleCreateNestedManyWithoutFactura_maestroInput = {
    create?: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput> | Factura_DetalleCreateWithoutFactura_maestroInput[] | Factura_DetalleUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutFactura_maestroInput | Factura_DetalleCreateOrConnectWithoutFactura_maestroInput[]
    createMany?: Factura_DetalleCreateManyFactura_maestroInputEnvelope
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
  }

  export type Venta_Factura_MaestroCreateNestedManyWithoutFactura_maestroInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput> | Venta_Factura_MaestroCreateWithoutFactura_maestroInput[] | Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput | Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput[]
    createMany?: Venta_Factura_MaestroCreateManyFactura_maestroInputEnvelope
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
  }

  export type Factura_DetalleUncheckedCreateNestedManyWithoutFactura_maestroInput = {
    create?: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput> | Factura_DetalleCreateWithoutFactura_maestroInput[] | Factura_DetalleUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutFactura_maestroInput | Factura_DetalleCreateOrConnectWithoutFactura_maestroInput[]
    createMany?: Factura_DetalleCreateManyFactura_maestroInputEnvelope
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
  }

  export type Venta_Factura_MaestroUncheckedCreateNestedManyWithoutFactura_maestroInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput> | Venta_Factura_MaestroCreateWithoutFactura_maestroInput[] | Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput | Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput[]
    createMany?: Venta_Factura_MaestroCreateManyFactura_maestroInputEnvelope
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
  }

  export type ClienteUpdateOneRequiredWithoutFacturasNestedInput = {
    create?: XOR<ClienteCreateWithoutFacturasInput, ClienteUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ClienteCreateOrConnectWithoutFacturasInput
    upsert?: ClienteUpsertWithoutFacturasInput
    connect?: ClienteWhereUniqueInput
    update?: XOR<XOR<ClienteUpdateToOneWithWhereWithoutFacturasInput, ClienteUpdateWithoutFacturasInput>, ClienteUncheckedUpdateWithoutFacturasInput>
  }

  export type Factura_DetalleUpdateManyWithoutFactura_maestroNestedInput = {
    create?: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput> | Factura_DetalleCreateWithoutFactura_maestroInput[] | Factura_DetalleUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutFactura_maestroInput | Factura_DetalleCreateOrConnectWithoutFactura_maestroInput[]
    upsert?: Factura_DetalleUpsertWithWhereUniqueWithoutFactura_maestroInput | Factura_DetalleUpsertWithWhereUniqueWithoutFactura_maestroInput[]
    createMany?: Factura_DetalleCreateManyFactura_maestroInputEnvelope
    set?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    disconnect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    delete?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    update?: Factura_DetalleUpdateWithWhereUniqueWithoutFactura_maestroInput | Factura_DetalleUpdateWithWhereUniqueWithoutFactura_maestroInput[]
    updateMany?: Factura_DetalleUpdateManyWithWhereWithoutFactura_maestroInput | Factura_DetalleUpdateManyWithWhereWithoutFactura_maestroInput[]
    deleteMany?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
  }

  export type Venta_Factura_MaestroUpdateManyWithoutFactura_maestroNestedInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput> | Venta_Factura_MaestroCreateWithoutFactura_maestroInput[] | Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput | Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput[]
    upsert?: Venta_Factura_MaestroUpsertWithWhereUniqueWithoutFactura_maestroInput | Venta_Factura_MaestroUpsertWithWhereUniqueWithoutFactura_maestroInput[]
    createMany?: Venta_Factura_MaestroCreateManyFactura_maestroInputEnvelope
    set?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    disconnect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    delete?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    update?: Venta_Factura_MaestroUpdateWithWhereUniqueWithoutFactura_maestroInput | Venta_Factura_MaestroUpdateWithWhereUniqueWithoutFactura_maestroInput[]
    updateMany?: Venta_Factura_MaestroUpdateManyWithWhereWithoutFactura_maestroInput | Venta_Factura_MaestroUpdateManyWithWhereWithoutFactura_maestroInput[]
    deleteMany?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
  }

  export type Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroNestedInput = {
    create?: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput> | Factura_DetalleCreateWithoutFactura_maestroInput[] | Factura_DetalleUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Factura_DetalleCreateOrConnectWithoutFactura_maestroInput | Factura_DetalleCreateOrConnectWithoutFactura_maestroInput[]
    upsert?: Factura_DetalleUpsertWithWhereUniqueWithoutFactura_maestroInput | Factura_DetalleUpsertWithWhereUniqueWithoutFactura_maestroInput[]
    createMany?: Factura_DetalleCreateManyFactura_maestroInputEnvelope
    set?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    disconnect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    delete?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    connect?: Factura_DetalleWhereUniqueInput | Factura_DetalleWhereUniqueInput[]
    update?: Factura_DetalleUpdateWithWhereUniqueWithoutFactura_maestroInput | Factura_DetalleUpdateWithWhereUniqueWithoutFactura_maestroInput[]
    updateMany?: Factura_DetalleUpdateManyWithWhereWithoutFactura_maestroInput | Factura_DetalleUpdateManyWithWhereWithoutFactura_maestroInput[]
    deleteMany?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
  }

  export type Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroNestedInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput> | Venta_Factura_MaestroCreateWithoutFactura_maestroInput[] | Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput | Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput[]
    upsert?: Venta_Factura_MaestroUpsertWithWhereUniqueWithoutFactura_maestroInput | Venta_Factura_MaestroUpsertWithWhereUniqueWithoutFactura_maestroInput[]
    createMany?: Venta_Factura_MaestroCreateManyFactura_maestroInputEnvelope
    set?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    disconnect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    delete?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    update?: Venta_Factura_MaestroUpdateWithWhereUniqueWithoutFactura_maestroInput | Venta_Factura_MaestroUpdateWithWhereUniqueWithoutFactura_maestroInput[]
    updateMany?: Venta_Factura_MaestroUpdateManyWithWhereWithoutFactura_maestroInput | Venta_Factura_MaestroUpdateManyWithWhereWithoutFactura_maestroInput[]
    deleteMany?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
  }

  export type Factura_MaestroCreateNestedOneWithoutDetallesInput = {
    create?: XOR<Factura_MaestroCreateWithoutDetallesInput, Factura_MaestroUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutDetallesInput
    connect?: Factura_MaestroWhereUniqueInput
  }

  export type ProductoCreateNestedOneWithoutDetallesFacturaInput = {
    create?: XOR<ProductoCreateWithoutDetallesFacturaInput, ProductoUncheckedCreateWithoutDetallesFacturaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetallesFacturaInput
    connect?: ProductoWhereUniqueInput
  }

  export type Factura_MaestroUpdateOneRequiredWithoutDetallesNestedInput = {
    create?: XOR<Factura_MaestroCreateWithoutDetallesInput, Factura_MaestroUncheckedCreateWithoutDetallesInput>
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutDetallesInput
    upsert?: Factura_MaestroUpsertWithoutDetallesInput
    connect?: Factura_MaestroWhereUniqueInput
    update?: XOR<XOR<Factura_MaestroUpdateToOneWithWhereWithoutDetallesInput, Factura_MaestroUpdateWithoutDetallesInput>, Factura_MaestroUncheckedUpdateWithoutDetallesInput>
  }

  export type ProductoUpdateOneRequiredWithoutDetallesFacturaNestedInput = {
    create?: XOR<ProductoCreateWithoutDetallesFacturaInput, ProductoUncheckedCreateWithoutDetallesFacturaInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDetallesFacturaInput
    upsert?: ProductoUpsertWithoutDetallesFacturaInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutDetallesFacturaInput, ProductoUpdateWithoutDetallesFacturaInput>, ProductoUncheckedUpdateWithoutDetallesFacturaInput>
  }

  export type ProductoCreateNestedOneWithoutInventariosInput = {
    create?: XOR<ProductoCreateWithoutInventariosInput, ProductoUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutInventariosInput
    connect?: ProductoWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutInventariosNestedInput = {
    create?: XOR<ProductoCreateWithoutInventariosInput, ProductoUncheckedCreateWithoutInventariosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutInventariosInput
    upsert?: ProductoUpsertWithoutInventariosInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutInventariosInput, ProductoUpdateWithoutInventariosInput>, ProductoUncheckedUpdateWithoutInventariosInput>
  }

  export type VentaCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type VentaUncheckedCreateNestedManyWithoutSucursalInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
  }

  export type VentaUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutSucursalInput | VentaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutSucursalInput | VentaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutSucursalInput | VentaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type VentaUncheckedUpdateManyWithoutSucursalNestedInput = {
    create?: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput> | VentaCreateWithoutSucursalInput[] | VentaUncheckedCreateWithoutSucursalInput[]
    connectOrCreate?: VentaCreateOrConnectWithoutSucursalInput | VentaCreateOrConnectWithoutSucursalInput[]
    upsert?: VentaUpsertWithWhereUniqueWithoutSucursalInput | VentaUpsertWithWhereUniqueWithoutSucursalInput[]
    createMany?: VentaCreateManySucursalInputEnvelope
    set?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    disconnect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    delete?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    connect?: VentaWhereUniqueInput | VentaWhereUniqueInput[]
    update?: VentaUpdateWithWhereUniqueWithoutSucursalInput | VentaUpdateWithWhereUniqueWithoutSucursalInput[]
    updateMany?: VentaUpdateManyWithWhereWithoutSucursalInput | VentaUpdateManyWithWhereWithoutSucursalInput[]
    deleteMany?: VentaScalarWhereInput | VentaScalarWhereInput[]
  }

  export type SucursalCreateNestedOneWithoutVentasInput = {
    create?: XOR<SucursalCreateWithoutVentasInput, SucursalUncheckedCreateWithoutVentasInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentasInput
    connect?: SucursalWhereUniqueInput
  }

  export type Venta_Factura_MaestroCreateNestedManyWithoutVentaInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput> | Venta_Factura_MaestroCreateWithoutVentaInput[] | Venta_Factura_MaestroUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutVentaInput | Venta_Factura_MaestroCreateOrConnectWithoutVentaInput[]
    createMany?: Venta_Factura_MaestroCreateManyVentaInputEnvelope
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
  }

  export type Venta_Factura_MaestroUncheckedCreateNestedManyWithoutVentaInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput> | Venta_Factura_MaestroCreateWithoutVentaInput[] | Venta_Factura_MaestroUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutVentaInput | Venta_Factura_MaestroCreateOrConnectWithoutVentaInput[]
    createMany?: Venta_Factura_MaestroCreateManyVentaInputEnvelope
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
  }

  export type SucursalUpdateOneRequiredWithoutVentasNestedInput = {
    create?: XOR<SucursalCreateWithoutVentasInput, SucursalUncheckedCreateWithoutVentasInput>
    connectOrCreate?: SucursalCreateOrConnectWithoutVentasInput
    upsert?: SucursalUpsertWithoutVentasInput
    connect?: SucursalWhereUniqueInput
    update?: XOR<XOR<SucursalUpdateToOneWithWhereWithoutVentasInput, SucursalUpdateWithoutVentasInput>, SucursalUncheckedUpdateWithoutVentasInput>
  }

  export type Venta_Factura_MaestroUpdateManyWithoutVentaNestedInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput> | Venta_Factura_MaestroCreateWithoutVentaInput[] | Venta_Factura_MaestroUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutVentaInput | Venta_Factura_MaestroCreateOrConnectWithoutVentaInput[]
    upsert?: Venta_Factura_MaestroUpsertWithWhereUniqueWithoutVentaInput | Venta_Factura_MaestroUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: Venta_Factura_MaestroCreateManyVentaInputEnvelope
    set?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    disconnect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    delete?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    update?: Venta_Factura_MaestroUpdateWithWhereUniqueWithoutVentaInput | Venta_Factura_MaestroUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: Venta_Factura_MaestroUpdateManyWithWhereWithoutVentaInput | Venta_Factura_MaestroUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
  }

  export type Venta_Factura_MaestroUncheckedUpdateManyWithoutVentaNestedInput = {
    create?: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput> | Venta_Factura_MaestroCreateWithoutVentaInput[] | Venta_Factura_MaestroUncheckedCreateWithoutVentaInput[]
    connectOrCreate?: Venta_Factura_MaestroCreateOrConnectWithoutVentaInput | Venta_Factura_MaestroCreateOrConnectWithoutVentaInput[]
    upsert?: Venta_Factura_MaestroUpsertWithWhereUniqueWithoutVentaInput | Venta_Factura_MaestroUpsertWithWhereUniqueWithoutVentaInput[]
    createMany?: Venta_Factura_MaestroCreateManyVentaInputEnvelope
    set?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    disconnect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    delete?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    connect?: Venta_Factura_MaestroWhereUniqueInput | Venta_Factura_MaestroWhereUniqueInput[]
    update?: Venta_Factura_MaestroUpdateWithWhereUniqueWithoutVentaInput | Venta_Factura_MaestroUpdateWithWhereUniqueWithoutVentaInput[]
    updateMany?: Venta_Factura_MaestroUpdateManyWithWhereWithoutVentaInput | Venta_Factura_MaestroUpdateManyWithWhereWithoutVentaInput[]
    deleteMany?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
  }

  export type VentaCreateNestedOneWithoutFacturasInput = {
    create?: XOR<VentaCreateWithoutFacturasInput, VentaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutFacturasInput
    connect?: VentaWhereUniqueInput
  }

  export type Factura_MaestroCreateNestedOneWithoutVentasInput = {
    create?: XOR<Factura_MaestroCreateWithoutVentasInput, Factura_MaestroUncheckedCreateWithoutVentasInput>
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutVentasInput
    connect?: Factura_MaestroWhereUniqueInput
  }

  export type VentaUpdateOneRequiredWithoutFacturasNestedInput = {
    create?: XOR<VentaCreateWithoutFacturasInput, VentaUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: VentaCreateOrConnectWithoutFacturasInput
    upsert?: VentaUpsertWithoutFacturasInput
    connect?: VentaWhereUniqueInput
    update?: XOR<XOR<VentaUpdateToOneWithWhereWithoutFacturasInput, VentaUpdateWithoutFacturasInput>, VentaUncheckedUpdateWithoutFacturasInput>
  }

  export type Factura_MaestroUpdateOneRequiredWithoutVentasNestedInput = {
    create?: XOR<Factura_MaestroCreateWithoutVentasInput, Factura_MaestroUncheckedCreateWithoutVentasInput>
    connectOrCreate?: Factura_MaestroCreateOrConnectWithoutVentasInput
    upsert?: Factura_MaestroUpsertWithoutVentasInput
    connect?: Factura_MaestroWhereUniqueInput
    update?: XOR<XOR<Factura_MaestroUpdateToOneWithWhereWithoutVentasInput, Factura_MaestroUpdateWithoutVentasInput>, Factura_MaestroUncheckedUpdateWithoutVentasInput>
  }

  export type Producto_DescuentoCreateNestedManyWithoutDescuentoInput = {
    create?: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput> | Producto_DescuentoCreateWithoutDescuentoInput[] | Producto_DescuentoUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutDescuentoInput | Producto_DescuentoCreateOrConnectWithoutDescuentoInput[]
    createMany?: Producto_DescuentoCreateManyDescuentoInputEnvelope
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
  }

  export type Producto_DescuentoUncheckedCreateNestedManyWithoutDescuentoInput = {
    create?: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput> | Producto_DescuentoCreateWithoutDescuentoInput[] | Producto_DescuentoUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutDescuentoInput | Producto_DescuentoCreateOrConnectWithoutDescuentoInput[]
    createMany?: Producto_DescuentoCreateManyDescuentoInputEnvelope
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUpdateManyWithoutDescuentoNestedInput = {
    create?: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput> | Producto_DescuentoCreateWithoutDescuentoInput[] | Producto_DescuentoUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutDescuentoInput | Producto_DescuentoCreateOrConnectWithoutDescuentoInput[]
    upsert?: Producto_DescuentoUpsertWithWhereUniqueWithoutDescuentoInput | Producto_DescuentoUpsertWithWhereUniqueWithoutDescuentoInput[]
    createMany?: Producto_DescuentoCreateManyDescuentoInputEnvelope
    set?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    disconnect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    delete?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    update?: Producto_DescuentoUpdateWithWhereUniqueWithoutDescuentoInput | Producto_DescuentoUpdateWithWhereUniqueWithoutDescuentoInput[]
    updateMany?: Producto_DescuentoUpdateManyWithWhereWithoutDescuentoInput | Producto_DescuentoUpdateManyWithWhereWithoutDescuentoInput[]
    deleteMany?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
  }

  export type Producto_DescuentoUncheckedUpdateManyWithoutDescuentoNestedInput = {
    create?: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput> | Producto_DescuentoCreateWithoutDescuentoInput[] | Producto_DescuentoUncheckedCreateWithoutDescuentoInput[]
    connectOrCreate?: Producto_DescuentoCreateOrConnectWithoutDescuentoInput | Producto_DescuentoCreateOrConnectWithoutDescuentoInput[]
    upsert?: Producto_DescuentoUpsertWithWhereUniqueWithoutDescuentoInput | Producto_DescuentoUpsertWithWhereUniqueWithoutDescuentoInput[]
    createMany?: Producto_DescuentoCreateManyDescuentoInputEnvelope
    set?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    disconnect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    delete?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    connect?: Producto_DescuentoWhereUniqueInput | Producto_DescuentoWhereUniqueInput[]
    update?: Producto_DescuentoUpdateWithWhereUniqueWithoutDescuentoInput | Producto_DescuentoUpdateWithWhereUniqueWithoutDescuentoInput[]
    updateMany?: Producto_DescuentoUpdateManyWithWhereWithoutDescuentoInput | Producto_DescuentoUpdateManyWithWhereWithoutDescuentoInput[]
    deleteMany?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
  }

  export type ProductoCreateNestedOneWithoutDescuentosInput = {
    create?: XOR<ProductoCreateWithoutDescuentosInput, ProductoUncheckedCreateWithoutDescuentosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDescuentosInput
    connect?: ProductoWhereUniqueInput
  }

  export type DescuentoCreateNestedOneWithoutProductosInput = {
    create?: XOR<DescuentoCreateWithoutProductosInput, DescuentoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: DescuentoCreateOrConnectWithoutProductosInput
    connect?: DescuentoWhereUniqueInput
  }

  export type ProductoUpdateOneRequiredWithoutDescuentosNestedInput = {
    create?: XOR<ProductoCreateWithoutDescuentosInput, ProductoUncheckedCreateWithoutDescuentosInput>
    connectOrCreate?: ProductoCreateOrConnectWithoutDescuentosInput
    upsert?: ProductoUpsertWithoutDescuentosInput
    connect?: ProductoWhereUniqueInput
    update?: XOR<XOR<ProductoUpdateToOneWithWhereWithoutDescuentosInput, ProductoUpdateWithoutDescuentosInput>, ProductoUncheckedUpdateWithoutDescuentosInput>
  }

  export type DescuentoUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<DescuentoCreateWithoutProductosInput, DescuentoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: DescuentoCreateOrConnectWithoutProductosInput
    upsert?: DescuentoUpsertWithoutProductosInput
    connect?: DescuentoWhereUniqueInput
    update?: XOR<XOR<DescuentoUpdateToOneWithWhereWithoutProductosInput, DescuentoUpdateWithoutProductosInput>, DescuentoUncheckedUpdateWithoutProductosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type ProductoCreateWithoutMarcaInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutMarcaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutMarcaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput>
  }

  export type ProductoCreateManyMarcaInputEnvelope = {
    data: ProductoCreateManyMarcaInput | ProductoCreateManyMarcaInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithWhereUniqueWithoutMarcaInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutMarcaInput, ProductoUncheckedUpdateWithoutMarcaInput>
    create: XOR<ProductoCreateWithoutMarcaInput, ProductoUncheckedCreateWithoutMarcaInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutMarcaInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutMarcaInput, ProductoUncheckedUpdateWithoutMarcaInput>
  }

  export type ProductoUpdateManyWithWhereWithoutMarcaInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutMarcaInput>
  }

  export type ProductoScalarWhereInput = {
    AND?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    OR?: ProductoScalarWhereInput[]
    NOT?: ProductoScalarWhereInput | ProductoScalarWhereInput[]
    id_producto?: IntFilter<"Producto"> | number
    nombre?: StringFilter<"Producto"> | string
    descripcion?: StringNullableFilter<"Producto"> | string | null
    precio?: DecimalFilter<"Producto"> | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFilter<"Producto"> | number
    categoria_id?: IntFilter<"Producto"> | number
    proveedor_id?: IntFilter<"Producto"> | number
    marca_id?: IntFilter<"Producto"> | number
  }

  export type ProductoCreateWithoutCategoriaInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutCategoriaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    proveedor_id: number
    marca_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductoCreateManyCategoriaInputEnvelope = {
    data: ProductoCreateManyCategoriaInput | ProductoCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutCategoriaInput, ProductoUncheckedUpdateWithoutCategoriaInput>
    create: XOR<ProductoCreateWithoutCategoriaInput, ProductoUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutCategoriaInput, ProductoUncheckedUpdateWithoutCategoriaInput>
  }

  export type ProductoUpdateManyWithWhereWithoutCategoriaInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type ProductoCreateWithoutProveedorInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutProveedorInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    marca_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput>
  }

  export type ProductoCreateManyProveedorInputEnvelope = {
    data: ProductoCreateManyProveedorInput | ProductoCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type ProductoUpsertWithWhereUniqueWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    update: XOR<ProductoUpdateWithoutProveedorInput, ProductoUncheckedUpdateWithoutProveedorInput>
    create: XOR<ProductoCreateWithoutProveedorInput, ProductoUncheckedCreateWithoutProveedorInput>
  }

  export type ProductoUpdateWithWhereUniqueWithoutProveedorInput = {
    where: ProductoWhereUniqueInput
    data: XOR<ProductoUpdateWithoutProveedorInput, ProductoUncheckedUpdateWithoutProveedorInput>
  }

  export type ProductoUpdateManyWithWhereWithoutProveedorInput = {
    where: ProductoScalarWhereInput
    data: XOR<ProductoUpdateManyMutationInput, ProductoUncheckedUpdateManyWithoutProveedorInput>
  }

  export type Categoria_ProductoCreateWithoutProductosInput = {
    nombre_categoria: string
  }

  export type Categoria_ProductoUncheckedCreateWithoutProductosInput = {
    id_categoria?: number
    nombre_categoria: string
  }

  export type Categoria_ProductoCreateOrConnectWithoutProductosInput = {
    where: Categoria_ProductoWhereUniqueInput
    create: XOR<Categoria_ProductoCreateWithoutProductosInput, Categoria_ProductoUncheckedCreateWithoutProductosInput>
  }

  export type ProveedorCreateWithoutProductosInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
  }

  export type ProveedorUncheckedCreateWithoutProductosInput = {
    id_proveedor?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
  }

  export type ProveedorCreateOrConnectWithoutProductosInput = {
    where: ProveedorWhereUniqueInput
    create: XOR<ProveedorCreateWithoutProductosInput, ProveedorUncheckedCreateWithoutProductosInput>
  }

  export type MarcaCreateWithoutProductosInput = {
    nombre_marca: string
    pais_origen?: string | null
  }

  export type MarcaUncheckedCreateWithoutProductosInput = {
    id_marca?: number
    nombre_marca: string
    pais_origen?: string | null
  }

  export type MarcaCreateOrConnectWithoutProductosInput = {
    where: MarcaWhereUniqueInput
    create: XOR<MarcaCreateWithoutProductosInput, MarcaUncheckedCreateWithoutProductosInput>
  }

  export type Factura_DetalleCreateWithoutProductoInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
    factura_maestro: Factura_MaestroCreateNestedOneWithoutDetallesInput
  }

  export type Factura_DetalleUncheckedCreateWithoutProductoInput = {
    id_factura_detalle?: number
    factura_maestro_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleCreateOrConnectWithoutProductoInput = {
    where: Factura_DetalleWhereUniqueInput
    create: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput>
  }

  export type Factura_DetalleCreateManyProductoInputEnvelope = {
    data: Factura_DetalleCreateManyProductoInput | Factura_DetalleCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type InventarioCreateWithoutProductoInput = {
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
  }

  export type InventarioUncheckedCreateWithoutProductoInput = {
    id_inventario?: number
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
  }

  export type InventarioCreateOrConnectWithoutProductoInput = {
    where: InventarioWhereUniqueInput
    create: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput>
  }

  export type InventarioCreateManyProductoInputEnvelope = {
    data: InventarioCreateManyProductoInput | InventarioCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type Producto_DescuentoCreateWithoutProductoInput = {
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
    descuento: DescuentoCreateNestedOneWithoutProductosInput
  }

  export type Producto_DescuentoUncheckedCreateWithoutProductoInput = {
    id_producto_descuento?: number
    descuento_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoCreateOrConnectWithoutProductoInput = {
    where: Producto_DescuentoWhereUniqueInput
    create: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput>
  }

  export type Producto_DescuentoCreateManyProductoInputEnvelope = {
    data: Producto_DescuentoCreateManyProductoInput | Producto_DescuentoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type Categoria_ProductoUpsertWithoutProductosInput = {
    update: XOR<Categoria_ProductoUpdateWithoutProductosInput, Categoria_ProductoUncheckedUpdateWithoutProductosInput>
    create: XOR<Categoria_ProductoCreateWithoutProductosInput, Categoria_ProductoUncheckedCreateWithoutProductosInput>
    where?: Categoria_ProductoWhereInput
  }

  export type Categoria_ProductoUpdateToOneWithWhereWithoutProductosInput = {
    where?: Categoria_ProductoWhereInput
    data: XOR<Categoria_ProductoUpdateWithoutProductosInput, Categoria_ProductoUncheckedUpdateWithoutProductosInput>
  }

  export type Categoria_ProductoUpdateWithoutProductosInput = {
    nombre_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type Categoria_ProductoUncheckedUpdateWithoutProductosInput = {
    id_categoria?: IntFieldUpdateOperationsInput | number
    nombre_categoria?: StringFieldUpdateOperationsInput | string
  }

  export type ProveedorUpsertWithoutProductosInput = {
    update: XOR<ProveedorUpdateWithoutProductosInput, ProveedorUncheckedUpdateWithoutProductosInput>
    create: XOR<ProveedorCreateWithoutProductosInput, ProveedorUncheckedCreateWithoutProductosInput>
    where?: ProveedorWhereInput
  }

  export type ProveedorUpdateToOneWithWhereWithoutProductosInput = {
    where?: ProveedorWhereInput
    data: XOR<ProveedorUpdateWithoutProductosInput, ProveedorUncheckedUpdateWithoutProductosInput>
  }

  export type ProveedorUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type ProveedorUncheckedUpdateWithoutProductosInput = {
    id_proveedor?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
  }

  export type MarcaUpsertWithoutProductosInput = {
    update: XOR<MarcaUpdateWithoutProductosInput, MarcaUncheckedUpdateWithoutProductosInput>
    create: XOR<MarcaCreateWithoutProductosInput, MarcaUncheckedCreateWithoutProductosInput>
    where?: MarcaWhereInput
  }

  export type MarcaUpdateToOneWithWhereWithoutProductosInput = {
    where?: MarcaWhereInput
    data: XOR<MarcaUpdateWithoutProductosInput, MarcaUncheckedUpdateWithoutProductosInput>
  }

  export type MarcaUpdateWithoutProductosInput = {
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MarcaUncheckedUpdateWithoutProductosInput = {
    id_marca?: IntFieldUpdateOperationsInput | number
    nombre_marca?: StringFieldUpdateOperationsInput | string
    pais_origen?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Factura_DetalleUpsertWithWhereUniqueWithoutProductoInput = {
    where: Factura_DetalleWhereUniqueInput
    update: XOR<Factura_DetalleUpdateWithoutProductoInput, Factura_DetalleUncheckedUpdateWithoutProductoInput>
    create: XOR<Factura_DetalleCreateWithoutProductoInput, Factura_DetalleUncheckedCreateWithoutProductoInput>
  }

  export type Factura_DetalleUpdateWithWhereUniqueWithoutProductoInput = {
    where: Factura_DetalleWhereUniqueInput
    data: XOR<Factura_DetalleUpdateWithoutProductoInput, Factura_DetalleUncheckedUpdateWithoutProductoInput>
  }

  export type Factura_DetalleUpdateManyWithWhereWithoutProductoInput = {
    where: Factura_DetalleScalarWhereInput
    data: XOR<Factura_DetalleUpdateManyMutationInput, Factura_DetalleUncheckedUpdateManyWithoutProductoInput>
  }

  export type Factura_DetalleScalarWhereInput = {
    AND?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
    OR?: Factura_DetalleScalarWhereInput[]
    NOT?: Factura_DetalleScalarWhereInput | Factura_DetalleScalarWhereInput[]
    id_factura_detalle?: IntFilter<"Factura_Detalle"> | number
    factura_maestro_id?: IntFilter<"Factura_Detalle"> | number
    producto_id?: IntFilter<"Factura_Detalle"> | number
    cantidad?: IntFilter<"Factura_Detalle"> | number
    precio_unitario?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFilter<"Factura_Detalle"> | Decimal | DecimalJsLike | number | string
  }

  export type InventarioUpsertWithWhereUniqueWithoutProductoInput = {
    where: InventarioWhereUniqueInput
    update: XOR<InventarioUpdateWithoutProductoInput, InventarioUncheckedUpdateWithoutProductoInput>
    create: XOR<InventarioCreateWithoutProductoInput, InventarioUncheckedCreateWithoutProductoInput>
  }

  export type InventarioUpdateWithWhereUniqueWithoutProductoInput = {
    where: InventarioWhereUniqueInput
    data: XOR<InventarioUpdateWithoutProductoInput, InventarioUncheckedUpdateWithoutProductoInput>
  }

  export type InventarioUpdateManyWithWhereWithoutProductoInput = {
    where: InventarioScalarWhereInput
    data: XOR<InventarioUpdateManyMutationInput, InventarioUncheckedUpdateManyWithoutProductoInput>
  }

  export type InventarioScalarWhereInput = {
    AND?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    OR?: InventarioScalarWhereInput[]
    NOT?: InventarioScalarWhereInput | InventarioScalarWhereInput[]
    id_inventario?: IntFilter<"Inventario"> | number
    producto_id?: IntFilter<"Inventario"> | number
    cantidad?: IntFilter<"Inventario"> | number
    fecha_movimiento?: DateTimeFilter<"Inventario"> | Date | string
    tipo_movimiento?: StringFilter<"Inventario"> | string
  }

  export type Producto_DescuentoUpsertWithWhereUniqueWithoutProductoInput = {
    where: Producto_DescuentoWhereUniqueInput
    update: XOR<Producto_DescuentoUpdateWithoutProductoInput, Producto_DescuentoUncheckedUpdateWithoutProductoInput>
    create: XOR<Producto_DescuentoCreateWithoutProductoInput, Producto_DescuentoUncheckedCreateWithoutProductoInput>
  }

  export type Producto_DescuentoUpdateWithWhereUniqueWithoutProductoInput = {
    where: Producto_DescuentoWhereUniqueInput
    data: XOR<Producto_DescuentoUpdateWithoutProductoInput, Producto_DescuentoUncheckedUpdateWithoutProductoInput>
  }

  export type Producto_DescuentoUpdateManyWithWhereWithoutProductoInput = {
    where: Producto_DescuentoScalarWhereInput
    data: XOR<Producto_DescuentoUpdateManyMutationInput, Producto_DescuentoUncheckedUpdateManyWithoutProductoInput>
  }

  export type Producto_DescuentoScalarWhereInput = {
    AND?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
    OR?: Producto_DescuentoScalarWhereInput[]
    NOT?: Producto_DescuentoScalarWhereInput | Producto_DescuentoScalarWhereInput[]
    id_producto_descuento?: IntFilter<"Producto_Descuento"> | number
    producto_id?: IntFilter<"Producto_Descuento"> | number
    descuento_id?: IntFilter<"Producto_Descuento"> | number
    cantidad_aplicada?: DecimalFilter<"Producto_Descuento"> | Decimal | DecimalJsLike | number | string
  }

  export type Factura_MaestroCreateWithoutClienteInput = {
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    detalles?: Factura_DetalleCreateNestedManyWithoutFactura_maestroInput
    ventas?: Venta_Factura_MaestroCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroUncheckedCreateWithoutClienteInput = {
    id_factura_maestro?: number
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    detalles?: Factura_DetalleUncheckedCreateNestedManyWithoutFactura_maestroInput
    ventas?: Venta_Factura_MaestroUncheckedCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroCreateOrConnectWithoutClienteInput = {
    where: Factura_MaestroWhereUniqueInput
    create: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput>
  }

  export type Factura_MaestroCreateManyClienteInputEnvelope = {
    data: Factura_MaestroCreateManyClienteInput | Factura_MaestroCreateManyClienteInput[]
    skipDuplicates?: boolean
  }

  export type Factura_MaestroUpsertWithWhereUniqueWithoutClienteInput = {
    where: Factura_MaestroWhereUniqueInput
    update: XOR<Factura_MaestroUpdateWithoutClienteInput, Factura_MaestroUncheckedUpdateWithoutClienteInput>
    create: XOR<Factura_MaestroCreateWithoutClienteInput, Factura_MaestroUncheckedCreateWithoutClienteInput>
  }

  export type Factura_MaestroUpdateWithWhereUniqueWithoutClienteInput = {
    where: Factura_MaestroWhereUniqueInput
    data: XOR<Factura_MaestroUpdateWithoutClienteInput, Factura_MaestroUncheckedUpdateWithoutClienteInput>
  }

  export type Factura_MaestroUpdateManyWithWhereWithoutClienteInput = {
    where: Factura_MaestroScalarWhereInput
    data: XOR<Factura_MaestroUpdateManyMutationInput, Factura_MaestroUncheckedUpdateManyWithoutClienteInput>
  }

  export type Factura_MaestroScalarWhereInput = {
    AND?: Factura_MaestroScalarWhereInput | Factura_MaestroScalarWhereInput[]
    OR?: Factura_MaestroScalarWhereInput[]
    NOT?: Factura_MaestroScalarWhereInput | Factura_MaestroScalarWhereInput[]
    id_factura_maestro?: IntFilter<"Factura_Maestro"> | number
    numero_factura?: StringFilter<"Factura_Maestro"> | string
    cliente_id?: IntFilter<"Factura_Maestro"> | number
    fecha_factura?: DateTimeFilter<"Factura_Maestro"> | Date | string
    nit_cliente?: StringFilter<"Factura_Maestro"> | string
    total?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFilter<"Factura_Maestro"> | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFilter<"Factura_Maestro"> | string
    metodo_pago?: StringNullableFilter<"Factura_Maestro"> | string | null
  }

  export type ClienteCreateWithoutFacturasInput = {
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    fecha_registro: Date | string
  }

  export type ClienteUncheckedCreateWithoutFacturasInput = {
    id_cliente?: number
    nombre: string
    direccion?: string | null
    telefono?: string | null
    email: string
    fecha_registro: Date | string
  }

  export type ClienteCreateOrConnectWithoutFacturasInput = {
    where: ClienteWhereUniqueInput
    create: XOR<ClienteCreateWithoutFacturasInput, ClienteUncheckedCreateWithoutFacturasInput>
  }

  export type Factura_DetalleCreateWithoutFactura_maestroInput = {
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
    producto: ProductoCreateNestedOneWithoutDetallesFacturaInput
  }

  export type Factura_DetalleUncheckedCreateWithoutFactura_maestroInput = {
    id_factura_detalle?: number
    producto_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleCreateOrConnectWithoutFactura_maestroInput = {
    where: Factura_DetalleWhereUniqueInput
    create: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput>
  }

  export type Factura_DetalleCreateManyFactura_maestroInputEnvelope = {
    data: Factura_DetalleCreateManyFactura_maestroInput | Factura_DetalleCreateManyFactura_maestroInput[]
    skipDuplicates?: boolean
  }

  export type Venta_Factura_MaestroCreateWithoutFactura_maestroInput = {
    venta: VentaCreateNestedOneWithoutFacturasInput
  }

  export type Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput = {
    id_venta_factura?: number
    venta_id: number
  }

  export type Venta_Factura_MaestroCreateOrConnectWithoutFactura_maestroInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    create: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput>
  }

  export type Venta_Factura_MaestroCreateManyFactura_maestroInputEnvelope = {
    data: Venta_Factura_MaestroCreateManyFactura_maestroInput | Venta_Factura_MaestroCreateManyFactura_maestroInput[]
    skipDuplicates?: boolean
  }

  export type ClienteUpsertWithoutFacturasInput = {
    update: XOR<ClienteUpdateWithoutFacturasInput, ClienteUncheckedUpdateWithoutFacturasInput>
    create: XOR<ClienteCreateWithoutFacturasInput, ClienteUncheckedCreateWithoutFacturasInput>
    where?: ClienteWhereInput
  }

  export type ClienteUpdateToOneWithWhereWithoutFacturasInput = {
    where?: ClienteWhereInput
    data: XOR<ClienteUpdateWithoutFacturasInput, ClienteUncheckedUpdateWithoutFacturasInput>
  }

  export type ClienteUpdateWithoutFacturasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClienteUncheckedUpdateWithoutFacturasInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    fecha_registro?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Factura_DetalleUpsertWithWhereUniqueWithoutFactura_maestroInput = {
    where: Factura_DetalleWhereUniqueInput
    update: XOR<Factura_DetalleUpdateWithoutFactura_maestroInput, Factura_DetalleUncheckedUpdateWithoutFactura_maestroInput>
    create: XOR<Factura_DetalleCreateWithoutFactura_maestroInput, Factura_DetalleUncheckedCreateWithoutFactura_maestroInput>
  }

  export type Factura_DetalleUpdateWithWhereUniqueWithoutFactura_maestroInput = {
    where: Factura_DetalleWhereUniqueInput
    data: XOR<Factura_DetalleUpdateWithoutFactura_maestroInput, Factura_DetalleUncheckedUpdateWithoutFactura_maestroInput>
  }

  export type Factura_DetalleUpdateManyWithWhereWithoutFactura_maestroInput = {
    where: Factura_DetalleScalarWhereInput
    data: XOR<Factura_DetalleUpdateManyMutationInput, Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroInput>
  }

  export type Venta_Factura_MaestroUpsertWithWhereUniqueWithoutFactura_maestroInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    update: XOR<Venta_Factura_MaestroUpdateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedUpdateWithoutFactura_maestroInput>
    create: XOR<Venta_Factura_MaestroCreateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedCreateWithoutFactura_maestroInput>
  }

  export type Venta_Factura_MaestroUpdateWithWhereUniqueWithoutFactura_maestroInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    data: XOR<Venta_Factura_MaestroUpdateWithoutFactura_maestroInput, Venta_Factura_MaestroUncheckedUpdateWithoutFactura_maestroInput>
  }

  export type Venta_Factura_MaestroUpdateManyWithWhereWithoutFactura_maestroInput = {
    where: Venta_Factura_MaestroScalarWhereInput
    data: XOR<Venta_Factura_MaestroUpdateManyMutationInput, Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroInput>
  }

  export type Venta_Factura_MaestroScalarWhereInput = {
    AND?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
    OR?: Venta_Factura_MaestroScalarWhereInput[]
    NOT?: Venta_Factura_MaestroScalarWhereInput | Venta_Factura_MaestroScalarWhereInput[]
    id_venta_factura?: IntFilter<"Venta_Factura_Maestro"> | number
    venta_id?: IntFilter<"Venta_Factura_Maestro"> | number
    factura_maestro_id?: IntFilter<"Venta_Factura_Maestro"> | number
  }

  export type Factura_MaestroCreateWithoutDetallesInput = {
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    cliente: ClienteCreateNestedOneWithoutFacturasInput
    ventas?: Venta_Factura_MaestroCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroUncheckedCreateWithoutDetallesInput = {
    id_factura_maestro?: number
    numero_factura: string
    cliente_id: number
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    ventas?: Venta_Factura_MaestroUncheckedCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroCreateOrConnectWithoutDetallesInput = {
    where: Factura_MaestroWhereUniqueInput
    create: XOR<Factura_MaestroCreateWithoutDetallesInput, Factura_MaestroUncheckedCreateWithoutDetallesInput>
  }

  export type ProductoCreateWithoutDetallesFacturaInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutDetallesFacturaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutDetallesFacturaInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutDetallesFacturaInput, ProductoUncheckedCreateWithoutDetallesFacturaInput>
  }

  export type Factura_MaestroUpsertWithoutDetallesInput = {
    update: XOR<Factura_MaestroUpdateWithoutDetallesInput, Factura_MaestroUncheckedUpdateWithoutDetallesInput>
    create: XOR<Factura_MaestroCreateWithoutDetallesInput, Factura_MaestroUncheckedCreateWithoutDetallesInput>
    where?: Factura_MaestroWhereInput
  }

  export type Factura_MaestroUpdateToOneWithWhereWithoutDetallesInput = {
    where?: Factura_MaestroWhereInput
    data: XOR<Factura_MaestroUpdateWithoutDetallesInput, Factura_MaestroUncheckedUpdateWithoutDetallesInput>
  }

  export type Factura_MaestroUpdateWithoutDetallesInput = {
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneRequiredWithoutFacturasNestedInput
    ventas?: Venta_Factura_MaestroUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroUncheckedUpdateWithoutDetallesInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    cliente_id?: IntFieldUpdateOperationsInput | number
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    ventas?: Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroNestedInput
  }

  export type ProductoUpsertWithoutDetallesFacturaInput = {
    update: XOR<ProductoUpdateWithoutDetallesFacturaInput, ProductoUncheckedUpdateWithoutDetallesFacturaInput>
    create: XOR<ProductoCreateWithoutDetallesFacturaInput, ProductoUncheckedCreateWithoutDetallesFacturaInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutDetallesFacturaInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutDetallesFacturaInput, ProductoUncheckedUpdateWithoutDetallesFacturaInput>
  }

  export type ProductoUpdateWithoutDetallesFacturaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutDetallesFacturaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoCreateWithoutInventariosInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutInventariosInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    descuentos?: Producto_DescuentoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutInventariosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutInventariosInput, ProductoUncheckedCreateWithoutInventariosInput>
  }

  export type ProductoUpsertWithoutInventariosInput = {
    update: XOR<ProductoUpdateWithoutInventariosInput, ProductoUncheckedUpdateWithoutInventariosInput>
    create: XOR<ProductoCreateWithoutInventariosInput, ProductoUncheckedCreateWithoutInventariosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutInventariosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutInventariosInput, ProductoUncheckedUpdateWithoutInventariosInput>
  }

  export type ProductoUpdateWithoutInventariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutInventariosInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type VentaCreateWithoutSucursalInput = {
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
    facturas?: Venta_Factura_MaestroCreateNestedManyWithoutVentaInput
  }

  export type VentaUncheckedCreateWithoutSucursalInput = {
    id_venta?: number
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
    facturas?: Venta_Factura_MaestroUncheckedCreateNestedManyWithoutVentaInput
  }

  export type VentaCreateOrConnectWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaCreateManySucursalInputEnvelope = {
    data: VentaCreateManySucursalInput | VentaCreateManySucursalInput[]
    skipDuplicates?: boolean
  }

  export type VentaUpsertWithWhereUniqueWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    update: XOR<VentaUpdateWithoutSucursalInput, VentaUncheckedUpdateWithoutSucursalInput>
    create: XOR<VentaCreateWithoutSucursalInput, VentaUncheckedCreateWithoutSucursalInput>
  }

  export type VentaUpdateWithWhereUniqueWithoutSucursalInput = {
    where: VentaWhereUniqueInput
    data: XOR<VentaUpdateWithoutSucursalInput, VentaUncheckedUpdateWithoutSucursalInput>
  }

  export type VentaUpdateManyWithWhereWithoutSucursalInput = {
    where: VentaScalarWhereInput
    data: XOR<VentaUpdateManyMutationInput, VentaUncheckedUpdateManyWithoutSucursalInput>
  }

  export type VentaScalarWhereInput = {
    AND?: VentaScalarWhereInput | VentaScalarWhereInput[]
    OR?: VentaScalarWhereInput[]
    NOT?: VentaScalarWhereInput | VentaScalarWhereInput[]
    id_venta?: IntFilter<"Venta"> | number
    sucursal_id?: IntFilter<"Venta"> | number
    total_venta?: DecimalFilter<"Venta"> | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFilter<"Venta"> | Date | string
    numero_facturas?: IntFilter<"Venta"> | number
  }

  export type SucursalCreateWithoutVentasInput = {
    nombre_sucursal: string
    direccion?: string | null
    telefono?: string | null
  }

  export type SucursalUncheckedCreateWithoutVentasInput = {
    id_sucursal?: number
    nombre_sucursal: string
    direccion?: string | null
    telefono?: string | null
  }

  export type SucursalCreateOrConnectWithoutVentasInput = {
    where: SucursalWhereUniqueInput
    create: XOR<SucursalCreateWithoutVentasInput, SucursalUncheckedCreateWithoutVentasInput>
  }

  export type Venta_Factura_MaestroCreateWithoutVentaInput = {
    factura_maestro: Factura_MaestroCreateNestedOneWithoutVentasInput
  }

  export type Venta_Factura_MaestroUncheckedCreateWithoutVentaInput = {
    id_venta_factura?: number
    factura_maestro_id: number
  }

  export type Venta_Factura_MaestroCreateOrConnectWithoutVentaInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    create: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput>
  }

  export type Venta_Factura_MaestroCreateManyVentaInputEnvelope = {
    data: Venta_Factura_MaestroCreateManyVentaInput | Venta_Factura_MaestroCreateManyVentaInput[]
    skipDuplicates?: boolean
  }

  export type SucursalUpsertWithoutVentasInput = {
    update: XOR<SucursalUpdateWithoutVentasInput, SucursalUncheckedUpdateWithoutVentasInput>
    create: XOR<SucursalCreateWithoutVentasInput, SucursalUncheckedCreateWithoutVentasInput>
    where?: SucursalWhereInput
  }

  export type SucursalUpdateToOneWithWhereWithoutVentasInput = {
    where?: SucursalWhereInput
    data: XOR<SucursalUpdateWithoutVentasInput, SucursalUncheckedUpdateWithoutVentasInput>
  }

  export type SucursalUpdateWithoutVentasInput = {
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SucursalUncheckedUpdateWithoutVentasInput = {
    id_sucursal?: IntFieldUpdateOperationsInput | number
    nombre_sucursal?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Venta_Factura_MaestroUpsertWithWhereUniqueWithoutVentaInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    update: XOR<Venta_Factura_MaestroUpdateWithoutVentaInput, Venta_Factura_MaestroUncheckedUpdateWithoutVentaInput>
    create: XOR<Venta_Factura_MaestroCreateWithoutVentaInput, Venta_Factura_MaestroUncheckedCreateWithoutVentaInput>
  }

  export type Venta_Factura_MaestroUpdateWithWhereUniqueWithoutVentaInput = {
    where: Venta_Factura_MaestroWhereUniqueInput
    data: XOR<Venta_Factura_MaestroUpdateWithoutVentaInput, Venta_Factura_MaestroUncheckedUpdateWithoutVentaInput>
  }

  export type Venta_Factura_MaestroUpdateManyWithWhereWithoutVentaInput = {
    where: Venta_Factura_MaestroScalarWhereInput
    data: XOR<Venta_Factura_MaestroUpdateManyMutationInput, Venta_Factura_MaestroUncheckedUpdateManyWithoutVentaInput>
  }

  export type VentaCreateWithoutFacturasInput = {
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
    sucursal: SucursalCreateNestedOneWithoutVentasInput
  }

  export type VentaUncheckedCreateWithoutFacturasInput = {
    id_venta?: number
    sucursal_id: number
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
  }

  export type VentaCreateOrConnectWithoutFacturasInput = {
    where: VentaWhereUniqueInput
    create: XOR<VentaCreateWithoutFacturasInput, VentaUncheckedCreateWithoutFacturasInput>
  }

  export type Factura_MaestroCreateWithoutVentasInput = {
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    cliente: ClienteCreateNestedOneWithoutFacturasInput
    detalles?: Factura_DetalleCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroUncheckedCreateWithoutVentasInput = {
    id_factura_maestro?: number
    numero_factura: string
    cliente_id: number
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
    detalles?: Factura_DetalleUncheckedCreateNestedManyWithoutFactura_maestroInput
  }

  export type Factura_MaestroCreateOrConnectWithoutVentasInput = {
    where: Factura_MaestroWhereUniqueInput
    create: XOR<Factura_MaestroCreateWithoutVentasInput, Factura_MaestroUncheckedCreateWithoutVentasInput>
  }

  export type VentaUpsertWithoutFacturasInput = {
    update: XOR<VentaUpdateWithoutFacturasInput, VentaUncheckedUpdateWithoutFacturasInput>
    create: XOR<VentaCreateWithoutFacturasInput, VentaUncheckedCreateWithoutFacturasInput>
    where?: VentaWhereInput
  }

  export type VentaUpdateToOneWithWhereWithoutFacturasInput = {
    where?: VentaWhereInput
    data: XOR<VentaUpdateWithoutFacturasInput, VentaUncheckedUpdateWithoutFacturasInput>
  }

  export type VentaUpdateWithoutFacturasInput = {
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
    sucursal?: SucursalUpdateOneRequiredWithoutVentasNestedInput
  }

  export type VentaUncheckedUpdateWithoutFacturasInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    sucursal_id?: IntFieldUpdateOperationsInput | number
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
  }

  export type Factura_MaestroUpsertWithoutVentasInput = {
    update: XOR<Factura_MaestroUpdateWithoutVentasInput, Factura_MaestroUncheckedUpdateWithoutVentasInput>
    create: XOR<Factura_MaestroCreateWithoutVentasInput, Factura_MaestroUncheckedCreateWithoutVentasInput>
    where?: Factura_MaestroWhereInput
  }

  export type Factura_MaestroUpdateToOneWithWhereWithoutVentasInput = {
    where?: Factura_MaestroWhereInput
    data: XOR<Factura_MaestroUpdateWithoutVentasInput, Factura_MaestroUncheckedUpdateWithoutVentasInput>
  }

  export type Factura_MaestroUpdateWithoutVentasInput = {
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    cliente?: ClienteUpdateOneRequiredWithoutFacturasNestedInput
    detalles?: Factura_DetalleUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroUncheckedUpdateWithoutVentasInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    cliente_id?: IntFieldUpdateOperationsInput | number
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Producto_DescuentoCreateWithoutDescuentoInput = {
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
    producto: ProductoCreateNestedOneWithoutDescuentosInput
  }

  export type Producto_DescuentoUncheckedCreateWithoutDescuentoInput = {
    id_producto_descuento?: number
    producto_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoCreateOrConnectWithoutDescuentoInput = {
    where: Producto_DescuentoWhereUniqueInput
    create: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput>
  }

  export type Producto_DescuentoCreateManyDescuentoInputEnvelope = {
    data: Producto_DescuentoCreateManyDescuentoInput | Producto_DescuentoCreateManyDescuentoInput[]
    skipDuplicates?: boolean
  }

  export type Producto_DescuentoUpsertWithWhereUniqueWithoutDescuentoInput = {
    where: Producto_DescuentoWhereUniqueInput
    update: XOR<Producto_DescuentoUpdateWithoutDescuentoInput, Producto_DescuentoUncheckedUpdateWithoutDescuentoInput>
    create: XOR<Producto_DescuentoCreateWithoutDescuentoInput, Producto_DescuentoUncheckedCreateWithoutDescuentoInput>
  }

  export type Producto_DescuentoUpdateWithWhereUniqueWithoutDescuentoInput = {
    where: Producto_DescuentoWhereUniqueInput
    data: XOR<Producto_DescuentoUpdateWithoutDescuentoInput, Producto_DescuentoUncheckedUpdateWithoutDescuentoInput>
  }

  export type Producto_DescuentoUpdateManyWithWhereWithoutDescuentoInput = {
    where: Producto_DescuentoScalarWhereInput
    data: XOR<Producto_DescuentoUpdateManyMutationInput, Producto_DescuentoUncheckedUpdateManyWithoutDescuentoInput>
  }

  export type ProductoCreateWithoutDescuentosInput = {
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria: Categoria_ProductoCreateNestedOneWithoutProductosInput
    proveedor: ProveedorCreateNestedOneWithoutProductosInput
    marca: MarcaCreateNestedOneWithoutProductosInput
    detallesFactura?: Factura_DetalleCreateNestedManyWithoutProductoInput
    inventarios?: InventarioCreateNestedManyWithoutProductoInput
  }

  export type ProductoUncheckedCreateWithoutDescuentosInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
    marca_id: number
    detallesFactura?: Factura_DetalleUncheckedCreateNestedManyWithoutProductoInput
    inventarios?: InventarioUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductoCreateOrConnectWithoutDescuentosInput = {
    where: ProductoWhereUniqueInput
    create: XOR<ProductoCreateWithoutDescuentosInput, ProductoUncheckedCreateWithoutDescuentosInput>
  }

  export type DescuentoCreateWithoutProductosInput = {
    nombre_descuento: string
    porcentaje?: Decimal | DecimalJsLike | number | string | null
    monto_fijo?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
  }

  export type DescuentoUncheckedCreateWithoutProductosInput = {
    id_descuento?: number
    nombre_descuento: string
    porcentaje?: Decimal | DecimalJsLike | number | string | null
    monto_fijo?: Decimal | DecimalJsLike | number | string | null
    fecha_inicio: Date | string
    fecha_fin: Date | string
  }

  export type DescuentoCreateOrConnectWithoutProductosInput = {
    where: DescuentoWhereUniqueInput
    create: XOR<DescuentoCreateWithoutProductosInput, DescuentoUncheckedCreateWithoutProductosInput>
  }

  export type ProductoUpsertWithoutDescuentosInput = {
    update: XOR<ProductoUpdateWithoutDescuentosInput, ProductoUncheckedUpdateWithoutDescuentosInput>
    create: XOR<ProductoCreateWithoutDescuentosInput, ProductoUncheckedCreateWithoutDescuentosInput>
    where?: ProductoWhereInput
  }

  export type ProductoUpdateToOneWithWhereWithoutDescuentosInput = {
    where?: ProductoWhereInput
    data: XOR<ProductoUpdateWithoutDescuentosInput, ProductoUncheckedUpdateWithoutDescuentosInput>
  }

  export type ProductoUpdateWithoutDescuentosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutDescuentosInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type DescuentoUpsertWithoutProductosInput = {
    update: XOR<DescuentoUpdateWithoutProductosInput, DescuentoUncheckedUpdateWithoutProductosInput>
    create: XOR<DescuentoCreateWithoutProductosInput, DescuentoUncheckedCreateWithoutProductosInput>
    where?: DescuentoWhereInput
  }

  export type DescuentoUpdateToOneWithWhereWithoutProductosInput = {
    where?: DescuentoWhereInput
    data: XOR<DescuentoUpdateWithoutProductosInput, DescuentoUncheckedUpdateWithoutProductosInput>
  }

  export type DescuentoUpdateWithoutProductosInput = {
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DescuentoUncheckedUpdateWithoutProductosInput = {
    id_descuento?: IntFieldUpdateOperationsInput | number
    nombre_descuento?: StringFieldUpdateOperationsInput | string
    porcentaje?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monto_fijo?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductoCreateManyMarcaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    proveedor_id: number
  }

  export type ProductoUpdateWithoutMarcaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutMarcaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutMarcaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoCreateManyCategoriaInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    proveedor_id: number
    marca_id: number
  }

  export type ProductoUpdateWithoutCategoriaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    proveedor?: ProveedorUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutCategoriaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutCategoriaInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
  }

  export type ProductoCreateManyProveedorInput = {
    id_producto?: number
    nombre: string
    descripcion?: string | null
    precio: Decimal | DecimalJsLike | number | string
    stock_disponible: number
    categoria_id: number
    marca_id: number
  }

  export type ProductoUpdateWithoutProveedorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria?: Categoria_ProductoUpdateOneRequiredWithoutProductosNestedInput
    marca?: MarcaUpdateOneRequiredWithoutProductosNestedInput
    detallesFactura?: Factura_DetalleUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateWithoutProveedorInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
    detallesFactura?: Factura_DetalleUncheckedUpdateManyWithoutProductoNestedInput
    inventarios?: InventarioUncheckedUpdateManyWithoutProductoNestedInput
    descuentos?: Producto_DescuentoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductoUncheckedUpdateManyWithoutProveedorInput = {
    id_producto?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock_disponible?: IntFieldUpdateOperationsInput | number
    categoria_id?: IntFieldUpdateOperationsInput | number
    marca_id?: IntFieldUpdateOperationsInput | number
  }

  export type Factura_DetalleCreateManyProductoInput = {
    id_factura_detalle?: number
    factura_maestro_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type InventarioCreateManyProductoInput = {
    id_inventario?: number
    cantidad: number
    fecha_movimiento: Date | string
    tipo_movimiento: string
  }

  export type Producto_DescuentoCreateManyProductoInput = {
    id_producto_descuento?: number
    descuento_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    factura_maestro?: Factura_MaestroUpdateOneRequiredWithoutDetallesNestedInput
  }

  export type Factura_DetalleUncheckedUpdateWithoutProductoInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUncheckedUpdateManyWithoutProductoInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type InventarioUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type InventarioUncheckedUpdateWithoutProductoInput = {
    id_inventario?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type InventarioUncheckedUpdateManyWithoutProductoInput = {
    id_inventario?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha_movimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_movimiento?: StringFieldUpdateOperationsInput | string
  }

  export type Producto_DescuentoUpdateWithoutProductoInput = {
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descuento?: DescuentoUpdateOneRequiredWithoutProductosNestedInput
  }

  export type Producto_DescuentoUncheckedUpdateWithoutProductoInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    descuento_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUncheckedUpdateManyWithoutProductoInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    descuento_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Factura_MaestroCreateManyClienteInput = {
    id_factura_maestro?: number
    numero_factura: string
    fecha_factura: Date | string
    nit_cliente: string
    total: Decimal | DecimalJsLike | number | string
    total_pagado?: Decimal | DecimalJsLike | number | string
    estado_factura: string
    metodo_pago?: string | null
  }

  export type Factura_MaestroUpdateWithoutClienteInput = {
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: Factura_DetalleUpdateManyWithoutFactura_maestroNestedInput
    ventas?: Venta_Factura_MaestroUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroUncheckedUpdateWithoutClienteInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroNestedInput
    ventas?: Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroNestedInput
  }

  export type Factura_MaestroUncheckedUpdateManyWithoutClienteInput = {
    id_factura_maestro?: IntFieldUpdateOperationsInput | number
    numero_factura?: StringFieldUpdateOperationsInput | string
    fecha_factura?: DateTimeFieldUpdateOperationsInput | Date | string
    nit_cliente?: StringFieldUpdateOperationsInput | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_pagado?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado_factura?: StringFieldUpdateOperationsInput | string
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Factura_DetalleCreateManyFactura_maestroInput = {
    id_factura_detalle?: number
    producto_id: number
    cantidad: number
    precio_unitario: Decimal | DecimalJsLike | number | string
    total_producto: Decimal | DecimalJsLike | number | string
  }

  export type Venta_Factura_MaestroCreateManyFactura_maestroInput = {
    id_venta_factura?: number
    venta_id: number
  }

  export type Factura_DetalleUpdateWithoutFactura_maestroInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: ProductoUpdateOneRequiredWithoutDetallesFacturaNestedInput
  }

  export type Factura_DetalleUncheckedUpdateWithoutFactura_maestroInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Factura_DetalleUncheckedUpdateManyWithoutFactura_maestroInput = {
    id_factura_detalle?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    precio_unitario?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total_producto?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Venta_Factura_MaestroUpdateWithoutFactura_maestroInput = {
    venta?: VentaUpdateOneRequiredWithoutFacturasNestedInput
  }

  export type Venta_Factura_MaestroUncheckedUpdateWithoutFactura_maestroInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    venta_id?: IntFieldUpdateOperationsInput | number
  }

  export type Venta_Factura_MaestroUncheckedUpdateManyWithoutFactura_maestroInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    venta_id?: IntFieldUpdateOperationsInput | number
  }

  export type VentaCreateManySucursalInput = {
    id_venta?: number
    total_venta: Decimal | DecimalJsLike | number | string
    fecha_venta: Date | string
    numero_facturas: number
  }

  export type VentaUpdateWithoutSucursalInput = {
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
    facturas?: Venta_Factura_MaestroUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateWithoutSucursalInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
    facturas?: Venta_Factura_MaestroUncheckedUpdateManyWithoutVentaNestedInput
  }

  export type VentaUncheckedUpdateManyWithoutSucursalInput = {
    id_venta?: IntFieldUpdateOperationsInput | number
    total_venta?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha_venta?: DateTimeFieldUpdateOperationsInput | Date | string
    numero_facturas?: IntFieldUpdateOperationsInput | number
  }

  export type Venta_Factura_MaestroCreateManyVentaInput = {
    id_venta_factura?: number
    factura_maestro_id: number
  }

  export type Venta_Factura_MaestroUpdateWithoutVentaInput = {
    factura_maestro?: Factura_MaestroUpdateOneRequiredWithoutVentasNestedInput
  }

  export type Venta_Factura_MaestroUncheckedUpdateWithoutVentaInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
  }

  export type Venta_Factura_MaestroUncheckedUpdateManyWithoutVentaInput = {
    id_venta_factura?: IntFieldUpdateOperationsInput | number
    factura_maestro_id?: IntFieldUpdateOperationsInput | number
  }

  export type Producto_DescuentoCreateManyDescuentoInput = {
    id_producto_descuento?: number
    producto_id: number
    cantidad_aplicada: Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUpdateWithoutDescuentoInput = {
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    producto?: ProductoUpdateOneRequiredWithoutDescuentosNestedInput
  }

  export type Producto_DescuentoUncheckedUpdateWithoutDescuentoInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type Producto_DescuentoUncheckedUpdateManyWithoutDescuentoInput = {
    id_producto_descuento?: IntFieldUpdateOperationsInput | number
    producto_id?: IntFieldUpdateOperationsInput | number
    cantidad_aplicada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}